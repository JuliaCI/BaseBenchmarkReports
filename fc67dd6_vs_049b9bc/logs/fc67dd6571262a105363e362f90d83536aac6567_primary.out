cset: moving following pidspec: 16106
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.697074734 seconds)
loading group "string"... done (took 0.536850696 seconds)
loading group "linalg"... done (took 9.549851497 seconds)
loading group "parallel"... done (took 0.174155866 seconds)
loading group "find"... done (took 5.738072658 seconds)
loading group "tuple"... done (took 2.115877218 seconds)
loading group "dates"... done (took 1.420203949 seconds)
loading group "micro"... done (took 0.196982429 seconds)
loading group "io"... done (took 0.539354831 seconds)
loading group "scalar"... done (took 59.192547623 seconds)
loading group "sparse"... done (took 14.10263823 seconds)
loading group "broadcast"... done (took 1.763247842 seconds)
loading group "union"... done (took 11.337148393 seconds)
loading group "simd"... done (took 3.835919782 seconds)
loading group "random"... done (took 14.042019275 seconds)
loading group "problem"... done (took 2.298924082 seconds)
loading group "array"... done (took 24.507347576 seconds)
loading group "misc"... done (took 1.183349241 seconds)
loading group "sort"... done (took 3.709468066 seconds)
loading group "collection"... done (took 22.934963609 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.729476575 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.152528159 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203072648 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.215284159 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.287254052 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.174422784 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162926142 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.177141352 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.640249386 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214225227 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141458068 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.44775093 seconds)
done (took 6.324722556 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.270947331 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.247642364 seconds)
    (2/2) benchmarking "String"...
    done (took 0.192728218 seconds)
  done (took 1.163190578 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078880904 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.163420133 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.113889371 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.099810866 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097882384 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.115038302 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.098058125 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.114164769 seconds)
  done (took 1.529803508 seconds)
done (took 3.770424956 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.537007475 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.882348592 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.516787663 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.18388509 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.324169685 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.316465749 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.274861495 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.227872985 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093347244 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085423396 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177459868 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.422942614 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.39061844 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.980625758 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.071591227 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.098562891 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.162596385 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.786476257 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081441177 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110185025 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.542636786 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.222961901 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118945262 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.109551759 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189683007 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140129664 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142531857 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108132628 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.657276452 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134207367 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.216974205 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085603732 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.138401258 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166321475 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215521304 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114006771 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662824862 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201346459 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097376075 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104817209 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667265349 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118997862 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206098037 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108783993 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067985172 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.166975002 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.122783468 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083344749 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098203751 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.105928705 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169044447 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.444473497 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109121623 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195827959 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095126219 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687834975 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101803079 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278397685 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128330252 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096880279 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092657379 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089730643 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162891353 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096806899 seconds)
  done (took 20.357123385 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.174579695 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.193168862 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08215913 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163632798 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125264579 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103032019 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088927837 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082109066 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.132623595 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182549372 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144871086 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.197810579 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080856397 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093924961 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.177794547 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.236299181 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.131424983 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.109139052 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091495481 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.113018643 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127163754 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.118325477 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095989974 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095357911 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17720796 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209718654 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114703123 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127278482 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093568493 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098997307 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147623585 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150252387 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097533996 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092651827 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.193966657 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110906391 seconds)
  done (took 5.502203076 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.256736292 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.110005974 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.257894405 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.208338077 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.160523701 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.189091558 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.185360542 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.309057759 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.244590171 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167254761 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134382804 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099153024 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081039038 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08177131 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097709055 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.371214761 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.153947821 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.198725129 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.195320272 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103924532 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.104961566 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367507854 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106914634 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091590604 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.116857894 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066864936 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.236076315 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09906596 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.086920804 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085606977 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.124247418 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115582341 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.217402511 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130463576 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123155448 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116894049 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08952652 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.230380758 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122344591 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082083277 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116673319 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134373039 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115506732 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.114464584 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1287169 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221830897 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091688373 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114304722 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.058176939 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199813345 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.183259338 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.110136972 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294724972 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111545468 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123387828 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094308726 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.7999685 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119307824 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085722522 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.101566048 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100319018 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08164561 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.47827529 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11259032 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.292463566 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08755553 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161637351 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101177608 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120877249 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086960696 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105858089 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112006494 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090904203 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099930737 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089041859 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080996581 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109954215 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114044526 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.180717927 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085135971 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.102219394 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150078 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.10223617 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.131862488 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111084068 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.112613887 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.091248832 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132769862 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086162874 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090627155 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.191790893 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101381264 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.108302736 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11695157 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120789503 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.149064626 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095032909 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.264923542 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.101949052 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128406662 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104178309 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118636564 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.123571294 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.088309208 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085419736 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105767207 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08776762 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081297807 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.103413549 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152486059 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093111245 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101790006 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.094963243 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094035805 seconds)
  done (took 29.134602256 seconds)
done (took 55.72057229 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.447379467 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086148698 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085966864 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105594183 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083627456 seconds)
  done (took 1.618545643 seconds)
done (took 2.404379557 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.327921962 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.205859224 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105731052 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19330915 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08834346 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200283538 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188597217 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102358158 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.211571375 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087213186 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196345815 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088813012 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109670318 seconds)
  done (took 2.915176947 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1087667 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111423038 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105599999 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.126264203 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089563028 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106695402 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12627066 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112855535 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105739765 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118680883 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09049795 seconds)
  done (took 1.984028358 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105654659 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108722773 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09674457 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122678782 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089870216 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102650033 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123628118 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113157222 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102984426 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118139916 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09081448 seconds)
  done (took 1.959300658 seconds)
done (took 7.641585313 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262156835 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.963877795 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.193786862 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247375934 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.358958897 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.303145275 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.623758126 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.205381792 seconds)
  done (took 16.078655601 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.127576587 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100313587 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.198543646 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100963083 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.120228402 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101326626 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100119972 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.119341954 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101535222 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099832009 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.113184046 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09621021 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095606959 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093288313 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112767911 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.094687669 seconds)
  done (took 2.624867738 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.151274675 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.149845873 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102443883 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.104896856 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.119738241 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103073588 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10574249 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.122878086 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.098337883 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100305241 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.125100366 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103660747 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.1018311 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.116517856 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104182928 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.122682208 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.115702264 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104500001 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.119764541 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.120356519 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101328045 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097948559 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.118470077 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099927666 seconds)
  done (took 3.582981532 seconds)
done (took 23.073014996 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153959368 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108250146 seconds)
  done (took 1.050038507 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.172429531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.193225115 seconds)
  done (took 1.159563637 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.118130902 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094262439 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.144200063 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108634329 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09509824 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.113403763 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121366106 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.113839698 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096238253 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094669467 seconds)
  done (took 1.897906766 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099890408 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100080205 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.128256655 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.178445953 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.124341165 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099672641 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098950127 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.116829333 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101169276 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092436828 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.117938917 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.232002375 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.098738593 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.13304483 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099826023 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.119742166 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104873858 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098421441 seconds)
  done (took 2.940292036 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.094353635 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096594823 seconds)
  done (took 0.990353376 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.098053553 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095192168 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096610965 seconds)
    (4/7) benchmarking "year"...
    done (took 0.116027779 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095569937 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093974357 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.112974818 seconds)
  done (took 1.508004369 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.544795362 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.253089806 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.385891762 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07621656 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128568462 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.347255799 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.109917963 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075273318 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096495053 seconds)
  done (took 2.854876934 seconds)
done (took 13.198621593 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096161807 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.25250606 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.658675412 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.119062011 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094256011 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.167583913 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.329132782 seconds)
done (took 2.523843354 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360224477 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.172584055 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087434371 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09673065 seconds)
  done (took 1.515421577 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086587411 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104687916 seconds)
  done (took 0.997777414 seconds)
done (took 3.323494544 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094834732 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.129390916 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114553481 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093508816 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.094017361 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09321218 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.115517054 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094304406 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093347249 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.112768536 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.094236367 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.092691532 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090784533 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109182144 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094201491 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093427534 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.110248134 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09455043 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094132966 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093198214 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111509895 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094179308 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092973321 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.111959288 seconds)
  done (took 3.25550895 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.116369475 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095590872 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116378719 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09881818 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.098354973 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.116143898 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099055817 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095927198 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.117056909 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097029271 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098869272 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116126994 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097242096 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098886559 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115139904 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099438735 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099876719 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095260654 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1158492 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099370267 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098413041 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115015035 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098806344 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098230333 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.119098436 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100245496 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095133708 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.115219775 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098748406 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099506487 seconds)
  done (took 3.930891157 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.102703557 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091540463 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093931436 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.120701517 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091150846 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094405328 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10952781 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094956886 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096574452 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092952484 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.115766337 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093971123 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095245289 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.114623217 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096770012 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099729309 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.12152955 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096993659 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094529009 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095276632 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.117410227 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094840278 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094925998 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.113328688 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095601339 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091947942 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095125426 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.113501438 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096315339 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093687864 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.117270249 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099880602 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09462995 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.122483436 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098867413 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094091323 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099738717 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.112072394 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095871493 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090853282 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.111036818 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095068386 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.094220855 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.119316812 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095538866 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094876786 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093939427 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.114522542 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096088919 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098291566 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.110291723 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09606878 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097329159 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09635626 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.117482609 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093015685 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094522697 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.110521863 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097050723 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.095465101 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091293414 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.111867751 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100848546 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094464812 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12983846 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101616902 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094827588 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.116303396 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096475759 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100816485 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.117795469 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105756447 seconds)
  done (took 8.1415484 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11983278 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104213979 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.115659192 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097856871 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097864167 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094523279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121168185 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096191387 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097021955 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121332776 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096746574 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096149791 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115035194 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099211236 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095611577 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.11860048 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101787774 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095660579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.095582998 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116298784 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096268126 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099703487 seconds)
  done (took 3.108455688 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.248445773 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102818246 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145258987 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.128960141 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113937796 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.129166081 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101112854 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102091585 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119882051 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106621089 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104777859 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118944303 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114153942 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123339499 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107497688 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106327988 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119238179 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107488036 seconds)
  done (took 3.017759989 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.110156989 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099389797 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.162514914 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098365815 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096740303 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.117633795 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10470281 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117079754 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.118141294 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100120675 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.104367206 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117302565 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099516197 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098504935 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117125754 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100193473 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099050011 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117452091 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107218081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103442419 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.122107949 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10664547 seconds)
  done (took 3.235189466 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112000554 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099456702 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.137841755 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103126642 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09786128 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.116986133 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103633314 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098526212 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.124705803 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098762786 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09817478 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097026365 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.134302046 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099010891 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103086562 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116723446 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099243473 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096462396 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116280045 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099384258 seconds)
  done (took 2.97326758 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.204620135 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134293108 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116298987 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12331187 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134907743 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11418789 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.141490538 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115137422 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114629401 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145756966 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118653814 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114770969 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.143833529 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120772969 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134537569 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12355559 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141141747 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124126454 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114045028 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134078196 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127952001 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115127752 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.141284663 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114636902 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129434339 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113220442 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111221827 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137227332 seconds)
  done (took 4.427975906 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097220385 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096508713 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.0967841 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.116020303 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.097509928 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095182555 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092540006 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.115402243 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096858879 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095373165 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.115621393 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098460467 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09739123 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096051043 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117841614 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097626973 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096385747 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.116181755 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097772987 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097191704 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.096018411 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117277464 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096760853 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096003446 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115970899 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097819493 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094240636 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091740133 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114766505 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097479094 seconds)
  done (took 3.870636669 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.110652389 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107610679 seconds)
  done (took 1.046083655 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.104353215 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110615727 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092455076 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.117324982 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104261569 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093027852 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.123252254 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101483052 seconds)
  done (took 1.675726578 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.175271196 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.20209436 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.102658392 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.130813417 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.181272921 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.192157363 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138257031 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.125685852 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.096620804 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089693426 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.194767782 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.089114551 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.121614905 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095837196 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.097750424 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.125831733 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098822574 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107385795 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.126422046 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101652699 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102762411 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12389877 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101786436 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107988302 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.113027658 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.102915037 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100610651 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.129545188 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096121113 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09820967 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.11700758 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.100545714 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102048653 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.122829856 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102895926 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.203339447 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106615458 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094844656 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.120312827 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104630344 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.131953939 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.119947652 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.100885956 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.096620187 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.121772041 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104481948 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104559437 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.118880969 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.093081731 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.093619069 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.118950419 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095647975 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.099182534 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098726849 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.119582514 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103980075 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097425241 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.115873665 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.095074768 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.093867727 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.116991112 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.096091795 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100381277 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.123097136 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100008223 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.098416229 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.119137437 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.100384212 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.100333328 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.119802619 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09916276 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113384458 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.119927824 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104555373 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103837255 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.120779857 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09734658 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104619758 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.117709351 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.100573216 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102716003 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.149373757 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102825845 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093555943 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.112081335 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104836428 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096122006 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.117905613 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091041868 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101726633 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.117272276 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101930781 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089138234 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095141208 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.112291214 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103398066 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.091279607 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.119642863 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09949194 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10429643 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12406586 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100063393 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.100096548 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.125469613 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10650696 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.098396238 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.189662642 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095068176 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.112272734 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.102601361 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102955384 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.093091146 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.12103502 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.100206172 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096231668 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.11591293 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105239471 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.099633183 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.120758546 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104834611 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101705188 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.121024154 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103383019 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098564601 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.116203948 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10538382 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10847669 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.121772474 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102978115 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099916821 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100609855 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.120686131 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103616481 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.096863674 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.127566242 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098509749 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098719333 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.121303839 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106094458 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099748698 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.116076744 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099763683 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.100434368 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.119297618 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103556277 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10083786 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.116306696 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.094088336 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.101013343 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.115586647 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.101717844 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108639208 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.116612535 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.104648643 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.097135886 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107637112 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.119662756 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106735404 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101683701 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.126239207 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103952515 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087056072 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114451285 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102345318 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096690123 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.113087373 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101358096 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099172963 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.126596961 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095419652 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.1085556 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088018833 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.11550082 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106485524 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100460775 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.123226279 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.097741322 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.140119863 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.133150912 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106445082 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.098846666 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.120978905 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105173589 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099796387 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.124989063 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107969441 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105123888 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.118515559 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.100910692 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106610889 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.117128867 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.1037996 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098983807 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120829433 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.093870297 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101853604 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.092275495 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.125789176 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10185746 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105105189 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.123271741 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103279369 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099488184 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.139158564 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.097369128 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103230956 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.113494688 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106419711 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111742465 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.127398809 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108301294 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.101751967 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118315329 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.104343593 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108949499 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101718641 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.122276633 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.102340646 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.093700683 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.11487726 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107909749 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10299342 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.117496852 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.101915379 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104725719 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122160578 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099867702 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.092726129 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103404899 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127676676 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.096531612 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097606145 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.119111584 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.099399978 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127370692 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.095082527 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.097329188 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.101858714 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.123189107 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09992278 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.097131995 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.124723413 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.107112624 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099672991 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.118501367 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099834692 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105390948 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.116180781 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.102317675 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.097290637 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099731061 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.11456236 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.104120152 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.098133214 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.118187283 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.095852521 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098212127 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123376002 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101249667 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092323434 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.120712608 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10090103 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101110594 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111758297 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102066517 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090852011 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107643544 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092277675 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087520264 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096121453 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.112993866 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.09946308 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092064616 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113710461 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099653535 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096278138 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.112266545 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100854177 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10420184 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.111202852 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089069965 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09247926 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114688303 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09274678 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090890788 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.117148913 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097149429 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098977757 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119474984 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092374881 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094371977 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120296147 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093153293 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101308232 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.121233726 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102279606 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091647848 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098522856 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.113241665 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098929547 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087911101 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11432119 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094490602 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094281996 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.112011956 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094349738 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09080538 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.107157839 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09243338 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10072536 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113714633 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100079877 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094940652 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112474849 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09251325 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09210845 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.11978736 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095399589 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101100901 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095966844 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.110103032 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08903083 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099313645 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114899127 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10100318 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090701334 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119030675 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101877036 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098968399 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.115729956 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104650491 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102258361 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120781992 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102404447 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088909285 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092393449 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119840878 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095038383 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096358012 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.117969875 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089896359 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09679043 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.121550531 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097390309 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093201658 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.110005545 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.0963642 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101515966 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.117298597 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.101551263 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097498717 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095452946 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.112156615 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098400596 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100267631 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.116086226 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101372633 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094107778 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.118538032 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093232285 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101146957 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116954024 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090103992 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08876696 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111987121 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102891087 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089940857 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099429454 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.121007017 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092284421 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093670561 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.119888656 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092992914 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097645357 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120743847 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094191744 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105375021 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.116877079 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.095467171 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099558638 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120282077 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090220056 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093698816 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094238629 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123345186 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093600803 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100036199 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116418791 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101269835 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098568343 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120816172 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101740547 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099518669 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107872063 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103030375 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09853066 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.117991408 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093820585 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093308416 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09006241 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115749486 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101242852 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092080729 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125147831 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101617751 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093458276 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113742403 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101720793 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094603272 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121957514 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093657355 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096266121 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109513159 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.099003022 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09462017 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.122083516 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092969636 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089733395 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120048928 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100649913 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100230949 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098769464 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.123216413 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089640802 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089045567 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.118963631 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.0930557 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105151148 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119188654 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094698492 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094344785 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.117677908 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098003917 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101997804 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.109698413 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.094316265 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096366851 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117262975 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095757408 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091046604 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100325958 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115758406 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098220657 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093919917 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.111265229 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095633085 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102510401 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.115029981 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092999956 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093620971 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123804363 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095787925 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093667975 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.109818875 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10254681 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097343119 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122764105 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093999782 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096923184 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113856801 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099750091 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10330497 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.11402475 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098019404 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095304227 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101559654 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122929489 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089890572 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094165824 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.127844743 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101095954 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097101695 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.1215626 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096511608 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101330675 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124315525 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099035368 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091100518 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111104571 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095566533 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09033324 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09788958 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1215918 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094159985 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.112241151 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102101397 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101266355 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098515251 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.120257847 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091144068 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103286847 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113599234 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099546454 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090196781 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110714206 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101437413 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102459153 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095399502 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.118915315 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098372653 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099119909 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.112357178 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094913257 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099709448 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122260415 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103124166 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096175902 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.115654062 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103398351 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107175607 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.118013964 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096002469 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103797593 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.122699664 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098257849 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096449027 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120316841 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105077613 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100106788 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103453511 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115213525 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096785445 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10313862 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124517446 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107453989 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095188402 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.111430181 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100975081 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094202881 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.112175447 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.102312824 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104812623 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.124162411 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097384329 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093529251 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127828343 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10312318 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096260666 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114879168 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095288911 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101903913 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114697712 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101707903 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094283498 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103896506 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.125851334 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102783319 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105089686 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.113218211 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103400861 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099265482 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.127427905 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098733051 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090953455 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.114500864 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101515684 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104060989 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.124668474 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10124577 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100215655 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102018977 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.119807055 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098120247 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094466471 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.125365923 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103222692 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098960616 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.120370376 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096037916 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098043779 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.118677985 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104723982 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104974105 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118041137 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109449748 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102769224 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095452043 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.114893771 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098218272 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099314577 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.120224621 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102984142 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093963667 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.112358832 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104401868 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10505824 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118344156 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106420229 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104330604 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115556984 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100939198 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105332717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.124929162 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101225683 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098849175 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100738497 seconds)
  done (took 64.265810637 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153179583 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104979082 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11971522 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099556822 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116070211 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12223414 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099273459 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100873844 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122757 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110412266 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099471592 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118946529 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11602206 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140878242 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117725136 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109107146 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119541047 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10304072 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10053008 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121242482 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11462812 seconds)
  done (took 3.290910828 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.124008428 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113292347 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131802128 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112829823 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10617967 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131972702 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110010301 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132068641 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115100272 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106962395 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134697596 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110991682 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127444409 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109003938 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108595487 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12840494 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114512704 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106128157 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133240641 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111212807 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128908744 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111353318 seconds)
  done (took 3.486277963 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.139169346 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103465147 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0977145 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.122542441 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103157057 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098747426 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123848079 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101483752 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108171322 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.117426184 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092052719 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095915061 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097362949 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120941244 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095582024 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099941968 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.131692057 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103889248 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106298678 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.120018354 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092152198 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100102844 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100475193 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112724506 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.340991591 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104564599 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.121469717 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102923228 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.09038097 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101502357 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.122272898 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094640252 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089807661 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111489223 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092124846 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103662535 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123388382 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101500267 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100039806 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090323639 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.122163829 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103852165 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091038277 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121314737 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100342003 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092812256 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102365013 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.120835571 seconds)
  done (took 6.212308614 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.134461126 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165554408 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104018526 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13751853 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137865672 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109651692 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103224304 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138810759 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101345219 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125093531 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115051457 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113572809 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127923345 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108667951 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.127585488 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106285385 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104475887 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101886574 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128900909 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102392366 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.128119037 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105537086 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113999831 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133847791 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106464133 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10221537 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124831429 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106595577 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112698238 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130478712 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105939533 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127856115 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11458409 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105188452 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12334656 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105516179 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11480637 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.126272084 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103966641 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101529842 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126604917 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108199251 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105570844 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136921045 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104847439 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106794253 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125871309 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10317863 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111907582 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.127279701 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111197882 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.136692154 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106963569 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105457238 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.129429282 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115279462 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103696259 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.126337422 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106472284 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112771042 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.123467868 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10734377 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114431013 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.126739248 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110267056 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.13455021 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107574871 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106362272 seconds)
  done (took 8.949501111 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141024401 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108176114 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136599855 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116644839 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107401699 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.131409312 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107705518 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106342065 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131014457 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113967563 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128765752 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.228371771 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12918495 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11258308 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13090243 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109495768 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108046975 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129996704 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109684873 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107711593 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128241431 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116990226 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107640316 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138054142 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119366095 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12542755 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108714321 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108208434 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1381366 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108055217 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11859058 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129660962 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108200467 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136093456 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122557793 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107654336 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124696752 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108982723 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108037144 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130908503 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105239711 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115899198 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129472153 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105682894 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107291269 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130562684 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11687533 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139115368 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112808166 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112401228 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129657561 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117051735 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128261972 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109977461 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117355867 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145290542 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115737726 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135976059 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10935582 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115580927 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138546062 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12362232 seconds)
  done (took 8.443527694 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108416905 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101848296 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100374696 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122706069 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102547459 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101258276 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100657348 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102010603 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101363048 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100442424 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123190879 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101373067 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099776291 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100010265 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122674587 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101905736 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100098914 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121992416 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101340343 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10054943 seconds)
  done (took 3.031773482 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.116701103 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119222852 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125053283 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109981956 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10326213 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129349713 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104698169 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103573723 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102283397 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126385244 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112067703 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130942601 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103893547 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108969686 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.133081449 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110289138 seconds)
  done (took 2.735897919 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12824623 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118467651 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.214563887 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105163259 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126466221 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112343109 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10440975 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129913027 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102799886 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107812166 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129771695 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106947064 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10418267 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.126591967 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104275633 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107009237 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102132884 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129802853 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105260164 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.219768122 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108056892 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104862325 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128194665 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107307825 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104392085 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130886409 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10957424 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102391877 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128020762 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104875725 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10511248 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132129055 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105032298 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107093875 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.125984537 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105792134 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103692406 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125007293 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107940738 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104497587 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.126910682 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106116313 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104391399 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105280022 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.125209005 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105573947 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102602469 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.132525892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10505376 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106182435 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.126139393 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10993657 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108049071 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132941327 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111176703 seconds)
  done (took 7.342674858 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.12181409 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105301066 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135927578 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102901304 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105006516 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105301572 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127208546 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10607202 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104227809 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124639493 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105476508 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105092944 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127890863 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106320389 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105628855 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128532953 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102746766 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10467771 seconds)
  done (took 2.929253702 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115763578 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10488735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106785963 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125945675 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103291487 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10362787 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124400144 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103827253 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102925748 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125156019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104131145 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103561641 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102680726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125405377 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105397128 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103624012 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125477775 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104161968 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104441405 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122815414 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104922465 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102952414 seconds)
  done (took 3.329864029 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.121969256 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.217286551 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110079665 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.225465722 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100781899 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122823084 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109981481 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101170341 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140952231 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101509009 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099839395 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122938324 seconds)
  done (took 2.481072293 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139913494 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140852112 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128149974 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105843486 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112314109 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131546589 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108441805 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109012371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138771255 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121162122 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131009725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118403984 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116260748 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139375698 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114301029 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136178389 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108919986 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10843393 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127423833 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12440803 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107993577 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138032413 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109318673 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129338973 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110626275 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116845016 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1394857 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120454891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130585959 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11809012 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113894672 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129960909 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116858936 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119094126 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127248163 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117427783 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129662175 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124965565 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11186265 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138956985 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105454921 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13347791 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11879089 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11367768 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138798809 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110434261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113731614 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132202343 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110504153 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150858125 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114380888 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116380741 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135837762 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117651797 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138225269 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129628763 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141443348 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117870661 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113335892 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144075645 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118221157 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134843319 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118110173 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142782189 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115504112 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116992264 seconds)
  done (took 9.059985858 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150630117 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105577621 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132013385 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120809133 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138120984 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111109958 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109563222 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130822517 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110392433 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106595606 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173052916 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111167771 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13887109 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118168036 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109720579 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130970536 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110729097 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11904439 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128406783 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133045581 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131930694 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119054246 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116498156 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140529689 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119853699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137218932 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110583838 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111073995 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131823855 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1104403 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113925346 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131957806 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118164193 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105394322 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140907365 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110041781 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131420705 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117393793 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109549391 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136252268 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118040734 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144422135 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110500459 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108979341 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142162303 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109789956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109952582 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132376762 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110330156 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105178097 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142130931 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121022206 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143070924 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117909429 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131418498 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110293047 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110602127 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131464933 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112220722 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114191898 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139583666 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11001146 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151599616 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110748011 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109308143 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139777212 seconds)
  done (took 9.034647215 seconds)
done (took 174.084753224 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.184782738 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.218686454 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.200030244 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159408058 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095302771 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153831175 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128957034 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.202426832 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.098118549 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095539443 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096253653 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.122483356 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163477835 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095213514 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119963787 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099103914 seconds)
  done (took 3.140514838 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203056715 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.337945011 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110342027 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123327094 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103419458 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100174951 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123353922 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10230066 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10030376 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131428964 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10125421 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096989941 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130912647 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09807191 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100517498 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12361893 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108743309 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100772875 seconds)
  done (took 3.214279656 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.13010832 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146144926 seconds)
  done (took 1.196448853 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.137822276 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216395156 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285171202 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172469415 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121963654 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142994497 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1508539 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135184817 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192864196 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13667473 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114222708 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098706404 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14956477 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106675951 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139728071 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100156767 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129594201 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138125203 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116442144 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103997642 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147655472 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104909883 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106560652 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138102314 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18137518 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137023096 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105169085 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103844859 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126322602 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116619754 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10633342 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140238072 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113234862 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180173136 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104274717 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177564983 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129620629 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102610778 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114793662 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.125516349 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10640419 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105443104 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137362488 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10000193 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104058428 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.13116567 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104743052 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104300662 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131659042 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108973843 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131197654 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108191746 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177368637 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108544792 seconds)
  done (took 8.030374945 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.880805721 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141239678 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100034056 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.023999394 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146942819 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114715458 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.86584773 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148440554 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253843456 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.889739175 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117151266 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131151519 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238635903 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25601874 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284464418 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359916345 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.72841655 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112960873 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1291103 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164017617 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108174592 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146649557 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122040444 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.520928276 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101705703 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12321754 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109598311 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109203168 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178371998 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100542375 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127532519 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172196169 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29130089 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211362773 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123704631 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102253669 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100811492 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185638428 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271033894 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21968315 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.194719872 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09970335 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100550251 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130941144 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12119969 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09848897 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177650489 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189590045 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19064836 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105529612 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108868788 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135241351 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108201088 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178564413 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09812671 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35624218 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384463015 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101738599 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110116705 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136311965 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269356553 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102565271 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235748626 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.15124191 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217775516 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101206723 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.843388161 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186280433 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101158978 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127774585 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109666544 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106301634 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129865351 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168068123 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.503809268 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111290153 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127987756 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102099793 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237074181 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101985733 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101680369 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180074774 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101289738 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134371278 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112473167 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133810405 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16534804 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269647878 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132813829 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110684635 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105939675 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136921057 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103123163 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236162128 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227816949 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174828316 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20724952 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132962445 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.17932089 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163902579 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13066954 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165498828 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132061574 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113587694 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129838665 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227938472 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134206353 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12683508 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108171059 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110266623 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158317753 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106268725 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132481721 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163922524 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.558624993 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185839083 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098310738 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127968117 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111854112 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180539882 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108669187 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264396624 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11166949 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185581649 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130678125 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100063975 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109397704 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183800644 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109516554 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134212197 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109160241 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133723984 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.260462584 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221943525 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134110018 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253257301 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176937895 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130630467 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190822183 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111897872 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188481772 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112169875 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107336318 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126127937 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832536735 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116708629 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132058287 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108939442 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.207120277 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103150578 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103790214 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100303455 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121993335 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.818202123 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107962509 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099208285 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126865418 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108432798 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109629856 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132809683 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107173004 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179210822 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244234363 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.132236849 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110002325 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102214065 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179888479 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104098282 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12494234 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104257851 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101951204 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.134039265 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.108105403 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105138875 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189805561 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177733286 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230631496 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.635330042 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102324113 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124156631 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242636522 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102310543 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327702801 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132554036 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235053851 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163075022 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122824386 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361593533 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184854913 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186969101 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128266139 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.16739 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123077495 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111860072 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179221298 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102559425 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110059508 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176257153 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1363056 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113153104 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280152359 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102575871 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253080356 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.121662674 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166727774 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125853474 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107972342 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326587689 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101952292 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141596356 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177841097 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107833725 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102816334 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.676199755 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102818822 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138794099 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107309426 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232165738 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185166936 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134485326 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114065138 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110643252 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179884839 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230510021 seconds)
  done (took 47.985400377 seconds)
done (took 64.481562898 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276969969 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180070981 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.281472201 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179345972 seconds)
  done (took 1.936576427 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.282755032 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163349667 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.258876359 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099854491 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.265895467 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099337588 seconds)
  done (took 2.116654741 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.185721537 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171962456 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148569712 seconds)
  done (took 1.455974766 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20737071 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.219492705 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333758185 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.237722645 seconds)
  done (took 2.037145073 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.306985493 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120441921 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126432446 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.240668351 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.259436728 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21235852 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.1266245 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18019871 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131061556 seconds)
  done (took 2.703071818 seconds)
done (took 11.198109165 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.238941003 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.168203494 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.243560012 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.247978865 seconds)
    (5/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.332951923 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.200280812 seconds)
    (7/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.376781776 seconds)
    (8/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.402419096 seconds)
    (9/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.219761802 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.122395427 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.13559206 seconds)
    (12/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119203634 seconds)
    (13/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.213156241 seconds)
    (14/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.140933148 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.229640996 seconds)
    (16/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.2059196 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.1206599 seconds)
    (18/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.388975632 seconds)
    (19/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.158618184 seconds)
    (20/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.209896902 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128055113 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.285215323 seconds)
    (23/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136869211 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.270882973 seconds)
    (25/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.19811647 seconds)
    (26/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.105939015 seconds)
    (27/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.183323672 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.153678677 seconds)
    (29/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.406804358 seconds)
    (30/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.252959024 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.357033099 seconds)
    (32/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.154085199 seconds)
    (33/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113890956 seconds)
    (34/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.174957434 seconds)
    (35/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.181924275 seconds)
    (36/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.148489449 seconds)
    (37/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113267928 seconds)
    (38/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.213309811 seconds)
    (39/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.337401024 seconds)
    (40/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.181541991 seconds)
    (41/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11080137 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.151136872 seconds)
    (43/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.180673913 seconds)
    (44/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175642875 seconds)
    (45/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.33138984 seconds)
    (46/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.206490466 seconds)
    (47/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077896861 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119058459 seconds)
    (49/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137725692 seconds)
    (50/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.167949808 seconds)
    (51/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077333811 seconds)
    (52/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.245016139 seconds)
    (53/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080726707 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104489222 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083478945 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.128607072 seconds)
    (57/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.226559981 seconds)
    (58/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.136684684 seconds)
    (59/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.15261375 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.13679345 seconds)
    (61/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.199204388 seconds)
    (62/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108537811 seconds)
    (63/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100760754 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.19336 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107606332 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102920419 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.132554987 seconds)
    (68/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.134976322 seconds)
    (69/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081723373 seconds)
    (70/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.131534544 seconds)
    (71/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.13969101 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.08077758 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.14840816 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124893933 seconds)
    (75/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079318901 seconds)
    (76/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110900486 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100118562 seconds)
    (78/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.108994702 seconds)
    (79/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123801996 seconds)
    (80/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.078590122 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148161771 seconds)
    (82/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.196502246 seconds)
    (83/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.14215993 seconds)
    (84/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104604232 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.199381419 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085932587 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.128615099 seconds)
    (88/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.087225205 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.133277191 seconds)
    (90/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16181159 seconds)
    (91/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078076708 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124121675 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10361448 seconds)
    (94/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10245752 seconds)
    (95/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.167170062 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108400274 seconds)
    (97/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.147675025 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110513668 seconds)
    (99/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111508525 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101774036 seconds)
    (101/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.182898759 seconds)
    (102/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113713677 seconds)
    (103/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.134097394 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127335228 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121722626 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100459405 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.135933055 seconds)
    (108/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.13997451 seconds)
    (109/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080193002 seconds)
    (110/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078583466 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.151678188 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.146012077 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085763994 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.124134041 seconds)
    (115/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.088516384 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118760052 seconds)
    (117/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093703911 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.128475915 seconds)
    (119/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111444678 seconds)
    (120/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078964948 seconds)
    (121/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.142352613 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.134379255 seconds)
    (123/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079875586 seconds)
    (124/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103247683 seconds)
    (125/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.146684523 seconds)
    (126/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102219568 seconds)
    (127/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085181509 seconds)
    (128/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078818167 seconds)
    (129/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.087342691 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084363301 seconds)
    (131/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.105763869 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104752446 seconds)
    (133/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.082418861 seconds)
    (134/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078863337 seconds)
    (135/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.10796449 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125924059 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126010523 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103242874 seconds)
    (139/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.103656659 seconds)
    (140/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.086495235 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113218292 seconds)
    (142/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.081578549 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.103985355 seconds)
    (144/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.140666617 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104428056 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080230313 seconds)
    (147/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.103151393 seconds)
    (148/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.197657324 seconds)
    (149/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085206021 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.109751847 seconds)
    (151/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.079341131 seconds)
    (152/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08587239 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10545428 seconds)
    (154/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08570821 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.127901152 seconds)
    (156/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.202045353 seconds)
    (157/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080860777 seconds)
    (158/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.11013699 seconds)
    (159/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.1138472 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111773177 seconds)
    (161/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079149333 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.111165599 seconds)
    (163/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079304018 seconds)
    (164/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079977685 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08642474 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.150317262 seconds)
    (167/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083526181 seconds)
    (168/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136964882 seconds)
    (169/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111633027 seconds)
    (170/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.105657517 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086852217 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106554737 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.127650122 seconds)
    (174/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106643348 seconds)
    (175/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.079945921 seconds)
    (176/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111247152 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.1302775 seconds)
    (178/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086655229 seconds)
    (179/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082914448 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124427933 seconds)
    (181/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.105546841 seconds)
    (182/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080514153 seconds)
    (183/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083018555 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081132446 seconds)
    (185/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086120776 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129762004 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086260587 seconds)
    (188/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087378087 seconds)
    (189/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111857303 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128811847 seconds)
    (191/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087547362 seconds)
    (192/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115772896 seconds)
  done (took 27.604457132 seconds)
done (took 28.561257983 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.238345264 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130974543 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113598622 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113295335 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.238458102 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119224428 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154920524 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115108374 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123208224 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13809997 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103822249 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125707905 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138370406 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.208514027 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141461928 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104971942 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103953176 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148015472 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128591445 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130251134 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.237605973 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105346769 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.147501019 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104643689 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.240993224 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107147212 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111773433 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140414562 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127195769 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113579878 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138750601 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10483547 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129016568 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153635575 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105039078 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112745129 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129629364 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08727442 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113875931 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113064864 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.14987079 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114108146 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113461953 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.130874852 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11517449 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113176192 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130310128 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117338798 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103060078 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.138244463 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107145417 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129127235 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.137303416 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102849029 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102817839 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129674379 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12490965 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10357751 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150967632 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103826749 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105265467 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103779214 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.140645997 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104947795 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113044059 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.129465077 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114593926 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115126572 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.135843349 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107660167 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103580371 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136299772 seconds)
done (took 10.261623367 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114804381 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148454101 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.238588447 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.240286233 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133307854 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.145842611 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119151554 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127391284 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.14316519 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123166895 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141191728 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162145362 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.243780695 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12141695 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119616648 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.14160886 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11564241 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112425978 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.241129564 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.153069497 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.129102508 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120149473 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156279195 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121686465 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108106233 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.168015236 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11185832 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116739915 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132531753 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117574946 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.152530877 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108378552 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111719785 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.150328012 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125721072 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11872524 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.145192565 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117533608 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109095755 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131421872 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118193361 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125946608 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132804705 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121512991 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116377985 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.14753071 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116430629 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120381237 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.134086757 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117046123 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10959228 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157834073 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121027356 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124482834 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.146275265 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122027992 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122180235 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.145945058 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112839306 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119695936 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.133127994 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109143062 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110172426 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154237347 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112794506 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121642336 seconds)
  done (took 9.893361431 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.134850751 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139127455 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143722321 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120002894 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113319524 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126527416 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102855064 seconds)
  done (took 1.879972228 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.111465832 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248898486 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.221200682 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.247499222 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.245626377 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.259708926 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127367352 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103388803 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165789653 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114343371 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.253542709 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.278725089 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.1145931 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.146624547 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.226772396 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.129962118 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.250791091 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104507104 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119756463 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.253363268 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120403869 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161821893 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118119076 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103898132 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.245032432 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104606138 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.298078173 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149767697 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114265823 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117620043 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146288551 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.18466112 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.245804369 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.143680245 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113362449 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.249101248 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.218979824 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.145177177 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.262469965 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109944818 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.246966941 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.120206618 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120315617 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.146402964 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119501015 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.237936243 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123873128 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.146261747 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.119623161 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.254448195 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115032796 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.248596469 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116758916 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119375839 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.141480947 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121600892 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12576077 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.145832016 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.256210388 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122654012 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.249608505 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.224505948 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.250943773 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250574847 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129131233 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.251389141 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.235573224 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117907873 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113174279 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.148809448 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.253734532 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118687692 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116105692 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.24253795 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121599987 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.255221783 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.253435123 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117003758 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.163504231 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.10882683 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117883305 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.13171712 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.218410313 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145047587 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117130833 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123323511 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145649707 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11975698 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110017494 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.156070176 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11831595 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141213892 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125903914 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119179806 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146499793 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.229402287 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.143337895 seconds)
  done (took 17.361906273 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.113675263 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105632978 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110037183 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132014394 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10730862 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106553157 seconds)
  done (took 1.694237092 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.150079332 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120195337 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152818517 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120991929 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168390285 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.255212583 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.2645398 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11309348 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166514876 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130272168 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.258322117 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.260124631 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.258040369 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123420848 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.263888586 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123535516 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.266217903 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117444815 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.153844317 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118223053 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118496967 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.148842168 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117712669 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.249757023 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120549898 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.140898604 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.141859229 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128028573 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126170181 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141142508 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123311799 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14528453 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112476955 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112794145 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.263565449 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111601763 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144085936 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123376694 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121877223 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.14723715 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.263090604 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119027766 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125557514 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.148973861 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114578629 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111854707 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.14869755 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112831287 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.265828808 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121706386 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149328298 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121214193 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12012509 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149187692 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113244864 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114100338 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14859182 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.238903923 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.151307851 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113283247 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121309473 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.148948022 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114067074 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.151024806 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121745029 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122247023 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.13731782 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122291912 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11862481 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.145386015 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123746264 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120854083 seconds)
  done (took 11.948941688 seconds)
done (took 43.766737951 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.583137901 seconds)
  done (took 2.602281167 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.962141268 seconds)
  done (took 1.988354166 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.053923913 seconds)
  done (took 19.107858889 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.443696348 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472468543 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.136929354 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149662419 seconds)
  done (took 3.228785402 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.836489613 seconds)
  done (took 1.884484125 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.332892415 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.240586523 seconds)
  done (took 1.601168156 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.735601 seconds)
  done (took 1.777925353 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.557768004 seconds)
  done (took 2.585490969 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.294121322 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.243437207 seconds)
  done (took 1.581609065 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.664449108 seconds)
  done (took 1.708963883 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.103917789 seconds)
  done (took 21.153073773 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267627047 seconds)
  done (took 1.313202769 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293763541 seconds)
  done (took 1.341588648 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.539629242 seconds)
  done (took 4.587634524 seconds)
done (took 67.499599408 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.123300069 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118553964 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117694986 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143367646 seconds)
  done (took 1.534219944 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.13205679 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119628986 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149058345 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118951927 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125128224 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.144837857 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.11897386 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121374734 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119227598 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147775752 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120063578 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118934694 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147732487 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119664289 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117362334 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149406233 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122680544 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120847428 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145874725 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121325241 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120799215 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147306221 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123576823 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121696527 seconds)
  done (took 4.140447769 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.122393537 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110540282 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113563054 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134582669 seconds)
  done (took 1.529829069 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134630466 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130688697 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153858774 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127893733 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13145147 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156162175 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11915927 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115775751 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144635937 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128766058 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134686507 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158392874 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132577877 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.146561914 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131562078 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113605404 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120103295 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156713111 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127899504 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.15458445 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121921008 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126198256 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149313964 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128140502 seconds)
  done (took 4.290006667 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.201577868 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131077982 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177139193 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163848345 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178221451 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117125606 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147224743 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151461532 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12566182 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.147297684 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122743741 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165553448 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151229258 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121541129 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120184846 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150544282 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132202199 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.150422005 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.16604549 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12470197 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152225491 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131416565 seconds)
  done (took 4.282334022 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.128230334 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111334187 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131705665 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11138657 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120998103 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137472249 seconds)
  done (took 1.797762234 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.116076904 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104810172 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10493212 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129640947 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10849765 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104894165 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129024696 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.107123816 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104997082 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104258486 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130213673 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104279487 seconds)
  done (took 2.396802158 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.339185152 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110594661 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136036944 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113434689 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114793991 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10782899 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148854117 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109434044 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268107425 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104499367 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133954209 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194204813 seconds)
  done (took 2.938136378 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212619646 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147053131 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256795237 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.687239609 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165170336 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189848143 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285946797 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194444021 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208535421 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138774094 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216174402 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161297855 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182524568 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185810309 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167889283 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157898454 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193664388 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239154399 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143948187 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23974402 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156337184 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201331357 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216087371 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149921179 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166137499 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163625921 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120521523 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155164646 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169715878 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193030333 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203567534 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15140705 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16807378 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194186722 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260478199 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206376327 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270957247 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134476376 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197816159 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.216478628 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259499948 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143155534 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219982573 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153302335 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157196095 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186201834 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181650018 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183834398 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160647516 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145621936 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213262837 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205599472 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172750973 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1634988 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299442463 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160660866 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143958918 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257117996 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215572142 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227933915 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180091747 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.15003863 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177064142 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217078199 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241754707 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142702126 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193296959 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127490823 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194264922 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232743875 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183531763 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188149078 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.240553151 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133091814 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200714307 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169221018 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183681476 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235759145 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173228187 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120462529 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179643402 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135054969 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154198112 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190458708 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122691515 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243254365 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159905079 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.345482742 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18183989 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183689434 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16185605 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188681541 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162278843 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177264012 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101578451 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172006989 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162762438 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187143372 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130335774 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182755858 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142030827 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126398002 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180895954 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123766226 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196987211 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134972211 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191501073 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1734188 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.15857964 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178291388 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176472508 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163132081 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196739357 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191764408 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158417683 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132692746 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247238577 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197775672 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137178123 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202582428 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196367476 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175921691 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135741445 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193001627 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219439174 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145910967 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229143078 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140646344 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161130902 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13997814 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198188464 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160054541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.18780711 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128370632 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192817825 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193187594 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.156590337 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142177377 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210899845 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13478851 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12342273 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167191069 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136260348 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171616164 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149764316 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.165204835 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15621892 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193122285 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16545974 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185996363 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135079913 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202463081 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13230716 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.198562849 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152728694 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118911236 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202082434 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225079909 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129720549 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209607574 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162844336 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211710079 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200808162 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130178692 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211632943 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129527761 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121004973 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190598214 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196445862 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16616342 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217492174 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205978335 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166469987 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193130318 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151009346 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198305703 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.213094748 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157319655 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.17052683 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173848987 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198867195 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121059839 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122818886 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.155962422 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137881976 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157981922 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138485778 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210489146 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165695469 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20478382 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194256293 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137754948 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219972745 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12594869 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188095111 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174914298 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166231858 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188347402 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218706649 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203522122 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142230917 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190390963 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121758472 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126540031 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.162162424 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161586136 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164675248 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136420397 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140783981 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218615179 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20121083 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149610608 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219014388 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192894862 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201344327 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150147176 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161065329 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199996434 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169326718 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.210473218 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134247333 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.187984695 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193413237 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170870067 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19287122 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195438362 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206558346 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196230476 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.19327285 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131646288 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17625637 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161889507 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165740688 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162663463 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172368381 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13217573 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153497151 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167176614 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141546776 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215280708 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171290046 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178079987 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186403203 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172848689 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153847209 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142560758 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202288727 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146324521 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104935821 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19776899 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225194987 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150141352 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185318764 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173640531 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159783395 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316687251 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217841553 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206898022 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137146251 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138653249 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200178549 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188956691 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164739344 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213242311 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140953333 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235897694 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171128437 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.172430257 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131994991 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176965005 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150918353 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16870505 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152453168 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.191136978 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145213835 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216431377 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137426286 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199443623 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204874795 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146297542 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149681688 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168001386 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253564206 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168935512 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203356045 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16454193 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193643453 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183195298 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152592369 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127325343 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132455005 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214086908 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129089168 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205006851 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192282366 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209886989 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176948604 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192268748 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140898311 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154805395 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16707898 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148427371 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213871862 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162454988 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138630798 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219890703 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128054285 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157838557 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161704973 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315813002 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14878791 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201525209 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105940594 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311001909 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129516307 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157839974 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162341173 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199002421 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134639445 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184150044 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199550363 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141326482 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192199058 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134450078 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207687724 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213684174 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167395501 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204868515 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.173511232 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163717859 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190509159 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175771264 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174220191 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.148927406 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187250988 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194504928 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207180332 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131342551 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198591453 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169275115 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20129265 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202464931 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13963536 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181508916 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15847116 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165655248 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166141534 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125344115 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189900988 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193662881 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13125816 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203690835 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172309682 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130599354 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156867077 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14826109 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194914259 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140842446 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.158094258 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187566538 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158710316 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182960065 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240728271 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130121082 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196805415 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147162511 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15908116 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139596441 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172290335 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13442441 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174042774 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209603968 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132523094 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208137613 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166530728 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191896687 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185694998 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145150573 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.292217262 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128825872 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190555022 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180365907 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228410167 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150625487 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203458603 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169061245 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179475643 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16633545 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176966355 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220860127 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194691477 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166551485 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159838149 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143037395 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16757065 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.135702058 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152010326 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196995364 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14178725 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.166009688 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168205249 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175280198 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14695641 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170819928 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200736217 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18109256 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219836729 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187507744 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166903566 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175267701 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207401785 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128537225 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194027311 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171991477 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173834085 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152506521 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.16345288 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138449273 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242988586 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125917247 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189178683 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175179085 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198302184 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172826236 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.163720947 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178168244 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170923623 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175742658 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155258415 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152795381 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198467252 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134981122 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126971328 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200436511 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189637007 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165770056 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16887065 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175012691 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195965346 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.150870069 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.621524024 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315993828 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162501895 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223045169 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135112076 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166477786 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145244575 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190029126 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163297238 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199895763 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130025054 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157292099 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146056236 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.181642751 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141743276 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194599914 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18474426 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190125097 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185423776 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.162104116 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.25477529 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14115165 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200852346 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115614403 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.158154964 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141260028 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162778507 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143878416 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209227528 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244514808 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163954691 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147621693 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1654503 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126352882 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159175777 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165498013 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180063838 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169499987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174625828 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103376782 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141150403 seconds)
  done (took 86.700149278 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168717572 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152204973 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168689923 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22148749 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195019464 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29060052 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229002131 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247346753 seconds)
  done (took 2.819367134 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125440908 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158088362 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141795897 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143047154 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111455483 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.489507655 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159721497 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121178753 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162001778 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151447424 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136015348 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.577513815 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121652746 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146237908 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123236229 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135885278 seconds)
  done (took 4.137886696 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.758577869 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533741279 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.040254037 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.277637722 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.262085704 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.207851395 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.764478354 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.202010776 seconds)
  done (took 12.186359368 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.173512883 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.158603437 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.455130393 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.31288444 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185542111 seconds)
  done (took 2.433133155 seconds)
done (took 132.221688934 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.132467373 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124772453 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12408025 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154503414 seconds)
  done (took 1.675109872 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.2052177 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09135522 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093409066 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118850366 seconds)
  done (took 1.659834251 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.475053282 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091484655 seconds)
  done (took 1.745828634 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.160757427 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137672317 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166382635 seconds)
  done (took 1.628940934 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.14412638 seconds)
  done (took 1.293048665 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.13547894 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131067417 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.276455862 seconds)
  done (took 1.701231984 seconds)
done (took 10.862680318 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128415718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.932538042 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434547969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13491448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.714079791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427867754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.422776657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177635164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176332992 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138444382 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133745037 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690228907 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.435569583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880042223 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.389552118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.903626587 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704775248 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112644221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146718883 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113695007 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.400728983 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139332359 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112963485 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112732509 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.739914016 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42153541 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110489725 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.912768164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111444653 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11483322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.429632958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112330922 seconds)
  done (took 21.059295972 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.127208448 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170194703 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146485766 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113296438 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114562617 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140483351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123802612 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124478202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.2041302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110946582 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162180113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11190293 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118055556 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140334629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137143122 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111700447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141824324 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113958167 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118809357 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141585635 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135148983 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110630696 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140070803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11370719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112003607 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16074914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112386052 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123813649 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139397216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116856495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116482952 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140416425 seconds)
  done (took 5.357153439 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.167470175 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178793951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150043544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149082997 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18970364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113944478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.226451568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151900649 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207437732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113155025 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133638068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138136878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153403602 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111510991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164889967 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112570969 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114665245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142799261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120019553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113599119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16412012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11168894 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11343594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14176719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111864093 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16160112 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114015943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123133959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138527683 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118198763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117196528 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139087355 seconds)
  done (took 5.6659036 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133174806 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12708913 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135085064 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164030062 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122154368 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125902246 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154717342 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12138499 seconds)
  done (took 2.240097366 seconds)
done (took 35.481302102 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.147770033 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131413094 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132059588 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156554857 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.261518604 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120362248 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129244211 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119059541 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.156745203 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134093855 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110758537 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.149176214 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132471881 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122918719 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.26162081 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128024872 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.267516455 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.263804658 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.11977683 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127373359 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.151525821 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.236722273 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.154592894 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120759485 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.25434714 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115654282 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.254947945 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123995415 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122008927 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144719087 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.234463332 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.155388494 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120245377 seconds)
  done (took 6.511376204 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.253493574 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.151712628 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.12178981 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119605824 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123028429 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149179899 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.250737563 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.151315475 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120438457 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119947583 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150055766 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.231888882 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158204567 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117277039 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122577567 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110590031 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.283588875 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.152582908 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.114317828 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.093814809 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114889992 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.149865613 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.264300723 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.14767835 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120305033 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120434629 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.152477362 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.127042668 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.122153346 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120581553 seconds)
  done (took 5.711987563 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.134361327 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133453387 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.167368161 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.189260124 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150975705 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163587675 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140728933 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134737774 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171691027 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116094586 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129209069 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180465702 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130421672 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124148798 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147325268 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131867718 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136264901 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143894649 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123272161 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130966448 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163972258 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13193885 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137628734 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151473065 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113469768 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122026245 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155919045 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.130714972 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123631257 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.158480222 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116110915 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117630544 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.146065603 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149787093 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114955708 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156781504 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140767372 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126725092 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157471837 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.147030651 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117408651 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.145712198 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141231827 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168317594 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.145343783 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127576294 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12645475 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.159459271 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113770959 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132483328 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.187902451 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114056604 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.1351476 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143956194 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114271186 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122845028 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.144372758 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118874867 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129004229 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.146133248 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.140119529 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120847464 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155064476 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117659558 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125670045 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142448686 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.115875055 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118943334 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140093664 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152665706 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152697068 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114095638 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.154862784 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128383161 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12512891 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156757303 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11484802 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126218048 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156657613 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121174865 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128388994 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146026444 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118888961 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132375271 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165806386 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129722802 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125135478 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156260049 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119835232 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116246691 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16068698 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.117554206 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119591322 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.155906307 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118577064 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118475233 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126912827 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.155829345 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112444762 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139597156 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.149470296 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115076508 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13877083 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147298748 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120987607 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124241653 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.185447041 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114511576 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126519539 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156134868 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.116527469 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122171908 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146183295 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115483623 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132324147 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.159002244 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123487953 seconds)
  done (took 17.199205958 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.370631629 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.348702639 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189627646 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.436587409 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129526362 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.281016526 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.348756291 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.350842969 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114671168 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18161219 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177398019 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.317508436 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147525694 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.146032993 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.3522344 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.412558039 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.177783671 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151053012 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181288769 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129501137 seconds)
  done (took 6.135482204 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.141790207 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150017174 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166757825 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143733717 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126272091 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162687125 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116243882 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13663263 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155622347 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125209825 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116676431 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160193689 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.13060206 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131333936 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160451986 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147164146 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122428259 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151318155 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139039078 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119075649 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13310437 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141132386 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124093938 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167193033 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135840607 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125371904 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144612326 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12117034 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122179996 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154862243 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120218827 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133253128 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151480483 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106056155 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127510338 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.158685329 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122112333 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118072815 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12032779 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.148046612 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130993037 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127745628 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153602602 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100646056 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13320931 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110048017 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.160377219 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128777894 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106244811 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163952441 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128433729 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129261195 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.151539032 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137633421 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121892087 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160472757 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12819979 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130794809 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148726782 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116323773 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113287172 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118508328 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.15320388 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130285636 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126787203 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.164266308 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13030005 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115476618 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.149826496 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11934976 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118144948 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.159689329 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135568555 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124532283 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.153142097 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127707557 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.1230193 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094507464 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.157387906 seconds)
  done (took 11.866338888 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.148188778 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126051054 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161500927 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151846642 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128216775 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.150229409 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127870065 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135599742 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12986926 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163969701 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130123261 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128521919 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167153223 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126359421 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12452365 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16222063 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128928729 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.182254486 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.135258397 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142816196 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.163192266 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121661033 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128621769 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.156841316 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145659626 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125877081 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172711248 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130750901 seconds)
  done (took 5.202617113 seconds)
done (took 53.793492943 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.369097746 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.533385038 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.303866352 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.302883774 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.298013952 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.336247604 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.303838373 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.301622399 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.754668729 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.270893514 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.302711898 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.30298243 seconds)
done (took 29.575099847 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.392777743 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.84389547 seconds)
    (2/2) benchmarking "String"...
    done (took 1.585972757 seconds)
  done (took 4.614694503 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.292097195 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.296217473 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.544528537 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.292803524 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.307824133 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.294091332 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.296867593 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.310635485 seconds)
  done (took 16.527572459 seconds)
done (took 27.015060266 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.316355448 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.458237737 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.527239373 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.26433755 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.301188465 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.287618133 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.306100266 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.30469431 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.286600674 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.277272753 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.702869538 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.548644693 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.290059262 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.657143352 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.264342012 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.330725446 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.288485093 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.514250117 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.291807864 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.318838383 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.264903058 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.268852881 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.325989414 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.289077204 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.296247287 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.302818272 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.289300297 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.294001634 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.468439035 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.329718095 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.324443353 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.290455367 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.286337707 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.291208477 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.300914636 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.295343804 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.472066973 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.296883513 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.280734451 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.308155942 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.490097795 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.299985367 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.288888128 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.288491327 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.272494338 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.297737593 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.264973593 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.417622957 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.315184479 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.299071033 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.355097597 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.659106006 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.305373984 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.297339284 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.298262604 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.511538651 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.301591672 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.341745873 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.314788544 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.296098827 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.285853603 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.286875791 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.358613904 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.301418843 seconds)
  done (took 149.145602593 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.293677704 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.292198299 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.293739999 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.355395137 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.294063886 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.290789553 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.293949578 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.294013233 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.294239324 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.293991558 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.294959053 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.288911036 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.303037009 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.255672335 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.300411989 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.312275179 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.2923088 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.292753711 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.314021747 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.290809385 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.320682996 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.291978427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.294356282 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.289396488 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.329791498 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.356808742 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.310752981 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.315435431 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.303987121 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.294479934 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.322125235 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.340412239 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.883987262 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.142149833 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.301732145 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.306404387 seconds)
  done (took 83.53013678 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.293286795 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.296596596 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.291460944 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.325656418 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.293448236 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.848100995 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.84848547 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.263512085 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.501422894 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.597310463 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.531074685 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.294714403 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.382854083 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.30165126 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.291323539 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.310097448 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.319378847 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.295547331 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.295013185 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.850466277 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.307353202 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.522458739 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.46144933 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.304229543 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326667417 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.682214032 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.288304808 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324918699 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.620573927 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.337324611 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.288700652 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.619065485 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.687156098 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.404999989 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.291882637 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326506971 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.29431635 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.577015889 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290216073 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.295942072 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.298625129 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.911378932 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.295526373 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.842415113 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.296233652 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.254911717 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.293630348 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.294338014 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.266811738 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.944716812 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.295861987 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.294638756 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.296147674 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.293916231 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.295104127 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.326087481 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.269486833 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.388713149 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.294303511 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.297340078 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323890706 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.2931796 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.461754221 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.293378392 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.443844797 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.346184338 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.401543621 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.821615877 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.292580631 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384763435 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.40215887 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.290037617 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.290982966 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.293388582 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.291250567 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.399792403 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.28758116 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.956945344 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.285307211 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.458353315 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.301084826 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.510010389 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.385758867 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.285197362 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.579811682 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.291221983 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.290442789 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.989242012 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384292511 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.287121875 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.291439015 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.291629144 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.290892871 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.946637022 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808615983 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.488000369 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.2930939 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.876356644 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.29014417 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.117319525 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.796532523 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.884888615 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.292645633 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.291679378 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.400344213 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.450336774 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.300701756 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.293553783 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.289728425 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.461215504 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.290214996 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.34988196 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.289061503 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.687146497 seconds)
  done (took 382.716590853 seconds)
done (took 616.579874541 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.177944711 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.126917323 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.269266471 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.140494761 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.118039718 seconds)
  done (took 12.012509915 seconds)
done (took 13.193166855 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.469619084 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.470262743 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.342979694 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.476326281 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.321980106 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.48524607 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44660362 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.309134398 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.393369476 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.366892597 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395008247 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.34183821 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.321373028 seconds)
  done (took 19.319699381 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.580573627 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.300350539 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.356832836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.551837855 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.335754833 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558477387 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.598815238 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.301368794 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.440782089 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.338335455 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.312034084 seconds)
  done (took 18.856688693 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.560252717 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.302646468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.360343786 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553716864 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.3369127 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.588046523 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.598096056 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.303132044 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.454036003 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.315639056 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.315211946 seconds)
  done (took 18.870105144 seconds)
done (took 58.229207185 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.328815433 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.382076569 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.318907794 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.308614081 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.306799714 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.309371848 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.312489715 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.310548476 seconds)
  done (took 11.75675698 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.308772941 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.305224496 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.30559428 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.304174388 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.30753981 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.30827608 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.305076497 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.304512695 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.305295462 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.306993776 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.306908251 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.305481075 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.306120998 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.309191655 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.304418814 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.305194948 seconds)
  done (took 22.081554515 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.307641777 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.304982161 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.306318182 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.306467458 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.307680302 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.308706088 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.309262613 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.305500581 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.305435018 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.307962954 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.310481449 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.306746566 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.308107462 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.309813791 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.30726263 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.308212354 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.305992285 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.308594569 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.312107513 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.307400044 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.31060167 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.308231985 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.308203567 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.307425743 seconds)
  done (took 32.57298292 seconds)
done (took 67.591749141 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.292074124 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.294359791 seconds)
  done (took 5.771341746 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.365610391 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.364652201 seconds)
  done (took 3.913538114 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.312022595 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.307838857 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.308991076 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.307168562 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.309261913 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.307884476 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.308844498 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.310159762 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.309095454 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.309621138 seconds)
  done (took 14.275969301 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.310810125 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.311280827 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.313307381 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.310877336 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.310884147 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.31029627 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.310847182 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.311342712 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.309290679 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.310183982 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.310696016 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.310338726 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.311513837 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.310245871 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.307929073 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.308292908 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.311888947 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.308875825 seconds)
  done (took 24.771327907 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.326208547 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.327933658 seconds)
  done (took 3.837608141 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.439167264 seconds)
    (2/7) benchmarking "second"...
    done (took 1.353614809 seconds)
    (3/7) benchmarking "month"...
    done (took 1.413522411 seconds)
    (4/7) benchmarking "year"...
    done (took 1.404991146 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.350316925 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.331706558 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.351528228 seconds)
  done (took 10.829225457 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.294361652 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.590563357 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.765118097 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.440848513 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.290809737 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.321823264 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.274242147 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.310063436 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.314060684 seconds)
  done (took 14.789199589 seconds)
done (took 79.372776194 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.306454385 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.341023031 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.309917735 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.312297807 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.608572968 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.331779654 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.294432587 seconds)
done (took 16.690917343 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.278222454 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.274557002 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.277146954 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.306270077 seconds)
  done (took 10.319872995 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.306484371 seconds)
    (2/2) benchmarking "read"...
    done (took 1.62171539 seconds)
  done (took 5.113097268 seconds)
done (took 16.620798762 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314410977 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.312475348 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.312869959 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.313931085 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.313635703 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.313837342 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.311904198 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.312426078 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.312550186 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.311756863 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.314062558 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.314089205 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314600703 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314111382 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313037193 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312754606 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.315733481 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311435007 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.311544877 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312679859 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.312995784 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312330196 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.31310365 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.315506502 seconds)
  done (took 32.704091698 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.313425474 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.314862992 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.315980933 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.31446951 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.314825771 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.314902328 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.316398622 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.31411741 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.313522704 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.315405535 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31427305 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.314954253 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.313676785 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.315909205 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311513654 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.314941422 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.313613027 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313829597 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31679617 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.313814745 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.3151516 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316184225 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.316732345 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31339207 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.316010333 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313908208 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.315295882 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.316483535 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315822854 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.314495494 seconds)
  done (took 40.633845841 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.318586476 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.32005755 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.315655334 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.314387699 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.315439387 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.315309399 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.316186279 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.316825018 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.313380355 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.315919376 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.315538278 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.317399375 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.314688887 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.317738043 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.315193574 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.314455624 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.317965848 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.316210175 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.317969833 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.319506276 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.317149065 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.31722558 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.316608895 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.314722446 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.317373889 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.31865226 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.315190622 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.316941942 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.317632067 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.314677359 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.315590355 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.316772019 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.317120206 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.317352952 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.31714975 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.317354661 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.321495192 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.322192051 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.315944855 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.316511858 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.319528254 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.317651729 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.316746595 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.317093062 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.318748915 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.317549751 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.317676878 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.318529963 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.319239152 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.316379123 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.316072296 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.317525132 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.319750228 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.318295478 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.319104938 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.317417628 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.319778521 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.31687557 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.318352813 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.320089012 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.318235554 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.319730528 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.316585727 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.318223802 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.319445913 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.31812024 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.316608119 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.318334076 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.320663503 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.320506215 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.319374433 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.319905677 seconds)
  done (took 96.052803417 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.32006125 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.321574728 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.318663026 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.319817732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319525265 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.321217327 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.32136332 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319705149 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319804679 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.317627808 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320310279 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.319251194 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319589568 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.322208877 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320675321 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.321135739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.319181808 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322740317 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.318683916 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.319778813 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322668507 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.322977429 seconds)
  done (took 30.240266509 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322973514 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.321747506 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.32112588 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.322961409 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.326890323 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.320391424 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.32503759 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.321752841 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3229541 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322684037 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322513812 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32298853 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.324426976 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321243115 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32037545 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.324340565 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321051165 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.324292627 seconds)
  done (took 25.002799501 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.325373152 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.323345595 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.323892692 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.321264742 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.323982903 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.323341087 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324022315 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.322831803 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.321069694 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.323998039 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.324639839 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323046135 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.322992589 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323701441 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323734316 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.322786735 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.32367321 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322297739 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321580911 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321072512 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.324757671 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.323636502 seconds)
  done (took 30.30692861 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324352986 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.322544226 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.327135296 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.324271339 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.324795497 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.322820542 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.321020753 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.324433522 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.32677199 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.325021942 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319263474 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.317233083 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.323281937 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.319490932 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.317582423 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321140974 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31995326 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310945155 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312305531 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.313331964 seconds)
  done (took 27.615224574 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314033665 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313267461 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.312161378 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314074169 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307441871 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.309348532 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308746153 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.309612181 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310790543 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.31033073 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.309552478 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.308558944 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308227955 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.308061708 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306573305 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308300363 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306526448 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305948367 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.308421834 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306748883 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307320922 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3065501 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307902702 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.307836995 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30833337 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307849069 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.310729665 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308460847 seconds)
  done (took 37.842221588 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309928973 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310386126 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.309364615 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.307935966 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.307840471 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.308192073 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.309859166 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.311912257 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308684489 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.309838267 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.309545008 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.307757451 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308113368 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.308766933 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305848738 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.308003299 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310134093 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.309972977 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310085666 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310373875 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.308302244 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311512582 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.309070138 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.309525351 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311407838 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.311439637 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310550941 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.310544178 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309946702 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.310931542 seconds)
  done (took 40.470222704 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.329636255 seconds)
    (2/2) benchmarking "in"...
    done (took 1.329112393 seconds)
  done (took 3.843102482 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.310043887 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310989106 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.31012264 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.310878655 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.311823919 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.313645635 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.310545417 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312008771 seconds)
  done (took 11.674182551 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.304017861 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.312294467 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.311162648 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.311509964 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.310295448 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.304019951 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.309602899 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.316586691 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.304088981 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.304705042 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.307604389 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.306082949 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.308623316 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.306838444 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.304661864 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30942641 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.314777916 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.314467987 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.313537247 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.315467418 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.311065857 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306606066 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.310797421 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.313327823 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.305007743 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.31429469 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.314672843 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.317340105 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306944288 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.311503006 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.310269402 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.314326094 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.311608827 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.312109283 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.311617165 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.31191939 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.313163058 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316046721 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.317433057 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.318355937 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.314250975 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.314060572 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.309593133 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.313365431 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.314509433 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.318528991 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.314520112 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.314330583 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.304806282 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.3082906 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.320054763 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.308686005 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.312280937 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.311355867 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.313992126 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.317620159 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.321821555 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.306446237 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.309666312 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.317834111 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.324031439 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.319654716 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.31461868 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.321592091 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.313477915 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.321847211 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.32020244 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.31970881 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.317291958 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.315701182 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.314537272 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.32609894 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.323256863 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.320171396 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.315245824 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.316226756 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.309118342 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319105846 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.315840989 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.320800314 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.322370582 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.315973256 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.315381621 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.322341837 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.310647895 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.319758429 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.315408531 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.316533975 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.307398674 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.319788192 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.326598 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.316391032 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.307495974 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.313780468 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.313846629 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.32064526 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.307551724 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.313580053 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.319817007 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.317653238 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.316207812 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309474045 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.314433666 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321381209 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.31619914 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.31887065 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.324906699 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.312345151 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.322910406 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.326248329 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.316707989 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.30910736 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.316661174 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.32059075 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.31373848 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.316697465 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.320007179 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.310635342 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.32277275 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.316826927 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316539957 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.327047989 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.325540204 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.306444322 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.300421487 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.314563191 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.308370221 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.302854749 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.31485237 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.310227175 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.303871759 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.30160035 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.31243158 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.297078247 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.309811094 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.298831093 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.310798687 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.30413057 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.299523143 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.296070476 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.299522556 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.297618945 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.30086855 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.303644549 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.30539448 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.294934463 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.302982542 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.297469372 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.294537147 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.299217739 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.300737024 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.296635003 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.28907043 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.293555383 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.281112846 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293646616 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.283915456 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.290081902 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291509975 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.29074709 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292004874 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.28172651 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287960442 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.293576325 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.286841905 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.291231689 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.294357139 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.292152974 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.289433968 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.277306311 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.286407761 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.275971585 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.279885565 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.284867196 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.284780436 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.286159403 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.277963239 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288481801 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278952517 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.282567083 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.273328487 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.281774949 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.287845823 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.284500022 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.290558536 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284118795 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.283028255 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.274746293 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.276653559 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.284589461 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.275906459 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.290423951 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288163211 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292822729 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.281232301 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.286733094 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.274068536 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.28884756 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.281196547 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.292412723 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.283420428 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284750498 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276731739 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285604436 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.273539903 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.288039789 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.272116303 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.284306767 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.282358984 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.283439295 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282609128 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.275862644 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277311229 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.285655097 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28346942 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278211819 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.270715016 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.280652683 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.265435188 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.273079744 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.279047388 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.274754479 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.278764448 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.283227693 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271341096 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27641876 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.272620944 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.268777816 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.274015257 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270185089 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.273090364 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277255981 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.275636937 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.270604457 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278913326 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.277737543 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266987142 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.271687399 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.284597174 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.27441217 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.265617378 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.279109951 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.275722572 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.273937041 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.275661085 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267213301 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276648037 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.276117304 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.28263233 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.265989342 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.277787956 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.269395608 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.273737342 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.269988308 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.275683392 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.273912042 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277224294 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280809656 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.272629953 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269322004 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.276942681 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272969198 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.275359315 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267909194 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280206666 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.276631798 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.278360782 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.2748325 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.271554841 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.277693389 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.268748061 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.274707204 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268519643 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28485116 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.292708587 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274952197 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.277598478 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.280773311 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279247431 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.280916377 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.272043364 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267660826 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27454657 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.271836983 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270633674 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.281113125 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270760197 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.278111329 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276126013 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.278702369 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.279886231 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.27698412 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.267302513 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.280464612 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.275174929 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.275547463 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.26929353 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.27945295 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.271868376 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276365761 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.277585968 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.272335135 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280191255 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279995765 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.270857695 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.27510048 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.27104626 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.26792648 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.276035961 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.283268268 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.271463104 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.28285571 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.272343749 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.278702003 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.271041266 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282755385 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.286400625 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.270039647 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.283686991 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.279873291 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271138618 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.273768135 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.281182256 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278072872 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.29135606 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.272349093 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.279183039 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276666535 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.277291879 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.278967459 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.279130765 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279719485 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.280859397 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283615256 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283612827 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.271042831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283629796 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.287722898 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276028293 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.281462034 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.268276587 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277438851 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.287469134 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.27497582 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.27988559 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.276847997 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.283802974 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.281340393 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.281911856 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.279540605 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.280730285 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28228056 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.285217673 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285640627 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.282062194 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.285972758 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288262857 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281627213 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294172297 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.274144601 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.288312952 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.279686613 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.276691246 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.275830757 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.277123559 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.28489652 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269891091 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.284340821 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.280913431 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.279194716 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.282584183 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.286692169 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.271001516 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.283762696 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297038295 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.273557905 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286159286 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.28385368 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.277174594 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.285599554 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.28330779 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.271234153 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.278377321 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283421831 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.290070407 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.277510729 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.285691077 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274343399 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280381523 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.279200384 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.28028933 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.281068025 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.279426411 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.272323893 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.280924905 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275984671 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.280495338 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.269411267 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2710843 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.268213743 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279283512 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.283665971 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.269700585 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281425503 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.270736753 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266426293 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.272318715 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.280770066 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264868223 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279502738 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262491412 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27003145 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.267354606 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.271461151 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.27298958 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.271106893 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265838605 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.263481108 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273726877 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.272676385 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269243021 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.268583474 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.280249615 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.266098658 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.2654139 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.274601305 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.265886595 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274274318 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267956334 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.269998633 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271116213 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.275438612 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271587025 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27434575 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266434994 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267619309 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279157762 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277091577 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.272096047 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27112717 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.273460938 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266299158 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270374635 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273697066 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.267490997 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.269320662 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.278214242 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.265366398 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.264885 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.269144183 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27499826 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.276426142 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.27815811 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266669107 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278816201 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.283696514 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.279488043 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268033422 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.268110356 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.269683182 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.277977055 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.272846382 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268934902 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279960851 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.278321589 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277426103 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271435762 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273385052 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.268204539 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275670632 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274679845 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272157578 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.28100306 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.268496694 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282396893 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272713372 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27586402 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265131892 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.266930425 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.268738767 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.272090243 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.275909432 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275356068 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.278860648 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.274622589 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282016799 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277857448 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.275997607 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.27762043 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.265324152 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278480408 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.269538034 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.275285536 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.278616543 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.268970929 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.279510483 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275789611 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271671746 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.274505108 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282517007 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.273465292 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268448986 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.276526302 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.28052149 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285063204 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.278919065 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2721038 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.276496803 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.277398949 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278711205 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.275140926 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.267902351 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284665881 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.295329833 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272248236 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.274326624 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283822385 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.284574543 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.277220048 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.280813231 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276200951 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278667292 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.286662402 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.281348772 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284524447 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286484509 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.27625229 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.278059327 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.27094637 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.274697816 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281784361 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290661454 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.279915827 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.271733165 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.29086289 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291915517 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279423104 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297681285 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.287164884 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.282172881 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.284144511 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269886514 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.282207934 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.276140716 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.283685087 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.280499802 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278065042 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.277680213 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.273899269 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284044058 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.287670782 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290485912 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.282757506 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273296694 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.277913861 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.28413379 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.282250897 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.282384129 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.282108552 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.282847712 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278757366 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.276981929 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291431158 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29832339 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288054177 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.282379156 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.282281534 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.282517501 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.284857266 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282333162 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.289479978 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.283029922 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.283713328 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.282289137 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28801518 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.284916094 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.273875197 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.277312147 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277705472 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283126646 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.291420633 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302572164 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.287663497 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.280168239 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281643868 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.286369501 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279017936 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288861052 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285681642 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.280546606 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.278652541 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286006172 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.286118088 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.286107752 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.276661941 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.289084101 seconds)
  done (took 768.293277408 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283145523 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2866764 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283326325 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282183066 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281193134 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286631004 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285430959 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284317861 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285714106 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285075589 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281130695 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286516669 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285555473 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28162608 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284408284 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280075861 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281100852 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283025339 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286017465 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285619328 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283099339 seconds)
  done (took 28.131931355 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.284148446 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.282540822 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286080325 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286246392 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283122291 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285813397 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280069601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284707941 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282754203 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282865226 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.286666453 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283226897 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.284978946 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.285383606 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286464892 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286159162 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284446307 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284600529 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.286936365 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28771528 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286619066 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286961649 seconds)
  done (took 29.43744071 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.28385158 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.289007457 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.278529677 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.289248957 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285539387 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.287615018 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.285783039 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.283803028 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.286305023 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.277441597 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.280880735 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.279699815 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.281681866 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.288067554 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.28149626 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.288776819 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285553406 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283148688 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.282477762 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.287736062 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.288063295 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.296916993 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.287418472 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.276069917 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.288743478 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.286445851 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.290110757 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285714336 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.281767684 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.291986698 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.288586031 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.279557154 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288574204 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.284635732 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.282172181 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.291172229 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.290032088 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.289050409 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.288370259 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288874016 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.303134444 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.286988384 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293166979 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.298572937 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.288738739 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.283017015 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.295498017 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.287770286 seconds)
  done (took 62.940646294 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.288722887 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.28807229 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.289764237 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289215515 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290196561 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.287603759 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.290149967 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288032312 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.28913133 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287451502 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.287006588 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.290596703 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287524414 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.291039497 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.294201353 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287885779 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288193394 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.290581206 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.290333453 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286299654 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.290586996 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.288798843 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.290222572 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.29152432 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.2874219 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287739078 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290174233 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.287999082 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.291099316 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.289493012 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.291595886 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.288022758 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.292562345 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287420596 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291505483 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289495923 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.293693159 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28978896 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291556087 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.293131814 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292775292 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291216542 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.292716156 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.293545063 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291405075 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.291838168 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288814927 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.290058575 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.290159846 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.290174351 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.293202486 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290407688 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290723729 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.289968063 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.289649347 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.294099358 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.293272183 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.290107442 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.291543704 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.295208798 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.293408006 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295316706 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.294546953 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.294686342 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.295899929 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.295767336 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290767927 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.294087001 seconds)
  done (took 88.945637693 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288169157 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291219831 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29112043 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291166799 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294928899 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.294419769 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.297804947 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.291252389 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296083649 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295910562 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295152966 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.296249095 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.294568365 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293651492 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292037862 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294323902 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288875463 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293695807 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295226945 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29634162 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.290993948 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296772101 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292941033 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292109618 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293126315 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294058382 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293834649 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296077557 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297070494 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296204395 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.295524223 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.294459615 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29248994 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295213089 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293905275 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.295395462 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295295265 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29651341 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.29494814 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296335451 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293223193 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297515904 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295071834 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.296513864 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298886658 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293680069 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.299027064 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.297908163 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296097081 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29675976 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.298516704 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298518751 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294784816 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298859356 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30014191 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.295975009 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299529002 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299305961 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30213323 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300887851 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300112714 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.297904333 seconds)
  done (took 81.493646733 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29559915 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298892675 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.302066267 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.299289915 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297207248 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.300116705 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299319595 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.300891828 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300065579 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.296064661 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301927552 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299904287 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302517478 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300560318 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.301110063 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30139135 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299864416 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.299840046 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300478883 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.300416071 seconds)
  done (took 27.180753642 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.299424958 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29968899 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.301261004 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.301334141 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.299793373 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.301658351 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.3016391 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300623559 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299925896 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302451335 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302590506 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30270795 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302992574 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302519867 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301456823 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300525452 seconds)
  done (took 22.003655941 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.29870561 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.299927199 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.300840154 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.303378219 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.30100105 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.302569846 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.30208622 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.302558495 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.302238107 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299727006 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.301463107 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.298169264 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.301266768 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.304081628 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.3030386 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.303223924 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.301942832 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.303019372 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.303101056 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.303866204 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.298928714 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.303703255 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.302582424 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.30356397 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.302207356 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.30302606 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.301223174 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.302353071 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.302907163 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.305069561 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.303888904 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.303766933 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.303661687 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.300697406 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304210471 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.304319366 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.304462015 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.304579702 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.304738436 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.303283214 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.304284833 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.303133605 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.305584529 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.306841922 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.304637038 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.302752712 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.30504695 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.30469296 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.301554949 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.303462131 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.306212329 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.30467248 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.302121018 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.302242134 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.304873637 seconds)
  done (took 72.846770699 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304377431 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304096648 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305821445 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304563328 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305538036 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.307058705 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.306118451 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.307508672 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306219742 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.305940159 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305183915 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302975249 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304198881 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304250434 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.305424534 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304283299 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.306292058 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306279271 seconds)
  done (took 24.684329867 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.306135763 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305797447 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.308085873 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.308433708 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.306399408 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306373235 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.306482214 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.306855937 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302722092 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.309029186 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305087455 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.304950579 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307992979 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.302726656 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.307585773 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308312225 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.306334525 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305753783 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.306765034 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307297695 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304327034 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307364699 seconds)
  done (took 29.927389195 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.298042027 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.297545509 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.298794833 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.313139187 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.30922223 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.299741202 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.297857515 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.299028492 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.316133638 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.332786353 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.326284229 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.310482153 seconds)
  done (took 16.889810907 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308158368 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310371009 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306989469 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307858195 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308838869 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308950848 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309381341 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308682966 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310323475 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310020429 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305547799 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309556181 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308539695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308076435 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305459753 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310634757 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31118417 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309105985 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310876539 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309550644 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307823448 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310482805 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30743408 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304160247 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310182194 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308573281 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309172479 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306706763 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305016371 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311169118 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311349625 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309068371 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310492546 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30849706 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3097848 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309002664 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30612174 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311289319 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312021296 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308455712 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310051848 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309217014 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311460665 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311424018 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307975839 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310374485 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305524593 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312467695 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311247103 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31125295 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310092 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310549958 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313464704 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311971732 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313142026 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312305438 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307920095 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310868817 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31269478 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311789829 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312553227 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311843752 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314357668 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313986618 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311987297 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31148706 seconds)
  done (took 87.639353783 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308328664 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307980733 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311561521 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312726647 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313417174 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316333355 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313914169 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313097284 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313966048 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30940465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312066755 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312332291 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314249017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312611477 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313314202 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307590444 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309363605 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312671321 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31212208 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314612399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310031924 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311062674 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312864473 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311867294 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312625294 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314164134 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310445153 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311320177 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310783223 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315371332 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310720814 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313973402 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312558215 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315320927 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314483988 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313691805 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313746379 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311985024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31032208 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31485278 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315592137 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316763177 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314902496 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316167748 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3147874 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316242346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314600103 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316844538 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314721468 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315913771 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313178991 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31660115 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315182937 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316540473 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312355275 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316652843 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316268412 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317504633 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31545952 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316464953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317298755 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316968837 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317511772 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317282361 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316192432 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317134782 seconds)
  done (took 87.905295837 seconds)
done (took 1805.891934326 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.476657013 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.430375665 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.305871043 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.3159423 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303540869 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.304302702 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.320636048 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304004874 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304248578 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.304365512 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.308441948 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.503063843 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.343984397 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.301921218 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.304013751 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.405981793 seconds)
  done (took 26.734371055 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.331462068 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.322701634 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.420347063 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.323232216 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.345436934 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.497988231 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.377208921 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.325187847 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.476481179 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.341921001 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.310514363 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.339747128 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.322700871 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.312495389 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.352208272 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.500915708 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.563286599 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.317375159 seconds)
  done (took 28.979084473 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.737267028 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.332878575 seconds)
  done (took 5.279439627 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341282383 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.3232777 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.323764956 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.321625444 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.320153397 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.312517755 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.322775727 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.322134648 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.306996729 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.440526778 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.327493 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.334880407 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.339420647 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.325707386 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.333617922 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.366237862 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.468646259 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.331289406 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.332869896 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.32987487 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.323065687 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.414876187 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.366245164 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.335162269 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.439199031 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.315649078 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.328728831 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.329748928 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.446597131 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.332333705 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.324576834 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.32569181 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.327698939 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.249338961 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.852963953 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.314265833 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.341425252 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.332076969 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.331397165 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.454655006 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.324035775 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.330492614 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.317548848 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.84852778 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.437330236 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.436494952 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.338881093 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.326040988 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.32289515 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.386275384 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.32402135 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.328617573 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.378525319 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.132021038 seconds)
  done (took 84.748228373 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.379798662 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.318282005 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.502039211 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.345333627 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315060977 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319929534 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.319174504 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.586108667 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.341206472 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319448716 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.622123 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.925170745 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.333534802 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.386078602 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.350301944 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.371056993 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.334231643 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.330552968 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.319613424 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.316259851 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875259553 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320952604 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.316086397 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.407219787 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.359287147 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845204096 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.318175694 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.322885007 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.336875163 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.316858823 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.899164012 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.332698478 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.373411258 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.316405763 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.599887686 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.697582279 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.660347505 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.323171876 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.356165265 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.318856665 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.347764817 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.835036766 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683903641 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.323939331 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.323911741 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.835480323 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322379039 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.330938705 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.320378585 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.58626142 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.324191551 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.323191208 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.324149047 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.325397617 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.320770623 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.368378355 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.386605159 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853066754 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324307081 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.318129425 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.362066532 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.321064381 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.33215125 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327959614 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.324479112 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.678998367 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.581139754 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.326244747 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.685810434 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.890366445 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.324396042 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975055842 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.327562777 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.344915739 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.370475889 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323162427 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.317798549 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.848079255 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.350779639 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31845526 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664433967 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.327349751 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.618008837 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.33867814 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324845374 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893978571 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.334227928 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.362673881 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.32344809 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.327567428 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.334988734 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326531325 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.611024246 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.375566134 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.323199784 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.324045127 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.328283849 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.321099726 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.33675065 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.334477711 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.965518202 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.327654512 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.320724562 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.337562742 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319402699 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.321441015 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.32221268 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.326419715 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.607343884 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.322779243 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.34841671 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321640303 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.323263991 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.325765832 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.418947108 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.334413673 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.625235869 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.327244113 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324330117 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.323480639 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324605035 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345751787 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319293148 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.341290265 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.291737444 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.638111426 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.34064257 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.340445674 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324496992 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323273151 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328732281 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.327006593 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.381043286 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.329206537 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.113647453 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333820461 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.333947519 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.326222855 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.333744493 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.321744842 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.330993099 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.327643058 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.627358512 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.607827199 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.596521208 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.321215596 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.325356528 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.127244223 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.33530426 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.50942438 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.33950042 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.323122383 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.608871581 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.562735855 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.324636898 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.325495715 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.321210572 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.607764542 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.33876392 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643331135 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918723503 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.330718932 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.327803364 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.110735546 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.142168471 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.326445025 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.330014714 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.619846069 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.345924913 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.32400445 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.325905009 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.328645679 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.326756445 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.330132108 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.332486494 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.329571815 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.327499463 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.618801207 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.524363153 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.345485311 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.330805691 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.85443172 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.354937767 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326466911 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.332392629 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.330060768 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.326140835 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.407258311 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.335418362 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.381386687 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.329297776 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.323515409 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877074723 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.332492299 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.329854615 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.522114099 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055066454 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.331591081 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.324607533 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.329058926 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.394707156 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.884514362 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.37596478 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.630145621 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.332891687 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.371296385 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.328143371 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344837123 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.888183349 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.342553581 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.333870382 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.063979976 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.335541915 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.811416095 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.327631863 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.332718247 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983320828 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.333052048 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.334402004 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.341780995 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.32809081 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.653496047 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.332793227 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.352160764 seconds)
  done (took 496.918051447 seconds)
done (took 643.853295828 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.331943514 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.329519715 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.330423214 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.334323042 seconds)
  done (took 10.548195844 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.34964258 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.339104918 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.349956751 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.338708206 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.348034696 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.340038453 seconds)
  done (took 9.289737505 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.329159991 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.337186432 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.335625746 seconds)
  done (took 8.22599747 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.537792782 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.353593496 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.672173262 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.334762882 seconds)
  done (took 9.123152629 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.351020399 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.346888592 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.351274086 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.346914612 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.347209399 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.352077743 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.353416141 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.351371434 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.354538597 seconds)
  done (took 13.379915808 seconds)
done (took 51.790883768 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.452054735 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.486951571 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.427000926 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.335401303 seconds)
    (5/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.504865412 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.404453261 seconds)
    (7/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.311294767 seconds)
    (8/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.667556361 seconds)
    (9/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.480429516 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.481164195 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.369296409 seconds)
    (12/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.337934347 seconds)
    (13/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.453796811 seconds)
    (14/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.363891046 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.415176464 seconds)
    (16/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.541773202 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.447359338 seconds)
    (18/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.30979687 seconds)
    (19/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.427057485 seconds)
    (20/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.420183439 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.492492801 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.503726158 seconds)
    (23/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.37827311 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.329203932 seconds)
    (25/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.540830597 seconds)
    (26/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.612254309 seconds)
    (27/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.500075554 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.421106838 seconds)
    (29/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.48258652 seconds)
    (30/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.533598465 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.308650318 seconds)
    (32/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.431900373 seconds)
    (33/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385916694 seconds)
    (34/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.41313891 seconds)
    (35/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.325645184 seconds)
    (36/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.500799158 seconds)
    (37/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.402833351 seconds)
    (38/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.335600797 seconds)
    (39/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.311492098 seconds)
    (40/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.314542147 seconds)
    (41/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.370536196 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.41980748 seconds)
    (43/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.314387842 seconds)
    (44/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.543362602 seconds)
    (45/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.488771277 seconds)
    (46/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.315339649 seconds)
    (47/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.316912794 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.45932383 seconds)
    (49/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.404461019 seconds)
    (50/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.314645281 seconds)
    (51/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.317911926 seconds)
    (52/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.317966549 seconds)
    (53/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.435657663 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.337907771 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.558534005 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.493161433 seconds)
    (57/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.479046582 seconds)
    (58/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.414692742 seconds)
    (59/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.364105156 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.479271657 seconds)
    (61/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.74278408 seconds)
    (62/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.402100336 seconds)
    (63/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.409769137 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.316791414 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.482433316 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.438025107 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.454853885 seconds)
    (68/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.449234033 seconds)
    (69/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.313848505 seconds)
    (70/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.563293938 seconds)
    (71/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.517726126 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.450523445 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.5840372 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.444143676 seconds)
    (75/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.404897012 seconds)
    (76/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.372145116 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.44894996 seconds)
    (78/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.614728593 seconds)
    (79/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.384752835 seconds)
    (80/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.409167924 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.430184394 seconds)
    (82/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.575541773 seconds)
    (83/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.429002647 seconds)
    (84/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.310630833 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.859173575 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.318537508 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.439877961 seconds)
    (88/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.319900483 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.491065104 seconds)
    (90/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.424594086 seconds)
    (91/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.31277349 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.431125822 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.343151569 seconds)
    (94/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.318721773 seconds)
    (95/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.456029529 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.453372919 seconds)
    (97/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.42299337 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.369740772 seconds)
    (99/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.386942345 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.447069507 seconds)
    (101/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.587474714 seconds)
    (102/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.411107141 seconds)
    (103/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.433395521 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.486442413 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.577869728 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.462525331 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.372527637 seconds)
    (108/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.416139511 seconds)
    (109/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.612024928 seconds)
    (110/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.319928142 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.424510938 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.52612414 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.648567936 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.426301419 seconds)
    (115/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.319812784 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.357909088 seconds)
    (117/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.669013898 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.344275716 seconds)
    (119/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.408926166 seconds)
    (120/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.320787905 seconds)
    (121/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.366575431 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.383145158 seconds)
    (123/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.410659364 seconds)
    (124/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.519771671 seconds)
    (125/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.547169031 seconds)
    (126/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.320307353 seconds)
    (127/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.460045448 seconds)
    (128/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.327241913 seconds)
    (129/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.322063444 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.498063078 seconds)
    (131/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.331503204 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.456021987 seconds)
    (133/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.618162589 seconds)
    (134/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.468723709 seconds)
    (135/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.541487887 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.435637092 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.477133317 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.467090476 seconds)
    (139/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.41156138 seconds)
    (140/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.462495586 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.413280532 seconds)
    (142/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.614844598 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.611910475 seconds)
    (144/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.516263578 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.340450616 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.33015634 seconds)
    (147/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.437600924 seconds)
    (148/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.688881025 seconds)
    (149/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.499472878 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.834177734 seconds)
    (151/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.375409902 seconds)
    (152/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.682896391 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.596252173 seconds)
    (154/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.554745758 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.402981265 seconds)
    (156/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.32107014 seconds)
    (157/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.458551742 seconds)
    (158/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.582067 seconds)
    (159/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.390003895 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.382844991 seconds)
    (161/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.332465067 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.320251999 seconds)
    (163/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.333873481 seconds)
    (164/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.440171972 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.346114587 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.457493686 seconds)
    (167/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.514613513 seconds)
    (168/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.518810895 seconds)
    (169/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.385186198 seconds)
    (170/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.437991239 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.585491334 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.587574609 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.458504591 seconds)
    (174/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.406486956 seconds)
    (175/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.379461774 seconds)
    (176/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.389949439 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.451049021 seconds)
    (178/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.339635197 seconds)
    (179/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.556716599 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.547204989 seconds)
    (181/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.64129211 seconds)
    (182/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.321472206 seconds)
    (183/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.66070234 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.317044207 seconds)
    (185/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.698577244 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.344948545 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.596955624 seconds)
    (188/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.320154956 seconds)
    (189/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.38773074 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.49906309 seconds)
    (191/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.680812736 seconds)
    (192/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.504108301 seconds)
  done (took 327.036410034 seconds)
done (took 328.261620578 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374745191 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.452157488 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.356787098 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.355484767 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355407166 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.348313306 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.376736574 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.359456055 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.369165811 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.369976962 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.345008785 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.367535472 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368151205 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.365611571 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.39084649 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.359139216 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.355938836 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.367089362 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.368559861 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.370076404 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358275492 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360241388 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.381737112 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354934601 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363733002 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362763506 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361880685 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.351329472 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.367431886 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.373322414 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.356888781 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.361647297 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.372385395 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.370861838 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357535523 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.367918121 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360187723 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.452861906 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.377812837 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.369122048 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.365891339 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.371135368 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364867691 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.360206604 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.368484317 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.384926808 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361592689 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374176902 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.345732327 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.346838781 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377043212 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.372583909 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.365577836 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.348967166 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.35850565 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.370798616 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.365360593 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379419645 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.363669114 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355155241 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.38997385 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376783258 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.372496929 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363853213 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.365822897 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.373408446 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.368747409 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.372567901 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.366118062 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360085176 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363729609 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.369734623 seconds)
done (took 107.740460412 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.482644209 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.352499697 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.517642999 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.36573355 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.525079382 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.480171213 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.366705798 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.365195411 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.367126062 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.155140933 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.362967586 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.366700639 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.352540159 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.366593828 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.47843554 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.365041213 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.365741776 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.053878544 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.369780038 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.496873553 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.361484465 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.36933377 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.366585417 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.15480017 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.355507538 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.354088317 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.499118275 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.366498635 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.053374154 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.352019322 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.35530829 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.052731835 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.49836532 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386354877 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.378403803 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.377961406 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.526549649 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.368860261 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.482106238 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.482060669 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.519199708 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408933538 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.349291022 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.354922686 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370445962 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.373095215 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.369898447 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.395300883 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.358732774 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.371672255 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.055505398 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.379371095 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.366689637 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.372511415 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.368098546 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.399216645 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.370095233 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.368744007 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.499081075 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.369584731 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.486234509 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.156673652 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.155952343 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.370223691 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.355905867 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.371504984 seconds)
  done (took 110.257738029 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.432490707 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.432085699 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.469148245 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.35982337 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.409467542 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.4747059 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.360807903 seconds)
  done (took 11.180815708 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.369136748 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.37113637 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.411079549 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.40869424 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.367601334 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.534572005 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370977754 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.369326667 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.367686473 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.411614345 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.368861048 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368062056 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.379297425 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.359836835 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405565291 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.371468636 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478039203 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36361213 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.371243365 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.511713187 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369612484 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.379953893 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.411445296 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.371730373 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369371804 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.368407359 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.153649038 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370908992 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369568025 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.371156745 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371123506 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.427534861 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.371288537 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.36054149 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370524353 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474727644 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.372160804 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371447429 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.369537739 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.364284671 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374227661 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.370038115 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.374618918 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.373065314 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.375405051 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.388208839 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.37580495 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.373415411 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374533853 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.372051243 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.411009703 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375452778 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373198397 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.375390782 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.417937583 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38430741 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.372209082 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.372539822 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.374168636 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373636485 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.518769531 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.413153128 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.371068965 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411151997 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375443844 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.373261093 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.374286928 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.374178365 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45554611 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.371892419 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.410652137 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.376490054 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.544889912 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.38984978 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375088119 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.368478644 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.365858677 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374664072 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.359963283 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.370411144 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.372955216 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.367279833 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.372694545 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376957923 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374456474 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.524960334 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.47122279 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.371690261 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.379451899 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.371221407 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.375653709 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.41458353 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.374939072 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.37593522 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.416905427 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.486840596 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.420145109 seconds)
  done (took 140.997901898 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.378028169 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37922237 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.369446892 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392179066 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.366583662 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.36517299 seconds)
  done (took 9.501455947 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.370092097 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.383143431 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.379811387 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378239128 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.375290806 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.376415144 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378430168 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368863632 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.378557478 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.378346362 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.376750654 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.377817187 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.380919652 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.375312505 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.376906115 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.37912053 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378662034 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374476301 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.378156893 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376706609 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.366869065 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.375669389 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378057212 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.367909211 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.380972072 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.380983675 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39408158 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.376931763 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.377504807 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374062211 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.380524034 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.378727158 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.370696815 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.371872604 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.380444919 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.368973896 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379877842 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.378195459 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377008329 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.378061617 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.378153071 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378285591 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.377594411 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.381462584 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.368926146 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.371566751 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.380346742 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.391850765 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.377654187 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.378071772 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.379585086 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.380573763 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.37869926 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.376952956 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.371042193 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373179481 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.383858023 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.380880627 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.382034043 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.374103051 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.383210861 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.378756477 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371547155 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.381608992 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.380304677 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.379204652 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.37395367 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383149766 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377661599 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.379913062 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.383449807 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.380247023 seconds)
  done (took 101.450678133 seconds)
done (took 374.628430765 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.79389664 seconds)
  done (took 4.042515682 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.375650395 seconds)
  done (took 3.629601303 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.395262097 seconds)
  done (took 22.651119153 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.394812657 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.40096023 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.375115387 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.369591401 seconds)
  done (took 10.790231206 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.639337847 seconds)
  done (took 3.892966731 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.374679891 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.392940637 seconds)
  done (took 6.02239533 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.564037247 seconds)
  done (took 3.81795334 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.590817157 seconds)
  done (took 3.842810378 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.399369693 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.379407801 seconds)
  done (took 6.039391191 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.346628989 seconds)
  done (took 3.600636264 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.728897581 seconds)
  done (took 20.985973729 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.392549717 seconds)
  done (took 3.648791587 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.401324282 seconds)
  done (took 3.654405392 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.885231941 seconds)
  done (took 6.140496948 seconds)
done (took 104.009849606 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.369014131 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.374031966 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.375235755 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.373939718 seconds)
  done (took 10.746394353 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.44889714 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.448533534 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.456858819 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.442801668 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.440876168 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.452062531 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.41192847 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.410261616 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.438076662 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.439238315 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.450466085 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.443626384 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.449954887 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.410497227 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.439153748 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.454739512 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.440106666 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.459005275 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.410279638 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.444498106 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.385535681 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.443509089 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.437727985 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.387696052 seconds)
  done (took 35.700572266 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.895309216 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.448250423 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.529251961 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.428513668 seconds)
  done (took 7.559952262 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.492961641 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.491844364 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.508936184 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.545995044 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.591083473 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.503681283 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.410247824 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.410234882 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.392991451 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.493151211 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.569588975 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.488765859 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.707108401 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.38766437 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.704207971 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.388941999 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386383839 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.491781417 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.541762715 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.570419636 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.387170818 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.490652652 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.49677052 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.491334695 seconds)
  done (took 37.199758658 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.398873971 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.404930683 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.38853678 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.403379275 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.389568718 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.387620435 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.390261019 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.396835971 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.386016761 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.38855415 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.388003887 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.402468285 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.388598412 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.387303695 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.395251604 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.389191312 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.391620482 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.398728397 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.398140148 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.389863773 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.388349084 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.397280376 seconds)
  done (took 31.909036602 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.373222421 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.372536876 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.725057217 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.629682746 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.375785722 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.373264334 seconds)
  done (took 14.108338236 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.450047228 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.588300046 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.381133495 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.726589409 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.813161677 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.386531004 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.379843778 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.619049451 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.915522227 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.908371782 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.438952493 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.451009237 seconds)
  done (took 20.322131381 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.37649135 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.378161981 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.378436237 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.39599801 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.433487836 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.38480498 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.386629217 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.377050356 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.440822172 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.439688536 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.384516432 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433769715 seconds)
  done (took 22.068064217 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466542997 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38641553 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394826861 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430471293 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388444995 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384930068 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.445336485 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.109936686 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.396242708 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663071045 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397866766 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470688483 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638027233 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385227957 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392930341 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.349355396 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618225957 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870265813 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392851048 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388070608 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440941659 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389805116 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40237753 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.593879075 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393351699 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386631242 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.650005963 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387523464 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668426275 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646674856 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646886463 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395584006 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662961127 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033125222 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499622136 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589702306 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387680769 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388877282 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.369159846 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.417566061 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399240051 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39456278 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638136136 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394458725 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391823716 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397806471 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120127081 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400669436 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.392261172 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392167034 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645705081 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475521796 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.398195779 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391102468 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414989621 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393365616 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.392959296 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515219173 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032013887 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392656349 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402272648 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.394549011 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385129139 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412595068 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031559192 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.402572485 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.396673258 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393190338 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390038068 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390066091 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418259832 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393010373 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.41225346 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390696004 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147661174 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396188174 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417453796 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925431717 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410556686 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.394381755 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620821407 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392627818 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39381971 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.390379159 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392485083 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11766829 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401708637 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.361213249 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435241689 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.11471473 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599971224 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415904799 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420662349 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612382963 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.359304965 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391058931 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.405062591 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398771132 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409878858 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.118249421 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396952819 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.398131764 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644231427 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.606881986 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398572139 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.363055582 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871184655 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395094254 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.437537797 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40181787 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600207269 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.007349093 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659057682 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413406534 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430297559 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395761199 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182845205 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409869666 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404913642 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409340634 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678739046 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.208398612 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401268133 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469855566 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396434733 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394240087 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398572652 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401283915 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395239099 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.572075669 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408160995 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.652925242 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.402155916 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396200544 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.391816623 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396008568 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.400653692 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621076633 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412338142 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677032916 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400340921 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398339666 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39529298 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.614510235 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.395047571 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.403136638 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738455084 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407929501 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407866441 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65666084 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433149621 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510589596 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432682759 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.40534318 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647692542 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.40348724 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.404131318 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39627098 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402013745 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406189533 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.404953156 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403402185 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01079236 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380705157 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402798912 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401283123 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.416266275 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472844876 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410058687 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603205858 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.408521746 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393837644 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.403033521 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.402837996 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625792507 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657823436 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.420807077 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578215511 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.874585082 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.010539672 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418396562 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.399460775 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.401479745 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.400117513 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403362455 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400344971 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403079257 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606251809 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666322558 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396240041 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017577238 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407723018 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403274168 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.413748368 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655377164 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.415744654 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404499787 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.401316803 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433610774 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407318198 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.659390797 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625848615 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.416628546 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404028706 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.920257018 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408693882 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403012459 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403344974 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430438978 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404146033 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241401516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742310031 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412544413 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662659381 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405984822 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.441253143 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.403872753 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409156629 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40671809 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.414380033 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428627665 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.609492874 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410049453 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40863629 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040617539 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168873136 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96493097 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407925753 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.422037688 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407114814 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138012165 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406801008 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40200992 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654767376 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137479945 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407379216 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879449929 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.410123682 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151785382 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665589519 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632486044 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404669153 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.423031829 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664710075 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62207262 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428198873 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404025339 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425956006 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.371487579 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95077175 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412971099 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58667029 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13844798 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415535524 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411266758 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.470789167 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.424329846 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8003447 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409327927 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408355706 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404016787 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424101991 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247262047 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409343435 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404406429 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045294607 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41195191 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.889414928 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411664109 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612134575 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.668997679 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.642869012 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.412813849 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.414521431 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.651700173 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665190695 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411798151 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409723549 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966912513 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.268768039 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.417601974 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410278742 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193520287 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410359317 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695861056 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.422427052 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.416043919 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415509396 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411625123 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409550001 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.408183373 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412860182 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390950791 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887939951 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.425086209 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42894018 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423875422 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409331567 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661929163 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.427526227 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025308199 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638014573 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418215985 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444919471 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.415653625 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416694759 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.381970605 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412970587 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40714943 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407599253 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632663478 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406673771 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.381742502 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492253299 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625412871 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411062446 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421759633 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631180798 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.411832729 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.420296788 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178036835 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446018515 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421209951 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414729632 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404214395 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463909706 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486507737 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618165362 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.673991018 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.671447653 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804996345 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430262226 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415519766 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.424103737 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493231729 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421411427 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.425275792 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.413109793 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025203105 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18612205 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.03515308 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674149516 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413280312 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413115417 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414473257 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65202689 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413009668 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688476471 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41222697 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.406865175 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433452734 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423752147 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42099445 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627570793 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688780445 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41005566 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414407757 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416797915 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.412498201 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677876807 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.627844611 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900979436 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95682847 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415107672 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419380827 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.155494856 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69431408 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416168989 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415053301 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418185172 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.429151481 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.410602158 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.446023469 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414954611 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661403687 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672342895 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072057339 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671846464 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.44398627 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.337358606 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428056274 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668050153 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248088493 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620835433 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040703408 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.136472445 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671091831 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4904772 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617977259 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.419004058 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650949367 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.418823503 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.4184748 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418629177 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416834475 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.415771304 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.673829938 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040430791 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674475968 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.423862879 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.419040401 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449083509 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.62277567 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643632107 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152606407 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639170748 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679580473 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.428378179 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418141671 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043460494 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681317154 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420189942 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.42100824 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634508917 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420110583 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454415564 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.289295155 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.417390898 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95843333 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.634362785 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440315541 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431603922 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139512866 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043706006 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.432698513 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907061148 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422731068 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424575555 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696460792 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.426291262 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417025115 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716391347 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.424556065 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43150307 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628911515 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.03714168 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181644472 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.436986627 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41873505 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.425474813 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421019711 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481755662 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419177784 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417963707 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.819519418 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422698033 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42047323 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431904153 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.428458927 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437593665 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.42387125 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421358095 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.42610506 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.399376351 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.393307363 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438392327 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54800922 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994592236 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42560308 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.038984709 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.758851068 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.671458467 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438395934 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.393134694 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.429547831 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424524802 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423019272 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417932652 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41540441 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968072011 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.434275647 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.685857491 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432288971 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.636830075 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636822028 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423647114 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651379963 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438083533 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448113772 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.392599759 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422560396 seconds)
  done (took 996.72661923 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.440128647 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.429423725 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.435244377 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.41348424 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.442592402 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434085746 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.44049809 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.497672364 seconds)
  done (took 20.82286551 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.416594519 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.423865685 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.415694773 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.424124992 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.427939834 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.903540141 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.426930234 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.420216263 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.438264629 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.417820458 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.426904161 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.052778355 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.427043887 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.414173407 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.43083021 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.426882949 seconds)
  done (took 33.186349526 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.180865577 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.457269132 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.059124069 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.473777711 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.424440666 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.41966138 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.58252599 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.413577497 seconds)
  done (took 26.306343679 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.431823387 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.431244056 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.43179288 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.427723211 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.431848041 seconds)
  done (took 8.450961039 seconds)
done (took 1266.3644216 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.432620165 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.431759506 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.431908806 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.434411264 seconds)
  done (took 7.02554768 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.394591373 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.395477826 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.39631934 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.408534814 seconds)
  done (took 9.889971355 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.097876833 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.94990603 seconds)
  done (took 5.3432165 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.95657604 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.949106844 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.943407409 seconds)
  done (took 7.145671137 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.701235258 seconds)
  done (took 2.999831848 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.387659349 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.41950986 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.42589048 seconds)
  done (took 8.53021441 seconds)
done (took 42.229995461 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.417408954 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.177303913 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.572628372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.419619135 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.57481565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.57404333 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.669338895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.429261112 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.418446072 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.431130935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414425773 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.575845902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.656457463 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.182017077 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.658675789 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.177986649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.617700335 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429941311 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417292076 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417063137 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.666859818 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.41996752 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415015111 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.443364819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.607650651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.564590311 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.430074117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.175214703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.42190849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417520768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.567260763 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.418852772 seconds)
  done (took 84.076719257 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.419780558 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416334847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.448915542 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413986419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.416172553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.43620494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.418965982 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414533695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.423934832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.424187134 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.419714772 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.416427207 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.416244663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.418827218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.419718925 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.417365263 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.435319392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420071511 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415083818 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.420649541 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.416989426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.429275207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.418817682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.435530241 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.422726873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.435248018 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.443626347 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.418838378 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419303651 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415525326 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.440497338 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.438543088 seconds)
  done (took 78.866233593 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.419097855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.421260177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.428473933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.426681407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422303119 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.426798376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.427614594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.450395636 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.432732013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.419403404 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.423266536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.426071623 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.422581609 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.423089379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.423570631 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.418665905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.422726799 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.441222676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424947012 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.426164531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.425038031 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.453663768 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422412669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.439784831 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.424842692 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.44056475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426859089 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.429298602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.43778755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424762004 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.439212673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.424049623 seconds)
  done (took 79.015906152 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.663947436 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.437430864 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.439479195 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.434788544 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.44303803 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.440649489 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.435101124 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.671844506 seconds)
  done (took 15.267508923 seconds)
done (took 258.524415854 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.433669351 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.91678351 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.463912116 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.43589817 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.448366492 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.460324289 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.637225606 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.461626741 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.627976849 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.444297229 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445092689 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.435816885 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.229017904 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.567858571 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.239614274 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.368943981 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.307947984 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.4291736 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.986257477 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.65687799 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.462020536 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.425087253 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.247780495 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.317619112 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.404537423 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.491312138 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.493003818 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.584412354 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.546620175 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.491275617 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.9222742 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.454908167 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.442202986 seconds)
  done (took 65.583130103 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.431824888 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.44530884 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.443993502 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.444551753 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.441898521 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.439533061 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.430306101 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.445603949 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.443464414 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.443456869 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.443209914 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.442854349 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.445309383 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.441582457 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.442499459 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.417018911 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.433926875 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.443532882 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.43261225 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.415995387 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.442629997 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.440540018 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.446187111 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.443556645 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.445875423 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.445603512 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.446015166 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.44231004 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.442673957 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.446089657 seconds)
  done (took 44.51572245 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.44480192 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.009738008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.170566874 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.441627381 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.435337792 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.441308559 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.721857805 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.448917959 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.438046198 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.439834345 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.919393598 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.4515236 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.467387263 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.182034095 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.439201067 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.447088456 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.443562082 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.436948643 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.019659799 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.448987087 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.720756661 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.446073733 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.724715189 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.448540377 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.439851299 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438186974 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.442345017 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.244619745 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.458452049 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.915794311 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.209904202 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.718003023 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.181577886 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.225724505 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.22029186 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.45175803 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.44933203 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.922003527 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438981961 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.435468183 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.721853033 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.442562116 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.185142473 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.122264038 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.458012859 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.449931612 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.275966705 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.921487968 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.680842844 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445331552 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.218153679 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.443253818 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.452812974 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.441684208 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.677727537 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.441828635 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.439778406 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.297323227 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.446412821 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.721151759 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.451236242 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.440751772 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.016966462 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.442055457 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.014051399 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.443905202 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.443165776 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.440229672 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.190042544 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.443196862 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.143725458 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.460835062 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.446782496 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.918519223 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.0162242 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.322853919 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442870678 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024112382 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.207923598 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.741438162 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.446582272 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.226458188 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.741762881 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.446068556 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.453559889 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.452289057 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.450934933 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.52333799 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.72124673 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.063390248 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.141565998 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.30068699 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.722611653 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.450956958 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.444222745 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.29123208 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.44878574 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.449480181 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.186454219 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.142000226 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.457038219 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.446633091 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.131793537 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.45995706 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.730366883 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.451132582 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.224590957 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.442315373 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.522705995 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.451000373 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.45181032 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.448364647 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.728825896 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.449699517 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.453297301 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.122348316 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.945458962 seconds)
  done (took 200.445111057 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.437280278 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.431599012 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.438407004 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.432814008 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.434279176 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.443912821 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.436794635 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.436021531 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.443312718 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.435296628 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.436840248 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.444922194 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.443653622 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.43864261 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.438752864 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.451514435 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.435203967 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.444026194 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.45287877 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.437226138 seconds)
  done (took 46.106636625 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.455205529 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.007076552 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.970754895 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.457149886 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.452746204 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.444908863 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.502237796 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.457180601 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.451629675 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.745770969 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.616860917 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.456386365 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.454223059 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.453627477 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.972027593 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.430526159 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.745962369 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.01140088 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.458488173 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.008959915 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.427777543 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.454487575 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.441634717 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.008119033 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.759396582 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.730027999 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.504484616 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.015338582 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.455281472 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.455669499 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.010972084 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.456146856 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.446928002 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.993839493 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.455285273 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.473236019 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.453445475 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.503782854 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.507829916 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.75123231 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.018509398 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.739053588 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.469145073 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.613274271 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.460426502 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.428004242 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.01885515 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.457732169 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.425199389 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.457713438 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.460329001 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.982131983 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.451356078 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.984516697 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.458846372 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.457132723 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.013293775 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.985508732 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.978102485 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.619527808 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.449052587 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.731641321 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.459519632 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.023707073 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.462159043 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.458379471 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.457853489 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.62118371 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.01782287 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.733885835 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.751989935 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.754006127 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.462176805 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.515160655 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.459436805 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.752330652 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.514361575 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.845924003 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.753234487 seconds)
  done (took 130.87539329 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.72237782 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.56039958 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.831303557 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.031983666 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.954161577 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.587562697 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.563334262 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.694383397 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.453687363 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.580941808 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.115938682 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.542835585 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.207526048 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.518489142 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.562286788 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575873299 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.854652106 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.40843343 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.094044028 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.079211317 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.4523938 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.554306527 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.973527777 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.65713361 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.446041324 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.015149477 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.382577419 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.974117881 seconds)
  done (took 54.713710111 seconds)
done (took 543.540472007 seconds)
SAVING RESULT...
DONE!
