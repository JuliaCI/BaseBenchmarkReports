cset: moving following pidspec: 20654
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.594343188 seconds)
loading group "string"... done (took 0.528221751 seconds)
loading group "linalg"... done (took 9.689146217 seconds)
loading group "parallel"... done (took 0.173158617 seconds)
loading group "find"... done (took 4.596129354 seconds)
loading group "tuple"... done (took 2.10198683 seconds)
loading group "dates"... done (took 1.402909103 seconds)
loading group "micro"... done (took 0.19317323 seconds)
loading group "io"... done (took 0.536408564 seconds)
loading group "scalar"... done (took 58.956129245 seconds)
loading group "sparse"... done (took 14.089748874 seconds)
loading group "broadcast"... done (took 1.760817892 seconds)
loading group "union"... done (took 11.222741782 seconds)
loading group "simd"... done (took 3.719055902 seconds)
loading group "random"... done (took 13.89718363 seconds)
loading group "problem"... done (took 2.245588445 seconds)
loading group "array"... done (took 24.300448379 seconds)
loading group "misc"... done (took 1.167745587 seconds)
loading group "sort"... done (took 3.697626793 seconds)
loading group "collection"... done (took 22.115739682 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.688049443 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.15047144 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.239106741 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.228351379 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.276269204 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167699517 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157876983 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.172118292 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.644511409 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209298399 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137957419 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414671303 seconds)
done (took 6.256908632 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.259792528 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.24288721 seconds)
    (2/2) benchmarking "String"...
    done (took 0.187165108 seconds)
  done (took 1.143475503 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075811202 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157629225 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108465315 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093550824 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093578284 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109762884 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09306876 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108464144 seconds)
  done (took 1.483618913 seconds)
done (took 3.683467805 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.527368613 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.880689262 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.521523665 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.180474983 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316824658 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.305066014 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.264179393 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.222593013 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090311407 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084326328 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175519917 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.505438639 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.383974867 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.06690339 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069625341 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094424073 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.153239541 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.892228731 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078434602 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109547844 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.527435346 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212734415 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117069656 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107980774 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187060224 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135223653 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140368867 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099949554 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662987809 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131248113 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213304581 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082670426 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.138579091 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165468442 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211482342 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109110615 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661219401 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200504996 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097594504 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098865995 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.756640433 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116163605 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203857118 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105350866 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068592418 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182468583 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103644743 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092519584 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092952103 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085609166 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159866664 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.462136342 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106390679 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.191225575 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092978034 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.795460366 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096767455 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272870286 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125893839 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096442082 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093692701 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089481029 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159716729 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093636563 seconds)
  done (took 20.620325728 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165158194 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.183355419 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076938744 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155822815 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120205203 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096075649 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083481207 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077865328 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124585717 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17706292 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144525373 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.171937938 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094609581 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091722084 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.17088556 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23372683 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127834214 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105613035 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090319379 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109797201 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125849875 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098484845 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110465736 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092981637 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.175819356 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206738718 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108118962 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12281723 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088996134 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0964035 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143314034 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146926945 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094870452 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090135169 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172330769 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125503224 seconds)
  done (took 5.339035289 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.241817125 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105368479 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248075219 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.19855926 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151325901 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.185889853 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.204198499 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176998061 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.296607457 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.225258204 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162404519 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130841528 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09532386 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079344071 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0795691 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098273935 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.328736169 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.196144632 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.172219273 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185663223 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097912402 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098127773 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373268909 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103448864 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088865366 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114161295 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066234493 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.22919274 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094140202 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.068615795 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086485699 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.125120315 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117105399 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216783878 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12674596 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122911688 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114924985 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086802351 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22263744 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119034798 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084433702 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077310601 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.13412946 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122581531 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133928705 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096923304 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.128468933 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221974479 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085505038 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.103755651 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11293768 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.043084442 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196266677 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.148635802 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.104927724 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.273733026 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128351562 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099814618 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109697468 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.791843175 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130174853 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085810083 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08230952 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099050445 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099069056 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079812554 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.499292873 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107614932 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.251145326 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085029289 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159446537 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100041669 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123716476 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087314655 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103336462 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112570574 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085674777 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098120801 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.091579991 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082901623 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10944643 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117909479 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101793015 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084510459 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150839024 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100677641 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.127550512 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110808571 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.108949442 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087448162 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128513587 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081718088 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088323633 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.185271351 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096964551 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.13208172 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113197219 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127720603 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.106309351 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.251850164 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085205527 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125864812 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103758153 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126129937 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099060098 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08017248 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100464773 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079220786 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08059512 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159542168 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09013571 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082477916 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.109124971 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095161161 seconds)
  done (took 28.684662471 seconds)
done (took 55.358989733 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.434595625 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081608795 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084630642 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101476101 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082780157 seconds)
  done (took 1.580505289 seconds)
done (took 2.354556649 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.309217598 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197274991 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086523733 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190745582 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085866167 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195293732 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183275344 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100192684 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204277293 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084400573 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190848624 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08658609 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10353342 seconds)
  done (took 2.81777948 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103395885 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106224644 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103221157 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123760372 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087992675 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10355043 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121669028 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110763931 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103978517 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114912742 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088876499 seconds)
  done (took 1.940456006 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098295434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106108381 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093898539 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119576801 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088785653 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100124125 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117631059 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108899716 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10176082 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115713034 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087472722 seconds)
  done (took 1.912843897 seconds)
done (took 7.443751207 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.204468356 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.902289947 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191050009 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.242514558 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.356907478 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.294782446 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.607935678 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.199968379 seconds)
  done (took 15.90708407 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.202168481 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109112903 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097608178 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098221039 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.116839568 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090153181 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092919228 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.113295801 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093967297 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092316326 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09765938 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114980401 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097724594 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094103793 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.114379034 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097682301 seconds)
  done (took 2.559345292 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143586409 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12427237 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097035515 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098216858 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111044454 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097539636 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100678683 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113995124 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092114418 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094766383 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100692341 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113515181 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096784946 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09165091 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114937169 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116775037 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093917771 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114267433 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116312079 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115551222 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097873394 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097157369 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115185885 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101276963 seconds)
  done (took 3.438213963 seconds)
done (took 22.678745644 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146481744 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100238359 seconds)
  done (took 1.025737356 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162091676 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.181153708 seconds)
  done (took 1.128586374 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110104837 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089038273 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135706363 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103105886 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0905309 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106633952 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115199545 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106003788 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090889836 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091358231 seconds)
  done (took 1.829495392 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093372088 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094291729 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123683111 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169250842 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117861738 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093179217 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096137092 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112941107 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.09589465 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090149168 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.111738087 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109372379 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094956813 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127976928 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099002685 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097466076 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119287737 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097045923 seconds)
  done (took 2.732340941 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09030768 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092067554 seconds)
  done (took 0.974738624 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094527803 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089427767 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091795172 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110830891 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092302063 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092925202 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109780464 seconds)
  done (took 1.471114985 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.531103638 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.235984609 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.375632234 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074451169 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126030796 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.450637632 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105479377 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071857416 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090605739 seconds)
  done (took 2.885316341 seconds)
done (took 12.83303846 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089729579 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.239365443 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.634413036 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112057409 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089649332 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159640458 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.317951125 seconds)
done (took 2.437366124 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350370321 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.167106816 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083351709 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090862702 seconds)
  done (took 1.483225086 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081319283 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098072602 seconds)
  done (took 0.983128216 seconds)
done (took 3.265515408 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088360413 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087938298 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088514825 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10834102 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.08935739 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090443207 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090483778 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.120468028 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088915529 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.087187433 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.107173713 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089002783 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087811114 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106825853 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089318118 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088320969 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087725379 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10992894 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089993181 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090059046 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107824491 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090678132 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092823778 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089924408 seconds)
  done (took 3.122533817 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10954578 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094014729 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.113611835 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096010692 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09633726 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.11461019 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096732948 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095049125 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.11343635 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094225286 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097329059 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.096021179 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.112356492 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096601533 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093233442 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.114389326 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097018933 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092733635 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112292625 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096297832 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096057971 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111232143 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096735697 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096027899 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.114765887 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096541286 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094217762 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110700493 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096540836 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097487061 seconds)
  done (took 3.849565705 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.094810042 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08620505 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090719217 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118018876 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089781558 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093426073 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10684394 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093752056 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094346049 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090564379 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111460608 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092156948 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091889245 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110455866 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093350253 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.095470458 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.100179928 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.111442942 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092483671 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092592104 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113532122 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092168375 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.092200541 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091858781 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.111607989 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090337547 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091495416 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.110920551 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093129192 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092372802 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093857915 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.11381783 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092404727 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102126096 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.11335585 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093789454 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098198263 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10709749 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094453919 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08919838 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.088885367 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.110121644 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093971718 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.098534267 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.110544557 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093882859 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093116671 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093175819 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.110770402 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095781051 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089889653 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.110270814 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095069811 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094147636 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09458242 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090206498 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093888811 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088106232 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.111671672 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094204829 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089536938 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088279569 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.114594861 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09443238 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.108051597 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11833534 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093651706 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094554111 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.111891883 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098469978 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095549711 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121221064 seconds)
  done (took 7.9338817 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113962504 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09813362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10907149 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094134431 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094331717 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092459963 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116976616 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094058634 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092813742 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117468623 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094358828 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09366273 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112290362 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0950484 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094912104 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093206742 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117629597 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094827995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092199547 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112423372 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094012512 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098315164 seconds)
  done (took 3.020702311 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235897941 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095762523 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13871881 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120288108 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108365604 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120526004 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094527101 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097549849 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113545418 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100139081 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10186631 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117159676 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111667499 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102176833 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121117159 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105083251 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115407861 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104810314 seconds)
  done (took 2.915271416 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102676931 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093502385 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15475491 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091576823 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091258941 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109879844 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097306759 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112559151 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.115046952 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093271305 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098025031 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10816028 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091771236 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091325436 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108459497 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092814479 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092398181 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092082062 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115002597 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096941517 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096868939 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115186102 seconds)
  done (took 3.075480898 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106485021 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092220766 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126465281 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095147219 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090645407 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089599983 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116058999 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092640807 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097997978 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109920412 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09284415 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090226294 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122955724 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09241268 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097275926 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10943977 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092384076 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092190299 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109516746 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090744011 seconds)
  done (took 2.822025905 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194279096 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126215992 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106899298 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114885117 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124546461 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108607311 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132987102 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108391681 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107574032 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135794237 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110081293 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106959081 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134221592 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11168867 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124789834 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11596734 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114432469 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131945588 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107853855 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123308606 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11923897 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10654048 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132036384 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107776556 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10682825 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124703677 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108301611 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1295962 seconds)
  done (took 4.193930472 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090716335 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09080959 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089403619 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106906547 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08991061 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090165775 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087994875 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108369493 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090531116 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089249967 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107243042 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090518008 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08992267 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088678969 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108104556 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09025306 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089368768 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106525935 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089946527 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090254572 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089889435 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106824522 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090021178 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091297576 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088974302 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108372368 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090734134 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089246232 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108052709 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090383849 seconds)
  done (took 3.654052883 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103178273 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100990831 seconds)
  done (took 1.024934066 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096968016 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104447833 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089426013 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108899261 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097935346 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091282357 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116633215 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097204036 seconds)
  done (took 1.623519058 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.165166236 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.186789057 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095711633 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.120683357 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.16749063 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.17898656 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129074698 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.11431637 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090952551 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082086421 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.181814018 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082025018 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108635835 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088531725 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090272402 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116681427 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092468482 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099855361 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.116206622 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.093217236 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095943301 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113490178 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094007891 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101975499 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103678609 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094692578 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095353857 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.119943873 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090360997 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093565451 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107619061 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092939635 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095036079 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095264589 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.109373292 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.170382091 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117979244 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088914557 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092354675 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114831053 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123950171 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091769915 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112790814 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091640215 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094270774 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114404176 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097258076 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092049178 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10240838 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088449303 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092677216 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103482462 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091303559 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092526507 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108330509 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098926975 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094123195 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087880726 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106959687 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087753338 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08895 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105647065 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09603773 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095461312 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109943403 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093838333 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089921797 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.110116242 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094047205 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092911559 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108239578 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106998841 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092153542 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.113458102 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096233589 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093440768 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105431347 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098002618 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091594893 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109457413 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096163492 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120667284 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111660175 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087408882 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08812592 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097868941 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.111221469 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.094799952 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085241151 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117808735 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095162901 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092812366 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102620331 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091852379 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088458863 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.112767576 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086096116 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092361235 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090502337 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.116178651 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098642727 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08996757 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112151931 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098880495 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09790331 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109000911 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156067493 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108894151 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089175152 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095185685 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116043173 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087109709 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091657442 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089970902 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108603972 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088603353 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096410613 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109876853 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09390204 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095757321 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111193784 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09495508 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093857357 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109690051 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089648735 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09612445 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118771325 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094567092 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094045488 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092672446 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111856142 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092751803 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095588114 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108827692 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098827941 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088413039 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.111009071 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095276125 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096750399 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11011893 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089064298 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090837695 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110233873 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092265435 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095268369 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110945794 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089416664 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085441957 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092260207 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106201517 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09420554 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099691709 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106648297 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095201037 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089297795 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118910084 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090576211 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097217444 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112470071 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100123725 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098039265 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102646032 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093587955 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095964051 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092132289 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.108150524 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094725899 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09172142 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.117251779 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086393676 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096353741 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102979953 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090290039 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09687114 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094003106 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.114461936 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089412411 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.129321959 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122952104 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098021115 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090163392 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109495939 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096676782 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09026814 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.114851345 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09851509 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.095897754 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109056219 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09229421 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097804553 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10773299 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095840084 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09022468 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111153727 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085301664 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094053875 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083985253 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.116274554 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095152259 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096565341 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.116693232 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095840698 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091444686 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119642142 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089874506 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09667797 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085796831 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.117073932 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104130702 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098743606 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117678873 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095265103 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089750505 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.112368157 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10133189 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094546843 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111708613 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095221372 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086488855 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104559849 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100000774 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096730382 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089074035 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.111415125 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097161922 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094395254 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10923945 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08634625 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096638999 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122815077 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091293261 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093454446 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107239343 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092082564 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099400601 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105238881 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089268096 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094427476 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.115688971 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094564605 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093157704 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095491004 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118700106 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096289344 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094882804 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108997133 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101433986 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090944709 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.110706941 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091089798 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096018575 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086485314 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115050815 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093920147 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089697887 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107618273 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097310636 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098010439 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.116691201 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092728045 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097645737 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.118333251 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100555177 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090793721 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.126255638 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090054512 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085776408 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090354809 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105587148 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095878769 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088608292 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.116810681 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093511099 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094215515 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.118064254 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097204654 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09011308 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.11674019 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104181065 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086982201 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104755691 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092372982 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092673967 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108821327 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091677345 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095479776 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112345731 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099646199 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096853228 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089204185 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.113213557 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100074545 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089497672 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.119079138 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.1010222 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100231492 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.1084153 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098375012 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089415458 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114883721 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089187979 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09348657 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109794185 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094593976 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09069166 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090895892 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109093411 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086563151 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089562563 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118015099 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092767828 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097971401 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111826032 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092647433 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089869327 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108166345 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100896319 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091787415 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.11755896 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095432984 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087241277 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086072963 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.117539189 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093715401 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098665213 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108796926 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097300854 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100371869 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.116473455 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095326538 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101913141 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101044703 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119505151 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099855108 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086893473 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110535821 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098409192 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093275932 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115738421 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097067998 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08734564 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113751354 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100614107 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094916935 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110039105 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088151295 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094781635 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099162872 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115587097 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098659335 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095259251 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11409634 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090717714 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098296609 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118259243 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094431443 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099329267 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111194056 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09766241 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09069134 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098165917 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.11385767 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087648815 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086099285 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110084574 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100760568 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087543073 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.116340992 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.09999909 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091327359 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091453426 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.119003466 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090124764 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095459565 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117321429 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090931317 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102939463 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114092077 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092626495 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097725034 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.116908553 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088347242 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092397 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111580935 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102275574 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09329321 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098001502 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114271635 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098722169 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095294446 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.117556101 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099544584 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.097413273 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105896769 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100817649 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096538965 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.113981883 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09254304 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092170953 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087310526 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112102933 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10000242 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090157624 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121233117 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101770561 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091537426 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111819472 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100032289 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092586829 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118516438 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091121276 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095320037 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105576863 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096814302 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092701338 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09955418 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110702928 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088475931 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098593048 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.11701183 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099081747 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095781996 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.118943671 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088912703 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087963384 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115025284 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.09190461 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102136604 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114679077 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093518344 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092092582 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095171653 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.114105898 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101669003 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087500917 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108923575 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095592117 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095353039 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111124333 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090338649 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097863907 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111518934 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096530936 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092542126 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089710403 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114212152 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100440407 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090965744 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109403124 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093282928 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100162638 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111971147 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091857967 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087668147 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119209046 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097165881 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100258724 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109708381 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095816611 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091162678 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115027207 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102310977 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092682308 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093186098 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112412902 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099140101 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098337912 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108365481 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09192927 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103813501 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117534131 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096524806 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096747279 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112933025 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101526597 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101104814 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.116545577 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089977348 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089165849 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091493455 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10778359 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096927346 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098457144 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112585123 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092044548 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097744786 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118654105 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09700863 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096985954 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08676305 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121902221 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092974179 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096359763 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.107992131 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088645581 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096230013 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118847658 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093844211 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094836306 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.114947687 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098677711 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089646531 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090686118 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11863476 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098332688 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099436982 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113928961 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093571407 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100019296 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123058458 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096296608 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093936282 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121289703 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10066407 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093965958 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112423674 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099397158 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100777836 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.11615792 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101670736 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091781759 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092669742 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.120990213 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101931527 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103162478 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114036111 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089507221 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097479203 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112677095 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089281551 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096960162 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12088863 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10254336 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094120391 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.11028942 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10484153 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098417606 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112656623 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093134914 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092560279 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097712699 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113290017 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098194657 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090830788 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.121086832 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101553578 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100291683 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122490056 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089798746 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099255415 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11614305 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103467654 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094867455 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107847429 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090691932 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097775967 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101339922 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.119926584 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099169661 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097911819 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.118433659 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096389176 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094037804 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111808629 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103323512 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099690296 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094993374 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116723586 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093813106 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094721367 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.115816847 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102083266 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100760229 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115783211 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105547185 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100229939 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.111695435 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092850596 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095175102 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.116284998 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096591087 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099889266 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091209235 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109531698 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101374103 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101635642 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113219346 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103002621 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102518772 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113009034 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101399703 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102154839 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.118345232 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097981695 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095890691 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098104597 seconds)
  done (took 61.32023576 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143362532 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102779272 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11711781 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098364798 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115065366 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119341349 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09781893 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097657846 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118067924 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107210151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096806962 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116066187 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112419012 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116557529 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134790183 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107804778 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116958329 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100325577 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096959927 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098292213 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132874228 seconds)
  done (took 3.220862381 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115065043 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111249118 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126772968 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111051727 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103788356 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130019364 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108009464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127347643 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11089342 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103622212 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132135674 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108081721 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124184698 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107335152 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10553626 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123188594 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111243412 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103914233 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128891358 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109504329 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105036033 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129016062 seconds)
  done (took 3.408385447 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128159803 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100801938 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094699128 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118038569 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100892761 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096445739 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119712836 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098501737 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106403927 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092263046 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108091355 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094145761 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095744179 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117184799 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092305398 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097280477 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.1246087 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.1018005 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102697944 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096457748 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109191949 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097756503 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098213998 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107138575 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103444485 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102032428 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096796467 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.120376682 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08997621 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099637831 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117642543 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092521837 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088940262 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088241035 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110708994 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101186998 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.09994283 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117626848 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098042947 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088390634 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097454769 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.122206048 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089777172 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097909504 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118180908 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092665969 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100055001 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.116219755 seconds)
  done (took 5.824469434 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128855249 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166422451 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.342163516 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136648084 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133220764 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107938781 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10019412 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136820085 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100389928 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121334373 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115226247 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110764066 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124841714 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105483437 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103105437 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124875385 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104714141 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100121534 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126757636 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101625124 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105027424 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124482723 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113129018 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129494469 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10465817 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101025357 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120043853 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106880129 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110465406 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125883599 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10584179 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105952099 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131138019 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101599126 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10051564 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123981718 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112501743 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10149882 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124783359 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100385934 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101227833 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124960055 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104032923 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.111730099 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123360689 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102748784 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101730894 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120781572 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110352634 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120896654 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107851835 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112183665 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123347533 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102584222 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10549489 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131902819 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101403749 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100414677 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123200835 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112147965 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09897174 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.124155199 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111898121 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101692765 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127683307 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.11152868 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122837195 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.1048732 seconds)
  done (took 8.99842197 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131941736 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105136985 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132751886 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112856997 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104855503 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12600811 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106106394 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105170405 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126364098 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110678646 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125320352 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.22454676 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124839104 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110994816 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104515771 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128703838 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106304669 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10482736 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127104683 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104565239 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125248486 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115237414 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105261542 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13472628 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116997217 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10110318 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12769151 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105492112 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133514273 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107751924 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116697561 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125274522 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106071954 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112565324 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.142035847 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105492254 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099118684 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127026863 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105799182 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125369027 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103615478 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113514512 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126305945 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104219038 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106064789 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126909061 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114985414 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.117350854 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132962882 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110644609 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126989397 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114690949 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105787423 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12671519 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114292459 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141036364 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114383498 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112890753 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126848651 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113770079 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113355207 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142159089 seconds)
  done (took 8.259945243 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100604361 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099198307 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09732325 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.11916126 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099460701 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097943412 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09822056 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120257463 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098896239 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09887639 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119750437 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099123385 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098660109 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097246757 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119578872 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098648981 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098860826 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118884958 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100752428 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099189704 seconds)
  done (took 2.973276615 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108529598 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114811145 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121127042 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108688699 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101758677 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126433145 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102769767 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102616593 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099678113 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122576871 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108514805 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107967839 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122687291 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106281202 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130881505 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108280771 seconds)
  done (took 2.687478457 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118453097 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116701866 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.209468991 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102617984 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124392517 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109066386 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100033168 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126917676 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101491311 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106159768 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126441412 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105319508 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101210325 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102415204 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123025548 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105102107 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099711609 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126531825 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10233034 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.214398423 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106820106 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103757001 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124881674 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105606609 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102482729 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129316965 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108023508 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101346975 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.12391087 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.101914843 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103529834 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129109912 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102376607 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10656196 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10212914 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124929777 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103255686 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102668931 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127836685 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102985435 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.1036526 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124225876 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102275 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103503829 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.12045645 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104975776 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101011139 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106613943 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124365023 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104521877 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101920865 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128631723 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106525716 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108668326 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130517819 seconds)
  done (took 7.202854404 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113464343 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103596456 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135478722 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100709448 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102664008 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103091758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12581466 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104757633 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10223141 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121773899 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104760737 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103440991 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123861287 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103859315 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102347702 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123059317 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100098538 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103164082 seconds)
  done (took 2.875679257 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107733292 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100950993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104797827 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124256505 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102861823 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102088026 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122275221 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101515774 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101032512 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101221579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124961155 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101441006 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099413587 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122640869 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102901999 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102250205 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12231333 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102533018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101114396 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099801835 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123270124 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101289498 seconds)
  done (took 3.2737617 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112807381 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21298394 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107121641 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.221054008 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101098272 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.12036603 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109178276 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098448118 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.13598692 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099975041 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097675823 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118259602 seconds)
  done (took 2.437191453 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129710299 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139358365 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124277019 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103845735 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111662663 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129156833 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106620345 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106800609 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137983959 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118649339 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128049306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116300987 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114432084 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1367039 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112108952 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132697549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107626275 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106504753 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12322699 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123953193 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108614287 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136889308 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107160284 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105710686 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128417089 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116006255 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137050242 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118927491 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107046022 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13839911 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11158751 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105588435 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136919743 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117252883 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125729618 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116065478 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106358968 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142157383 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111067923 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135729538 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103352294 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111078027 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136897845 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111208755 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114118714 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128298026 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112016196 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12816829 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107985928 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126593885 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133418997 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115465638 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132210644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115202876 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114813994 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148531119 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118363519 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137710075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111979671 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138542648 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117070487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110768139 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137698299 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11790546 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132393302 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117191469 seconds)
  done (took 8.898218855 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141571864 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103844566 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130468161 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118509479 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114971543 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129899241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10846503 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129211481 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107953661 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10421715 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17193871 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107380523 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114503563 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136856945 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108130835 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129735737 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1081023 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115173427 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126940887 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128970394 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108050271 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138106368 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115382071 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137202275 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119346459 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132745436 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108249904 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107364016 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128509705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10866343 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113316029 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130930632 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116077948 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103110927 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137627142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106748361 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107137577 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135411447 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107138631 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132632671 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116578308 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122636359 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13082454 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108748098 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139317786 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10878795 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107187177 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127505893 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109358196 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104172613 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139769736 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118941092 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138661762 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117887018 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108893911 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128465966 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108532821 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10788847 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128632829 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113901707 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115542671 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131326941 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128969384 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129622732 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108960444 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115970485 seconds)
  done (took 8.85440041 seconds)
done (took 168.274824068 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.17453126 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.213916295 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196286411 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158477414 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094594036 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153890489 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128090118 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.195971894 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094777939 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093101175 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093383787 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120245179 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163656642 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093972679 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.116886544 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097195504 seconds)
  done (took 3.088698777 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181377052 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.332654069 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108627601 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120738884 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099641895 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098160191 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120746552 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100699665 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098359807 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127778508 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098661563 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095080326 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128336393 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095587933 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097600955 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119808388 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107368289 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098867478 seconds)
  done (took 3.147622599 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118705004 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142675159 seconds)
  done (took 1.177745899 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130517078 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215350976 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.284343228 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170697685 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120751713 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141190132 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149519578 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133989492 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188498901 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134444257 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111905624 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095990652 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14816386 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104844878 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.136806578 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097389468 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127971694 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136115154 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114689113 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099843635 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143644743 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102888185 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104222983 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135018911 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180120942 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132990072 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103669875 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10183201 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12415202 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113242656 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105815575 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13965182 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111172709 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178773366 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102265493 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17557942 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104982524 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121626194 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11219302 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099423567 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125574857 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10205235 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133752606 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098233172 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102077664 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127498567 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102891431 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102117382 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128372014 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107436549 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107418977 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12907076 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152069022 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128615247 seconds)
  done (took 7.898799663 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.875003502 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139722313 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098903729 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.018128094 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144909058 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112822187 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.841080464 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144933573 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251060786 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.893099981 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115520426 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106365966 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260884872 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255573089 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28997348 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3587687 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.733068791 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113840431 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12829154 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160904764 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107123969 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144183961 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119422431 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.513787636 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100865422 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100132711 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130831563 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108243728 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177424515 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099439334 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102921691 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193589087 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292251665 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209005875 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098840854 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120341282 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098982371 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182855987 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270558884 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218935884 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171686665 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118906442 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099328961 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10733534 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141620516 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096711772 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178157392 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188303787 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166034655 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125805021 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108481745 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109412185 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13002409 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.17519678 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097938941 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357556486 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359676004 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120413232 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109288022 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111986917 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264812824 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123264073 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235321527 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126815154 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215707989 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121867462 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829123823 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161609989 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122140266 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103577057 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10691408 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128377791 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106330451 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189280195 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.475623506 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134630549 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103959038 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097498682 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233177544 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122183042 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099499303 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179230463 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101076068 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108521752 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134219633 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109489165 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187224429 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268939349 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111011493 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108276121 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128736504 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113417796 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100852175 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232789392 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225654612 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175186474 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227893222 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107395193 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179915416 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185015271 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105226729 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189268841 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106523407 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132447453 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107495721 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224805495 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153871438 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101227572 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105207654 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130512575 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.134615511 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124756089 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110589802 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187275846 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.552902008 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162117774 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118553417 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105420776 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109657175 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179942539 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107022148 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261650642 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132111572 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161395275 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131172118 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097515432 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107453433 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178200841 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12932453 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109086899 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106156851 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131996636 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.254880179 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240969905 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109411059 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252862631 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174657955 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128918144 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189670966 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109186485 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187382891 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110616057 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10575223 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124275644 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819392841 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113698242 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129435114 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105877035 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204536782 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102219521 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103297522 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099030103 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121461105 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813725745 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106105222 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096898884 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123772902 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106827241 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107338943 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132151049 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.1058001 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178049731 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241772524 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107716681 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131162969 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100129461 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179977242 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101123489 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100837706 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125257352 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101644013 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107688004 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128064111 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102421643 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190229375 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174927406 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229807394 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.654633008 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101673515 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098986548 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261023202 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10141465 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32688582 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108365263 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.254619941 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159761745 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119192275 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358652994 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160556953 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204627125 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102659128 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189158833 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097890687 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131930294 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.153555975 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123171151 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106446876 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175442154 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112685759 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134422256 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.277324912 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100814832 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248817298 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097762142 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188342248 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101451336 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130461561 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330187189 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100527079 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136649629 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155280971 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127002973 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101818446 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.630513484 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101003417 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110864723 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128180308 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233333812 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182624773 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11037972 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13282259 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110314186 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178248126 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205578782 seconds)
  done (took 47.454202468 seconds)
done (took 63.676940902 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27000653 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178522643 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.28090124 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178417157 seconds)
  done (took 1.919060378 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.272445359 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160799656 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.254886096 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097327869 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.266925985 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097080827 seconds)
  done (took 2.090115415 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17731551 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16855857 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145784755 seconds)
  done (took 1.438315238 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204043142 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.220171664 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.328001763 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.232669354 seconds)
  done (took 2.016758743 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.293997697 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116841448 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124747285 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.235431696 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.252181121 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209269883 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123639775 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177059674 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127572703 seconds)
  done (took 2.649658849 seconds)
done (took 11.059450094 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.282455314 seconds)
    (2/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.413238848 seconds)
    (3/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.232795598 seconds)
    (4/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.291004165 seconds)
    (5/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.147400779 seconds)
    (6/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.239900209 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.223554064 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.237598081 seconds)
    (9/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.199357148 seconds)
    (10/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.322187194 seconds)
    (11/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.33366329 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117033387 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.224755639 seconds)
    (14/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.396566087 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.317235181 seconds)
    (16/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109072744 seconds)
    (17/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.234195466 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120081391 seconds)
    (19/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.199485619 seconds)
    (20/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.207160245 seconds)
    (21/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.313096198 seconds)
    (22/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.176204105 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.158158997 seconds)
    (24/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.283833833 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.131221951 seconds)
    (26/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112133553 seconds)
    (27/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.146772145 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.104765936 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.129533192 seconds)
    (30/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.196907122 seconds)
    (31/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.136952083 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.314123663 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.224470198 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.117712481 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123975477 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.11161181 seconds)
    (37/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118009509 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.336605009 seconds)
    (39/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.087094061 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.220928782 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111850035 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085735673 seconds)
    (43/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.176769045 seconds)
    (44/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.142592744 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11760804 seconds)
    (46/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.202102615 seconds)
    (47/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086086668 seconds)
    (48/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.147793447 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.270095004 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.126369663 seconds)
    (51/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.130152291 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.22548169 seconds)
    (53/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.136492863 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085405767 seconds)
    (55/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.102398028 seconds)
    (56/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.166065459 seconds)
    (57/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153351698 seconds)
    (58/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.200992644 seconds)
    (59/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.082119074 seconds)
    (60/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109073845 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.125562933 seconds)
    (62/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08192933 seconds)
    (63/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.145742376 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084039802 seconds)
    (65/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.204455266 seconds)
    (66/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.278392792 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10147634 seconds)
    (68/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133119781 seconds)
    (69/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.11440311 seconds)
    (70/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081442923 seconds)
    (71/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093439014 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.130428 seconds)
    (73/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.081074755 seconds)
    (74/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.134760598 seconds)
    (75/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079544296 seconds)
    (76/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.173578414 seconds)
    (77/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.199054416 seconds)
    (78/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083351613 seconds)
    (79/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.164211074 seconds)
    (80/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102690552 seconds)
    (81/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079716098 seconds)
    (82/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.085644993 seconds)
    (83/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.088037643 seconds)
    (84/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078739996 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.129914084 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121971353 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103729151 seconds)
    (88/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.152154936 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107268132 seconds)
    (90/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.171729215 seconds)
    (91/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.164470275 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124046934 seconds)
    (93/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.136456546 seconds)
    (94/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080806955 seconds)
    (95/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.114201383 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109758197 seconds)
    (97/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079400211 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09984761 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.135347715 seconds)
    (100/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117132257 seconds)
    (101/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.166594508 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.125020558 seconds)
    (103/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.134618479 seconds)
    (104/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11320712 seconds)
    (105/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.110618613 seconds)
    (106/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110250096 seconds)
    (107/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078431182 seconds)
    (108/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109628891 seconds)
    (109/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.106329594 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127518147 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101540329 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.176174252 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100406567 seconds)
    (114/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195911155 seconds)
    (115/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.106050334 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087018063 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112335661 seconds)
    (118/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083782301 seconds)
    (119/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.153418042 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102648021 seconds)
    (121/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.146589349 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.132372107 seconds)
    (123/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.10875481 seconds)
    (124/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07845402 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08625031 seconds)
    (126/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.133648092 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106769328 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.119151708 seconds)
    (129/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.08428024 seconds)
    (130/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.16360892 seconds)
    (131/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.192789189 seconds)
    (132/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.134230248 seconds)
    (133/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079191123 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123711879 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123429563 seconds)
    (136/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.12557954 seconds)
    (137/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.087177737 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103075442 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081495139 seconds)
    (140/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.106144619 seconds)
    (141/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.152654567 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11291937 seconds)
    (143/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133549371 seconds)
    (144/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.084667385 seconds)
    (145/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08170103 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102242112 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157547574 seconds)
    (148/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.137335611 seconds)
    (149/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.088390733 seconds)
    (150/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101457162 seconds)
    (151/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.106400049 seconds)
    (152/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078914403 seconds)
    (153/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100620331 seconds)
    (154/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085886233 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.125537479 seconds)
    (156/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.134531469 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079730577 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102076573 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.12521452 seconds)
    (160/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085387 seconds)
    (161/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082770253 seconds)
    (162/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112546134 seconds)
    (163/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.109025282 seconds)
    (164/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081037043 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109726966 seconds)
    (166/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082064822 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.147134123 seconds)
    (168/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079939 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10264397 seconds)
    (170/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109778303 seconds)
    (171/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.106368181 seconds)
    (172/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082274487 seconds)
    (173/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104037946 seconds)
    (174/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.083899411 seconds)
    (175/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.104789264 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104086513 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103944741 seconds)
    (178/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112603158 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125592381 seconds)
    (180/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109177173 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123287776 seconds)
    (182/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127308749 seconds)
    (183/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081055941 seconds)
    (184/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081608925 seconds)
    (185/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086194703 seconds)
    (186/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.106501331 seconds)
    (187/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07916878 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104676719 seconds)
    (189/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086036186 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127667255 seconds)
    (191/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08137905 seconds)
    (192/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.086202895 seconds)
  done (took 27.427339901 seconds)
done (took 28.37563027 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225318205 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130382882 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110819241 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11022712 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232383125 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119160342 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153280173 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113583457 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120539299 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136471493 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101458429 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.1235706 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134450726 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.204277583 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139998479 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102868756 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101491949 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14555028 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127005938 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127249022 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.233113189 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102745022 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.145276172 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101656639 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233270356 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10617493 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110623517 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.137602161 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124399564 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11105078 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.136067272 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102277409 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126687905 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151072873 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102231748 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11055651 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101389922 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110544617 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111989718 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113119682 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.148247579 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112658924 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111584777 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.126645529 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113125252 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110525631 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101328208 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139205492 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10189109 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111386851 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131632084 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127659367 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110862977 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125620572 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101200842 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102585345 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.14635716 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103726908 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125283101 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1265917 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104195064 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101917593 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112567144 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126033058 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11180207 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102321636 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134746645 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11335519 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109281308 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128961131 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102493631 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.1119537 seconds)
done (took 10.058127809 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107423483 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147312584 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.233129775 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.234118386 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.13132047 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.145194308 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11571604 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125946462 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.142087936 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121740589 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139759393 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160337015 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.238939664 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119214426 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117572746 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139315291 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114354708 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110508956 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.238368035 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126529174 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153050405 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118250619 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15431656 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11947738 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106920272 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154821099 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110323079 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11395136 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.13052526 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125136702 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.12733057 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.13128239 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110510001 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124845299 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148073364 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117018475 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118699112 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140691705 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107771185 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106084228 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139437203 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12408989 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106237874 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143644375 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115008914 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.146295981 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114683612 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119819953 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107748715 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139850152 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108833195 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130907974 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142087254 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123386426 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.143047464 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119997503 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120305302 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11856024 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.13359344 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118795596 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106659704 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130600047 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109629277 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150848852 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110227466 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120041391 seconds)
  done (took 9.756015494 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125784869 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136469807 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14172314 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117027263 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112383341 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125823123 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100427298 seconds)
  done (took 1.861397677 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101921942 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.244107444 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215738305 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242256571 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.240560434 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.253415201 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12563357 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101838306 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.163797128 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112757394 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245465815 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.272743391 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112164582 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117835031 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.247504578 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128026624 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.220814109 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128380283 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11747578 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.247539417 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11925956 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.159598331 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117264885 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10240003 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.237683942 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103268733 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.292603459 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147561267 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112277404 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116404508 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142228599 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.18436141 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.240278087 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117333812 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136392675 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.216726757 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.241761167 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116794609 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.25686991 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.133293307 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.215217809 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.144007863 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118714745 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117962195 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.145086079 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.20481342 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148802622 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118483636 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11552519 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.24954754 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.139724756 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21619624 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141622355 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119458778 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11357352 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146119396 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124428142 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118748519 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250975173 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119714288 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.243835512 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.245513457 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.244007405 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.245105034 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12837823 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.244616113 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.204301685 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.143179698 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111442766 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118243098 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247790556 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142625593 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115728898 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.235647642 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120812274 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.248903812 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.247207868 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115027219 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115551659 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106131037 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.142741642 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103340564 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.237714636 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116708294 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114812395 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147955172 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116136338 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.144449961 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109341476 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125759796 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.142962055 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11544745 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123254164 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142660541 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119824718 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.250139729 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113253765 seconds)
  done (took 16.996724457 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105264624 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105566222 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107932811 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129212642 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105396167 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104454393 seconds)
  done (took 1.683811557 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141284572 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11758828 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151792548 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119832377 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166673899 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250870639 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.258725921 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112376949 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.163580808 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129481784 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252851806 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.254226723 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.254671907 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12195332 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257051734 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120646248 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261911984 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115746453 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126687389 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1429871 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118327484 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121436684 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142302218 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.242923863 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11951698 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119530067 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138169679 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127156866 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.124625223 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.13875944 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121251806 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118465268 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.135286308 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112588633 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.277186148 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110341204 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141475424 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121759337 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120054654 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145186809 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.231886189 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141990414 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124655017 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120712278 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13878548 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111249129 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120561035 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138935561 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.258934524 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121026466 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120718201 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146465703 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11957701 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120562906 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.138010195 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114152793 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12041571 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.260888647 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.148904531 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111672308 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117815053 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.146719903 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112262533 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122680191 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14542764 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121435856 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110183143 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144882833 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115627742 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119749181 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146828627 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121371178 seconds)
  done (took 11.779831859 seconds)
done (took 43.068227 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.583311507 seconds)
  done (took 2.606153558 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.951287541 seconds)
  done (took 1.971806562 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.395177155 seconds)
  done (took 19.447429782 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.436131038 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.466172112 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.153678965 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14865684 seconds)
  done (took 3.225429549 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.830782959 seconds)
  done (took 1.877072842 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300682761 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267256468 seconds)
  done (took 1.592643018 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.721853292 seconds)
  done (took 1.762105988 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.528870959 seconds)
  done (took 2.554392292 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.287978722 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241495142 seconds)
  done (took 1.575893911 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.663227611 seconds)
  done (took 1.70620977 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.531663222 seconds)
  done (took 20.579252052 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259268079 seconds)
  done (took 1.306266313 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282693472 seconds)
  done (took 1.331937849 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.626180461 seconds)
  done (took 4.678414694 seconds)
done (took 67.251265848 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114371612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116827274 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115978446 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139399858 seconds)
  done (took 1.523665648 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122620541 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119200786 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145652796 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118364729 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124698456 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116876385 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143345606 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120554597 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115689596 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145175123 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119287519 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115980113 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14564752 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117990997 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114398962 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145209532 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121550792 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117699721 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143918905 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118357973 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117769767 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143332181 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122055584 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121032374 seconds)
  done (took 4.085206464 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115281509 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108658156 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109424792 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132143134 seconds)
  done (took 1.51953311 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125908775 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131075564 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153014291 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126061543 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129896248 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153153507 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117001766 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114009844 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141428537 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12670913 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133348087 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158044784 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129738815 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11949762 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15415066 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112184942 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118776922 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154093773 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.1243898 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127334919 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14424114 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125328725 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122522704 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152805348 seconds)
  done (took 4.244263949 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193051927 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130202224 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175053593 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162184856 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178345817 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115486721 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145807446 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149650471 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124512481 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119018598 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146521838 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16275614 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149593531 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121593965 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117081467 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148257693 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130760089 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122598686 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.190710611 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122505876 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151450672 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130946499 seconds)
  done (took 4.239889499 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121347597 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108406998 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103891734 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.13422909 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12072015 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110699512 seconds)
  done (took 1.759645578 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106424644 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102555056 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10213997 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128009312 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106037782 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102419495 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101514937 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129343344 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102525105 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102483045 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128213837 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101919136 seconds)
  done (took 2.374411402 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.328674741 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107835243 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134415787 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110455434 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112358921 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105963043 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145488549 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107783199 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265665978 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102739313 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.132300607 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.192697417 seconds)
  done (took 2.907946095 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205257834 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14566371 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255492572 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.681382646 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164316671 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190345506 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280705486 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189829931 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207072035 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135409098 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216167551 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16040258 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181182068 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185011374 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166123821 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157320796 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192163991 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209755703 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16763439 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239823578 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15585122 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200879007 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190055124 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175417005 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137282221 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188669838 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118257823 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153893859 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167440575 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191746211 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202297596 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149914761 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139579922 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218063666 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262820144 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206910249 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26945274 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132890608 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198329532 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189231482 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261172971 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167731111 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21962112 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15103273 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127595841 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212963598 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152054259 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.211409725 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133019099 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170563669 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213782734 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180514221 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197250976 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135878793 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326351118 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158286473 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142209846 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253919417 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215618183 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199995769 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206257105 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121928914 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199789662 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219350114 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214060468 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167451815 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163313388 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152589338 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164315771 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233437143 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208725854 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159284808 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237119403 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158922641 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170769104 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195046001 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156238294 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232501551 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197452543 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118697645 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150822249 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160775077 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125590059 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.214014548 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12148321 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243155727 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131830526 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.345585707 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206516913 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154595513 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189389178 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159941669 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190374933 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146852538 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129536467 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14427596 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.18779338 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159157889 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126893669 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181658927 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13865692 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153090309 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151378347 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.147635474 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168836378 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13237164 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19117139 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199322685 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130652316 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20530928 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14805192 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.186005799 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169355769 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221557021 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130929392 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15932013 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219619902 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197422628 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136622696 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202745793 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223853706 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151099925 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161680667 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166439697 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220805784 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141955042 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227993088 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138905001 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163583444 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140174972 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199369691 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158746018 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.187969697 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127867141 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193418761 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219346573 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126215998 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138874892 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210031062 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133503466 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151616662 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13613325 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161070914 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142689258 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147231967 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.167368578 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154259645 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194336912 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164603069 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186126607 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133260722 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200856789 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128931589 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196385067 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147615829 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.145524261 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175101856 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224982621 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128090302 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209105949 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161049406 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209495393 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198720886 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129456997 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211418274 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127225523 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119030979 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189889637 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19676307 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163289973 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217490726 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205978737 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164867994 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191075041 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147844403 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197224723 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214022019 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155468957 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170732999 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170062081 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197087798 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119354307 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120658815 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.156552227 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136473515 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155801778 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137153269 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210079913 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164793166 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205001072 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191455498 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136391138 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217051258 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123879498 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187184661 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.173835453 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136594553 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214372722 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21802577 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176662114 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169390242 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161522563 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.147257255 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12621621 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.158952221 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161152105 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134819259 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162942007 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139823296 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219276688 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200198676 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149022098 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216077232 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191675144 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200899138 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.147528723 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159246072 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1970299 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168024884 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185551482 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156841291 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.160949358 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219339835 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140547893 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219625616 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194642395 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178801174 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223659177 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.189756415 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130187671 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146519025 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18830506 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135667798 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191154573 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14457644 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159381694 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152753142 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136301601 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168836232 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216376464 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141826088 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206498723 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157294231 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200143013 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124106118 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169390898 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172566893 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173659529 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104169202 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198262352 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195277416 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175645158 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155222951 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199941724 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127845971 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.342435385 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215114621 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176578511 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162870194 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138730297 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198006571 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160013688 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192965392 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18418148 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16890077 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206124192 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199702491 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141066755 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158989912 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147809714 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177643394 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.140358293 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180429511 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161569555 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.172149054 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188525274 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16542969 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167707754 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203439459 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143384112 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178136962 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136876536 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254707766 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195240081 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172830177 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193244984 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164855658 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21068534 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122588304 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126356227 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.162779662 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18566458 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157594235 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176881883 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194538388 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209710441 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201216967 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161224589 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138573789 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.156280644 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165561405 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177466922 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212217693 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135244785 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136476631 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218436307 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.154484625 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130442975 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158439952 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317868992 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175529958 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172962399 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106285431 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308763237 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12843999 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158554123 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159855659 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197533986 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130540437 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.210094354 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174179758 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17060674 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16174017 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161646869 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178589502 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209945499 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193202317 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17520188 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.173817584 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162886487 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191051114 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173472847 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175686987 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146621311 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186288179 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193893029 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204624633 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.12992359 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196454717 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167999352 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198282026 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203230118 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13849339 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208967754 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127041904 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192364887 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137316685 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122434952 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189354153 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190986055 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129322196 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204513908 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169932915 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128893942 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154584561 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147836246 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195177665 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138798436 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.15834195 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185941307 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.15821654 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179892184 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240768038 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128605542 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194629438 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144539537 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159359842 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138249435 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171228641 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131307074 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173605146 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209574508 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130043549 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206866321 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164303903 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1945483 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185250835 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143512331 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.263265421 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.157171024 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190635468 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180059543 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226786561 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148912503 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202169874 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167248185 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179015073 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16445232 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176581601 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217932078 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19428995 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165544611 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158980887 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141937769 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138094015 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161745081 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15022799 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196176459 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142010674 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.164205266 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165625958 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171474556 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147099746 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139974883 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228664116 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180146637 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188980107 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215841757 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137114255 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204987051 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205154223 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128153679 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192559259 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170645221 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172232574 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152794164 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13320288 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.1661329 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243447125 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124728901 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159485064 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202324343 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166415022 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200449954 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134187552 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207767316 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139571329 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20391543 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125081186 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.181785774 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168583196 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163540507 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126055826 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198665469 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162936518 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.193874631 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141860659 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175524074 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221706527 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122897427 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161357152 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288335413 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188985754 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222423057 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136386276 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136886248 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174062839 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158028428 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.193193576 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169551827 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159753506 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127357206 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.174815667 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155532902 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141575281 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194348387 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208418967 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160923587 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215329162 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132395349 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279875974 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142676227 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19721509 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117530635 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.626810721 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171270103 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133613401 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139952293 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208243652 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242451225 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163725568 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175720682 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133011351 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.153221345 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129310107 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162875767 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178877001 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166371489 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174945182 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103409109 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168222655 seconds)
  done (took 86.107165996 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164486715 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150473684 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166985188 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220866293 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193394651 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290825802 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229266504 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2456917 seconds)
  done (took 2.805880524 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.116735475 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157244083 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.1406681 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142844442 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108879397 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.486509032 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158385407 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12006531 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160129113 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151270722 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134709152 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.57454808 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120929492 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143658477 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120797968 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134053436 seconds)
  done (took 4.110541867 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.800399426 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54297498 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.075891141 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.279937891 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.261994691 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.205228601 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.786241384 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.202263612 seconds)
  done (took 12.300997641 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.165118752 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.157505517 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.451727514 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.30741986 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.183633591 seconds)
  done (took 2.42250706 seconds)
done (took 131.43514524 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123274188 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122963719 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123310021 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152507664 seconds)
  done (took 1.666765502 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195053561 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091251868 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093445273 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119253621 seconds)
  done (took 1.650945142 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.477697007 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091216506 seconds)
  done (took 1.753197514 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.15955299 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135646387 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164798267 seconds)
  done (took 1.63113214 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.134775809 seconds)
  done (took 1.293111131 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125365753 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126386907 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.271095839 seconds)
  done (took 1.685610994 seconds)
done (took 10.845033582 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119381036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.929924456 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434060781 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132264921 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710762476 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426370288 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.421685442 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176362758 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174125941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137087441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131719327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688303184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.430997622 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.876991646 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.388298114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.906394807 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696044161 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112395569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144865827 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112200607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.395149119 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136502875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111348442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112280884 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717691112 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421077368 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112566167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.920366517 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11001812 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112454902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428831291 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111018274 seconds)
  done (took 20.989160806 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115202537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16958005 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145728033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11124464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112912037 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138838503 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123226357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122728972 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204504816 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109097265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159896972 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110416306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114588809 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138183406 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136358218 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109702599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138350207 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113946175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117553422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111315117 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161547839 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109527745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110762418 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139708025 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109340022 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132281875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.13898845 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122078173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109206005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141991552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114713139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109600953 seconds)
  done (took 5.268246202 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161191916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178374359 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147356181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148811633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188978753 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112462231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223884832 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148561109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204989729 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112063427 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131367527 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137094873 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152823152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110960688 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164467172 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110530994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112042754 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140579781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11853501 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111906704 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160218093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110057347 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11157636 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139866522 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11049768 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131719017 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137902912 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122915765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108558438 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142351947 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115869233 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109991017 seconds)
  done (took 5.585380058 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127875764 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12566198 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132065232 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164161004 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120478712 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122685429 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155399577 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120333929 seconds)
  done (took 2.237609037 seconds)
done (took 35.243289662 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.14042771 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132888284 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129757644 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154642158 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.254081044 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117220597 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127791321 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117259201 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.154340347 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131642554 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.10940144 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148098628 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128808547 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12091265 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.254817394 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125468761 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.262983674 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.257270339 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.119263766 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124972706 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.149860911 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231809014 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.153757507 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118701009 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.248207227 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11533758 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.249543143 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120791933 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121113711 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112174946 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.257954952 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.15337946 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118350442 seconds)
  done (took 6.412612122 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.239769508 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.151506186 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.120619063 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118854881 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120551287 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149082764 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.245706591 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150899644 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.11917984 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118619507 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.148479384 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226791732 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.15756773 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11537274 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120904515 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11156061 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.277386599 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120325822 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.142357194 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094029429 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114463379 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117849383 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.290608404 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.145880499 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119241219 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.118268433 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121726269 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155515393 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.120431736 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.119711216 seconds)
  done (took 5.654618444 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12594863 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132127295 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136419727 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.218049452 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148207959 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16158873 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138633059 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133406035 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170544431 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112500815 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126875313 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178154491 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129736726 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122299195 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142694687 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130201944 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135147984 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14277128 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120388227 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129318242 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161846266 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130587673 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135347816 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151316958 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112254567 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119659975 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15183976 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124407724 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121646926 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.155309627 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.11582019 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116226064 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11553886 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.17738543 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121445788 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155748422 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139594458 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124827975 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.155443348 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145812868 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116961318 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144699272 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141366137 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167325071 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.14388722 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125604434 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125803729 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129926255 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.141955566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132309818 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185723763 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114495168 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133560043 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.140483742 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113159527 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12161466 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113084854 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.145023704 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129008617 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11433298 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.16789368 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120942148 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122904232 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.144849882 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.12513811 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111680326 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111451082 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147273406 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138752469 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120373432 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180475856 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112901338 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12384988 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.155460133 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124413762 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124159806 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.141736611 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124602596 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122933211 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.14765834 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126922525 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115563034 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.114347124 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.159684328 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134580981 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.156391292 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125059697 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12678169 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.115683653 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.144560074 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131088876 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113583447 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.147508169 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126651417 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112883952 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.146006069 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126901587 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124617156 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.140330097 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139548026 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.11676058 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111349956 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.168524858 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116655022 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.1175715 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.153037694 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155120212 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118579506 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.155030249 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127590979 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112551825 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.150998111 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116408642 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110857282 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160949647 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130594194 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121057826 seconds)
  done (took 16.978225304 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.357633941 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.34439361 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187516748 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.433830193 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125835031 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.274670968 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.342676438 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.347019325 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11351406 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178672475 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175929302 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.313592713 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.113246328 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.175022457 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.346961765 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.405726437 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176350766 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150255104 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179949237 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128270097 seconds)
  done (took 6.06291045 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134902737 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148045331 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165416659 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141968207 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123345858 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160068688 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113794848 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136394201 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155263783 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123703401 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116230593 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159060319 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127582441 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129714627 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157294352 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148291691 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122393923 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147873098 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136686421 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117508742 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132197865 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.13879546 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123184739 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165353093 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132547051 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124077913 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140885451 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119399005 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119746698 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.150015515 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119051169 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13133963 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150081857 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105628097 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124720879 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127697141 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.151130364 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116613068 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118687347 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145031267 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1295184 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127179501 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12156297 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12856568 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132783498 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109927267 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126821223 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155755014 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107016446 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132527963 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155110683 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129024655 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120586287 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165727995 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120566845 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131655654 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155086859 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129219693 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118392312 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141026329 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111968503 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116825228 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120810277 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158297985 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125788147 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133735753 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.160073242 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113566941 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117731027 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146545032 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118296705 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127301145 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164055284 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12243677 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119727462 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155895648 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121891537 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095065286 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123906191 seconds)
  done (took 11.69918649 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139132092 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124394829 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131508702 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178634123 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129089974 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118859177 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153398867 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134635356 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127810626 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162261808 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129204755 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127559851 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165743368 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123598781 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123432064 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160244166 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127152199 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150919093 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.165819763 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140288189 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.158525265 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119872719 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127181474 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12424016 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173493796 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125015331 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.1701636 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130907424 seconds)
  done (took 5.152121338 seconds)
done (took 53.129816675 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.342851211 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.529089381 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.301761206 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.299920793 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.337792613 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.322887251 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.30036984 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.300894863 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.79696835 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.270235032 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.300752404 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.299000081 seconds)
done (took 29.601410812 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.393072515 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.825769878 seconds)
    (2/2) benchmarking "String"...
    done (took 1.588250703 seconds)
  done (took 4.605992742 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.290661334 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.290265725 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.539291352 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.289318729 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.29458174 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.290751346 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.302781911 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.303164948 seconds)
  done (took 16.498611348 seconds)
done (took 26.980514308 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.332778527 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.477728958 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.540557936 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.282717487 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.295362342 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.294622845 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.293074943 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.325072553 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.292063868 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.276303629 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.725357349 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.55999037 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.299628805 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.675844571 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.270977885 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.317017817 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.317194843 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.517498682 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.294590276 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.323854392 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.270212535 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.273879982 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.29580664 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.294286236 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.300514511 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.297058625 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.325089673 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.307292275 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.482955346 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.313084432 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.32652095 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.292110099 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.333499525 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.302172709 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.294824563 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.307671702 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.471670879 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.305057467 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.278222114 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.315279422 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.48491157 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.318032049 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.292353563 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.294052183 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.278679874 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.334900909 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.27889495 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.429246917 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.317115026 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.294866348 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.372290286 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.668333983 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.301175473 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.305247095 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.296180643 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.506898465 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.313399937 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.360594811 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.320329016 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.303588231 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.296227791 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.294053245 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.338006393 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.295441917 seconds)
  done (took 149.586082852 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.296500031 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.297276439 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.298420793 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.301540512 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.299830036 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.299849478 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.295269663 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.293366669 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.297087558 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.327025126 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.298679762 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.294919016 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.297653978 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.23195715 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.305131838 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.316401048 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.297920761 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.318047218 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.306522983 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.295159913 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.300700475 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.296642322 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.312809925 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.296037247 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.339835463 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.380309305 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.312224916 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.309260187 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.310646629 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.294909276 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.302474463 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.306225285 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.951809163 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.150790186 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.303359187 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.333771634 seconds)
  done (took 83.665245064 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.29519137 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.29596679 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.296548765 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.330200283 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.298093259 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.295835322 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.910526113 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.913223171 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.274136756 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.435823579 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.786649136 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.601089556 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.302419416 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.390834806 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.30870628 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.297134494 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.311564857 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.320811724 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.301599095 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.296966741 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910833924 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.314958309 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.301322926 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.475937783 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.311795282 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332624514 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.691338263 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.29834803 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335092955 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.637536957 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.348871819 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.300117251 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.668989577 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.890806496 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.414286964 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.298651105 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331400084 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.301535193 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.580825033 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.29892062 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.296930201 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.298136949 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.301733375 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.96961263 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.303756362 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.912889703 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.303920276 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.298981722 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.302694873 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.297911471 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.298411676 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.241740931 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.075997914 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.30408781 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.300265771 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.301843441 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.299768191 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.300087303 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.333793098 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.211956736 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.401049645 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.302961449 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.299775929 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.300390533 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334740502 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.302372161 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.519000355 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.303518042 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.094261307 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.36042815 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.398870604 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.915501924 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.304749067 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398066468 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.419380088 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.301870747 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.299141677 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.29898472 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.300331288 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.412827124 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.300023123 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.000108028 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.484316999 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.319189016 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.783772438 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.40486277 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.302489461 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.694489958 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.307803166 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.299076353 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.085194754 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.40068706 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.301062779 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.300996001 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.300463237 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.012385417 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.920215936 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.582998183 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.305036715 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.835852866 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.308904275 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.177911287 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.889314442 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.004902137 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.306894076 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.412613752 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.484413527 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.321654195 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.301759349 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.780199928 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.308946893 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.359000391 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.307249392 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.704350975 seconds)
  done (took 386.340971256 seconds)
done (took 620.78117398 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.165436876 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.118229271 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.267364595 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.129003029 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.10724329 seconds)
  done (took 11.990288021 seconds)
done (took 13.19152872 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.507903181 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.509278794 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.372984987 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511247074 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.343050405 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523516996 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.487488262 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.323617082 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417714714 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.39298949 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422194913 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.363062679 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.342310621 seconds)
  done (took 19.720378742 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.594217357 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.317600084 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.37363726 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.578042179 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.353678177 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.605823763 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.642447049 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.319764674 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.484947638 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.327891547 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.32585237 seconds)
  done (took 19.129274188 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.598764072 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.320352741 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.377239674 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.585020099 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.355766985 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.612116521 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.644532132 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.319657741 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.494946921 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.328363902 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.327346907 seconds)
  done (took 19.16698618 seconds)
done (took 59.21748813 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.343692369 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408459915 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.344000556 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.323404006 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.324013686 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.323779278 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.32437317 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.323847941 seconds)
  done (took 11.919566657 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.322960998 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.322669651 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.322765669 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.320788403 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.322383913 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.322599055 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.320690102 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.322094811 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.320162408 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.323190418 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.322012524 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.323187903 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.323722584 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.325195282 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.325660468 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.32465627 seconds)
  done (took 22.367687556 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.324229026 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.322090039 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.323006066 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.322853582 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.324856165 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.322092361 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.32560577 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.325261625 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.321550442 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.324108077 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.325852037 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.323732111 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.323262066 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.32460828 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.32304031 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.325734605 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.320508031 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.324830686 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.326066262 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.323145914 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.32351113 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.324220729 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.323008128 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.32341239 seconds)
  done (took 32.977151701 seconds)
done (took 68.468188022 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.308010548 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.317338502 seconds)
  done (took 5.832615484 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.380292606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.380686135 seconds)
  done (took 3.966888037 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.32443328 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.325450643 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.328033231 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.322562762 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.32426475 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.326324301 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.324334159 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.325425471 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.324799024 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.325714689 seconds)
  done (took 14.458968966 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.326950815 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.325211215 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.322992808 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.325439216 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.319679491 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.32244396 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.327323417 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.327398831 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.323347938 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.325903032 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.322106456 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.324351185 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.325006469 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.326021391 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.327374687 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.326813258 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.322048645 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.325366444 seconds)
  done (took 25.055022629 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.337092479 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.344330106 seconds)
  done (took 3.888094896 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.453494058 seconds)
    (2/7) benchmarking "second"...
    done (took 1.367786864 seconds)
    (3/7) benchmarking "month"...
    done (took 1.43103428 seconds)
    (4/7) benchmarking "year"...
    done (took 1.419977348 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.367645183 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.34738483 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.369649079 seconds)
  done (took 10.965301123 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.313118735 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.60802449 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.801740703 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.46960042 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.303878448 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.326383986 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.290548795 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.327304401 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.3311985 seconds)
  done (took 14.982993649 seconds)
done (took 80.355570818 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.313345788 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.362963741 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.330191293 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.334212926 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.668225471 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.35308855 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.319130493 seconds)
done (took 16.889764372 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.291360486 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.296087553 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.310488986 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.339083489 seconds)
  done (took 10.44690482 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.320432781 seconds)
    (2/2) benchmarking "read"...
    done (took 1.636678196 seconds)
  done (took 5.165851916 seconds)
done (took 16.822884736 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.327792124 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.329651608 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.326742257 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.328645117 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.328804504 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.329587429 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.327912425 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.329638327 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.330201098 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.328308319 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.329129227 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328184907 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327156985 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328610127 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.327469732 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329303491 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.32788109 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.329408666 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329770165 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.329479182 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330648903 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329776684 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.329070186 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.329181647 seconds)
  done (took 33.102881152 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.331198638 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.329300073 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.330128163 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.32905119 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.32919657 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.330569477 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.330764333 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.330479439 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.329470967 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.328097444 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.329992694 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.326960471 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.329162195 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.32909911 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330813531 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.331230152 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.328926071 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327671576 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329409579 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.329882253 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.329318054 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329646294 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.328486167 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330773993 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.328768559 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329101349 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.328393466 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.328192568 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329338409 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.329058785 seconds)
  done (took 41.093966749 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.333277047 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.334737155 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.330734609 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.329291059 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.331384429 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.328529384 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.330486188 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.329503763 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.329934247 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.327958233 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.327671493 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.330107608 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.330254982 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.330034006 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.329087425 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.33114335 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.329131425 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.331674474 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.329720549 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.330955315 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.328683818 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.329261383 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.329551546 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.332298692 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.329051922 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.330881217 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.330991378 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.332108462 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.330001966 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.329130832 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.330896915 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.330008176 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.330565398 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.331088145 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.330595312 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.330863811 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.339701286 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.337388604 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.330462233 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.330951069 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.332667045 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.33122752 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.331702199 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.330409616 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.331339955 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.331041296 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.331053995 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.330699275 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.331367483 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.33226177 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.330665254 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.330286723 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.33157059 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.330861443 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.331605439 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.330843653 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.332287834 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.332093057 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.332321226 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.330297729 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.331747023 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.331851905 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.331073062 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.331599866 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.332094482 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.331102305 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.330942964 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.33382893 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.329834157 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.330832168 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.330739284 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.331952204 seconds)
  done (took 97.046371156 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.33327062 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.332811186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.332860287 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.329944639 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.331167214 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.332386803 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.330776753 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331749786 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329885436 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.332746739 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332491332 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.330638653 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330924621 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.331010928 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.329960745 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.331277511 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.331756015 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.333849188 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.328535705 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.330729861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330320019 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.330728638 seconds)
  done (took 30.504021399 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331135898 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331316825 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.329416953 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.331033739 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.332384884 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.331504126 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.332473813 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.332306568 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332231783 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332365116 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331941092 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330744073 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331692941 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329672137 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330665552 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.330802116 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330604631 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.332463426 seconds)
  done (took 25.176495561 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.332052108 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.330419001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.329219609 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.330175707 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.330989109 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.330465256 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.331297106 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.329847094 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.330956053 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.331218217 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.331851883 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332223175 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.331549438 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331905648 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330755031 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.331341323 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.332535311 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331542626 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331318635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.33279076 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.33306743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332544757 seconds)
  done (took 30.501870752 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3313339 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.334153166 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.332558337 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.332164286 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.333770538 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.332560101 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.3317058 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.332517728 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.336653392 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.332264101 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333470128 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.3336667 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.33541511 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.332656822 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.331948758 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332638314 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.333023564 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.332551649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.332569731 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.332336557 seconds)
  done (took 27.872201735 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.33266494 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333115701 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.33441026 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332969285 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335181178 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.334559445 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334802059 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.334497429 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.334147752 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.336431938 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.335512208 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.3384385 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336749227 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.335295955 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.336326676 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335370774 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.334529569 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336197338 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.337170709 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336183309 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.336363576 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.33575864 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33560855 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.336023306 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.334758958 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336917352 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.335716432 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.338038836 seconds)
  done (took 38.607234246 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335376651 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.336215863 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.335292293 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.336553622 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.336176316 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.335361363 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.334992784 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.335985281 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.334311394 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.335301696 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.335923652 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.33660626 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.334720388 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.337829345 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.33758289 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.338585079 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338028924 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.336784226 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.336849077 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336602351 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.337805041 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335316809 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.343447567 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.337271548 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338208116 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.337613131 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336167154 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.337426714 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337785423 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.336710156 seconds)
  done (took 41.319764588 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.355769842 seconds)
    (2/2) benchmarking "in"...
    done (took 1.355952328 seconds)
  done (took 3.927952411 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.338555019 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337686665 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.337361962 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.337982917 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.338090663 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.338810711 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.338144628 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337656611 seconds)
  done (took 11.921300525 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.329256604 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.340159681 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.337969344 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.33808597 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.339040486 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.329370678 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.3382638 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.34108681 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.33011437 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.33273786 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.336949718 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.33633497 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.334017607 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.332595863 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.33131784 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.334055529 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.343770356 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.340308154 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.340260849 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.338284561 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.339295849 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334115515 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.337734928 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.34151681 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.332524796 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.343133851 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.339640427 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.343047136 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.333567543 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.338026543 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.33559081 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.342766998 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.341691414 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.341795332 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.340493628 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.341539595 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.342948914 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338727196 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.342458075 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.345431336 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.340081888 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.338036439 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.33538837 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.339870709 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340230167 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.346405144 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.340356365 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.341206406 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.335076373 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.336083595 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.348643711 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.334339158 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.344910197 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.337212938 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.341367935 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.345329364 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.349671731 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.336564455 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.340927989 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.345020288 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.349272613 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.350741114 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3424116 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.346481488 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.343540826 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.355598688 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346204336 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.348216573 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.341619289 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.342435492 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.342340102 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.351029405 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.352648741 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.34717624 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.339955449 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.340914255 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.334457139 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34284049 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341813248 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.344467485 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.346215005 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.341674695 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.33998912 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.350900872 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.334304203 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.344302636 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.339151997 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.337499962 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.330789515 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.344699954 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.348044973 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.341247394 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.329603394 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.333581464 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.33497799 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.340567569 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.329621427 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.334909688 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.346544786 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.34139144 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.338359975 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.333769644 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.340235404 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.342798922 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.338051315 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.340821938 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.348604829 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.33175196 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.341558144 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.344404345 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.338437072 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.331543686 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.337779497 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.343491473 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.331348664 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.340219865 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.346537895 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.331930842 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.34603465 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.339221841 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.341023823 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.358811359 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.346150872 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.339898842 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.33786402 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.350576019 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.338824902 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.34358227 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.347719244 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.340691913 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.343334328 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.339194802 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.346481483 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.332080943 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.344362177 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.334309341 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.345983531 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.336323115 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.339443411 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.336625222 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.3398732 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.337218709 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.339849337 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.34415348 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.345170634 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.337832758 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.349904368 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.339046019 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.339493698 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.340758334 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.343370612 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.341099516 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.33675854 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.341789405 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.334499304 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.343951892 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.332319438 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.343375874 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.34008626 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.341475341 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339936674 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.330764673 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.337504478 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.344076051 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.339608782 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.342450612 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.342043563 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.342581029 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.34414687 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.332976933 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.343793706 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.332981127 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.335787196 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.346648004 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.339716946 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.340840225 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.33832249 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.345832236 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.3405914 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340145428 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.336978261 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.344956571 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.343776554 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.344572851 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.34744339 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.341697755 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.341576103 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.337443834 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.335978268 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342571117 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.333710634 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.348481158 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.347538443 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354219951 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.337205931 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.344635135 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.332590799 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.344679872 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.33949247 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.350408433 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.339776055 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.341246098 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.335423523 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.344119595 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.334610747 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.345474335 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.334145715 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.344792767 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.34530548 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.343968189 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.342173723 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.335292325 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.342437972 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.347846854 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.341842579 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343002271 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.335491199 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.344192385 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.335253145 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.338213194 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.346377531 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.342074104 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.346063849 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.350717162 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340448503 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348954335 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.345471536 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.341979867 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.344013031 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.340236146 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.349365628 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.350167904 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.346126902 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.3384746 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350649273 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.348268143 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.337801084 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.346934028 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.354874505 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.343957934 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.33549037 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.353931082 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.344942743 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.343622717 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.344072496 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.336275421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.348799426 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.346616265 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.355254919 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.334868324 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.347533573 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.338149114 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.347539419 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.344163534 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.348902851 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.344045407 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.34643668 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.354347077 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.343539002 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.34306705 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.348337455 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.343200761 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.344160473 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.34221084 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.351890968 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.347339708 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.346741132 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.341577489 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.341899574 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.348461277 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.337937382 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.349543787 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.339373291 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.358880417 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.365577163 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.349409464 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.35336699 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.348420773 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.347876215 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.350072014 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.342567772 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.342087111 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342211177 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.34499188 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.341502488 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.348140413 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338805553 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.350010364 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.345588499 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.348591216 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.349603782 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.346179178 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.341535675 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.349889882 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.347546674 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.346626825 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.339923853 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.349623335 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.344396447 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.347982372 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.352905447 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.343261967 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.353520986 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.352336502 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.346427589 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.342058042 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.341427241 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.344178677 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.34433867 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.351992896 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.343788664 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.355734606 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.343474214 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.349585529 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.344517716 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.351486225 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.357344151 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.341928399 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.353753392 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.343288234 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.340882291 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.34181797 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.35097417 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351390358 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.359211768 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.33945558 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.351602795 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.347008499 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.345247604 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.347177669 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.347208555 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.347397383 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.35104265 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355644669 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.354941348 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.347032331 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.352398123 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.362263073 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.350743118 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.353590633 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.340922381 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.354417727 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.361619397 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.345334389 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.349531717 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.346689751 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.351868678 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.351201295 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.35118662 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.349429378 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.350693896 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.352398118 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.355933933 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.35203017 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.354479563 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.356728861 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362842571 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.357780164 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.365401142 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.347502614 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.358788069 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.351606919 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.34831111 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.350566546 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.348803786 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.352802724 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.345977365 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.358522426 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.350971462 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.351357322 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.354080108 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.356901715 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.347571967 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353601262 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.370856053 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.343729435 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.355945616 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.350314065 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.344811166 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.355969813 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.353737131 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.345227009 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.346937202 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353841408 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.360208493 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.347176699 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.355408292 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.34691667 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357665652 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.353848617 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.353373345 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.35457358 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.349987373 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.346122838 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.355123628 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354513357 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.363139801 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.349245226 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.353734153 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.347343348 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.361059495 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.367458275 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.349409653 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360304298 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.356322068 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.347604611 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.356033126 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.361739679 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.349391674 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.35658787 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.347517945 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.352397422 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.350024447 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.356251621 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.357534699 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.357305023 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.345269992 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.344933206 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.357905829 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.355428716 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.352294276 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.350036748 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.360481159 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.34584211 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.347390385 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.351152566 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.348607339 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.359452403 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348931853 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.353452588 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.35127315 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.35482413 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.354320889 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.351235866 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.344918432 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.345322395 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.356260354 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359336303 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.352826058 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.348843215 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.360703109 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.349562768 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.35233145 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.354359647 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.346616591 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.350450178 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.358008354 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.345102483 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.348735269 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.346268911 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357710479 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.354528984 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.358397375 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.345321819 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.358803717 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.366901854 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360739632 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.346711316 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.351295385 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.351039796 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.356149941 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.352887908 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.345418199 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.364461577 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.364897306 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.360230304 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.353309511 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.357197661 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.350912662 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.359677348 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.355615291 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.350752431 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.363444605 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.352027167 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.359102069 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.353930042 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.355331419 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.34926385 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.345389693 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.35126392 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.355561034 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.359122299 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.355699971 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.361254692 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.349491208 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.362551169 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.353317201 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.353076489 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.355953358 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.349292206 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.353842017 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.348039093 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.356049335 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.35722655 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.350933662 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.361802079 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.355174244 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.34942225 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.358960115 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.363540282 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.352921567 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.348624359 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.351717421 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.358587201 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.364323544 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.357834603 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.351042503 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.350073158 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.361326459 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.354793114 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.352630693 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.34728405 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.365627573 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.368683311 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.348102556 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.352262022 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.360013545 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.367928127 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.350987323 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.351954462 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.351614785 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.353738318 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.361337344 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.356830572 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.358454255 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362221729 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.35028927 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.357506108 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.349734887 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.355159258 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.357729896 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.364235051 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.351540742 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.349446843 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.366526362 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36650782 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.355229232 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.374696544 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.365255579 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.35523911 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.361696957 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.349292707 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.358589103 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.350331891 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.359845043 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.352003581 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.357775468 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.356533325 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.34907568 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.357856242 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.365169018 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.363114388 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.352949592 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.344967981 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.35174275 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.357556533 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.35355364 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.358308829 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.356931389 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.35454494 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.354019206 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.350568403 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.367462279 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.370484842 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.357460593 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.356793885 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.356977405 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.355458318 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.356722392 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.355128373 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.358938961 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.353421821 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.356264989 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.353518233 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.361014576 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.353271253 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.349094197 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.350801596 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354535086 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.357998727 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.364751501 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.376975005 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.356346186 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.361202883 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.358911546 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.35740243 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.349452202 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.359987088 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356659133 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.34896928 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.352360237 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.360384273 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.358359283 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.353104071 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.350014297 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.360256247 seconds)
  done (took 804.617777913 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.354809598 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357452626 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.356246245 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.352964893 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355058198 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353523171 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358219972 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.358458243 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.361019351 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.35435644 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.358627086 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.356218109 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.353963565 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.357940425 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.356602639 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.360843945 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.357236323 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35753725 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.357002532 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357636119 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.355951381 seconds)
  done (took 29.719804287 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.357236717 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.355026992 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.358887478 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.355595848 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.357464144 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.358216849 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.35621402 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35800564 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.360155415 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357873392 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.355975664 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357433949 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.357418194 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.358341439 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356113168 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.353582484 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.358738089 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.35694405 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.358051288 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.358745771 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358203825 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.359143849 seconds)
  done (took 31.098991321 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.358126523 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.359413186 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.353873754 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.358675189 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.356377587 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.359983271 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.35537588 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.356892037 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.359206107 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.349779613 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.354496197 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.350608979 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.35544893 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.366299102 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.356569198 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.362065975 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.360884332 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.359778306 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.361858678 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.35712588 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.366196368 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.370017079 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.35615801 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.350388025 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.359094619 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.357635974 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.356735141 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.356888403 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.34802729 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.359986129 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.361724006 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.355010278 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.361764878 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.364515482 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.354285407 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.363514075 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.36039489 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.358662397 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.361174522 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.359284947 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.374817603 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.361078796 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.366324187 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.374299248 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.36262022 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.351479415 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.36735538 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.354546063 seconds)
  done (took 66.482416779 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.35830662 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.355854979 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.357115236 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.359476481 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.358999554 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.357004843 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.357483292 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.357302315 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.3609062 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.356108195 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.357645012 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.358181264 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.357125406 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.361501301 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.357126669 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.361048069 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.360280211 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361189739 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.360928388 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.36217979 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.358173937 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.359549699 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.359222927 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.361252384 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.362408241 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.359565808 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.363024009 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.361998128 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.360506698 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.35975908 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.357506294 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.361130356 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.361964399 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.363866686 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.361785155 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.362088299 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.362864273 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.360349084 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.363725421 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.359828118 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.36012242 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.359857823 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.361975734 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.362265448 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.359931272 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.360066045 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.362547462 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.363046917 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.363174103 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.36082347 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.365652495 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.361138771 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.365874392 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.364252419 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.361356057 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.362497855 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.36101217 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.361155279 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.359541396 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.362170679 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.362759763 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.360810279 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.361785305 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.362103166 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.361677873 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.359323185 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.359999334 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.364952734 seconds)
  done (took 93.764234962 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.364696914 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.360258705 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359415119 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361254622 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.360443863 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.363009457 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.364399457 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.362817087 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.361387089 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363058232 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.364038599 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.363782231 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.364270584 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.361678391 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.363632821 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.363993063 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.364101468 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.360252476 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.360944827 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.364603241 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.363854914 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.366562692 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.364189531 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.36554014 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.364121639 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.36537357 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.360916896 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.365393478 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.366095752 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.364521246 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.364826622 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.367446987 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.361857979 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.364541162 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.364071518 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.365920396 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.366170243 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.366645826 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.363467892 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.363579165 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.364207632 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.362744852 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.366607143 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.365880238 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.364892055 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.36398279 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.366048372 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.367064786 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.364493097 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.362733025 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.364568289 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.364094116 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.364587047 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.364937085 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.363528665 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.363800368 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.365979625 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.364987824 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363650416 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.36414066 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.365448267 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.363769967 seconds)
  done (took 85.802282118 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.367147215 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.367051845 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.364143448 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.367747241 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.365953453 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.368540244 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.368862526 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.364261132 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.365571553 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.366700758 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367492439 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365390909 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367933209 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365534982 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.36504246 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365887849 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368101092 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.365547079 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366872418 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.367475173 seconds)
  done (took 28.562375619 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.366037898 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.36695455 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.366506054 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.366694305 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.366490811 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.366609773 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.368443419 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364829253 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365070541 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.369099558 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.366473468 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.36785076 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367727252 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.366932481 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.366871432 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.365830316 seconds)
  done (took 23.101893414 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.367199318 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.36760326 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.36813516 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.367335231 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.367507635 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.36596951 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.36794224 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.367015936 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.367061729 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.367392846 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.368715197 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.368257634 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.366990678 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.369889476 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.369316373 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.370841419 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.365792086 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.36509381 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.368160179 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.372029361 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.367319963 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.368412687 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.367100006 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.36983826 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.369959712 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.371783352 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.369102046 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.368477444 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.368961002 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.369309906 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.369259699 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.369860191 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.368700979 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.371158454 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.372278142 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.367633793 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.370432403 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.368517363 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.368652854 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.367381988 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.367207962 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.368292171 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.367754819 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.366401806 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.368595744 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.368345343 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.368572399 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.370666525 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.367145493 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.371646327 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.36912235 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.370626213 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.369263719 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.369904203 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.368347051 seconds)
  done (took 76.508816117 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.370905534 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.371340745 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.371028599 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.369504695 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.371816821 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.36953721 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.369815302 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.372440375 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.371860765 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.369910681 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.369019548 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.372848282 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.374825553 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.371556237 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.370793867 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.371598161 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.368389361 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.368988867 seconds)
  done (took 25.912034438 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.37402308 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.37104938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.369880278 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.372515394 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.37354173 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.371229387 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.372293211 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.371721553 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371386408 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.374161678 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.37644219 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.371711704 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370481415 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.370396188 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.371942423 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373295163 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.374012023 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.370485538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.372032126 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371795008 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.373400722 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371746411 seconds)
  done (took 31.428275411 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.368422741 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.365700251 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.365424022 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.375236074 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.376193861 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.362091301 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.366559484 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.365077787 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.385268217 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.402043086 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.39629557 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.376307147 seconds)
  done (took 17.743333132 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374435691 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375939163 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373555769 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376500645 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373780501 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374615284 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377981947 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377063598 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376377142 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377555777 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376899774 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375865737 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376721527 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370867086 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357373711 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356853483 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355915908 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358445165 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355944679 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356714448 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357840896 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353517807 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354357426 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351294711 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354043128 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351776359 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354623248 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354069485 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353447908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352311828 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351186675 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352289483 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34846145 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352277073 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349577838 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352429847 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350381845 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349904412 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349524942 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349072208 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350436993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348710254 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350714084 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347810224 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348427365 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348875494 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349027257 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349625404 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348080508 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348762447 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348695423 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346340703 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345805854 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34730811 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345966013 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347733294 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347650877 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347000453 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343841029 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34488791 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344480716 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34399224 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344798555 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34547731 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343017705 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343323071 seconds)
  done (took 90.709289593 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343639091 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34135652 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342234083 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343310452 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343269323 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343346786 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340312109 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339130032 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339363236 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340919809 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33969348 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341741869 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340531702 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340686208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338077153 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339045611 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337874798 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339100095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337699308 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338646449 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337167153 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336796895 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334862802 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336149013 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336989593 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337093011 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335390079 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336741068 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336037908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336215185 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336406731 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335937269 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336189944 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.337296604 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337567534 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336871525 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337507979 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34467034 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337399824 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33649982 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336980274 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337105084 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337631189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338638894 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338095113 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338166411 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337868124 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339120378 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337929442 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337336974 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338499727 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337675197 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337648446 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338375723 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33863717 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337934456 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339107907 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339121217 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338974811 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337783688 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3391973 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338324848 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338406561 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339018905 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34001597 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338090768 seconds)
  done (took 89.565339687 seconds)
done (took 1877.301475932 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.493575249 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.453846755 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.330874922 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.344104318 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.329881403 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.329372925 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.339773408 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.32965537 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.328837446 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.329267126 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.328592746 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.518785342 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.363338405 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.330365397 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.329798716 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.425873707 seconds)
  done (took 27.123568252 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.352020617 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.341690387 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.444419301 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.343294498 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.361960968 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.512450188 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.395813522 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.345383858 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.497826149 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.362931696 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.338092877 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.362932326 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.341068145 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.342246179 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.35885604 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.517758377 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.593068139 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.346323744 seconds)
  done (took 29.374969709 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.753217109 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.356400352 seconds)
  done (took 5.330665222 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.358769737 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.340029817 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.342481992 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.338424348 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.343248468 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.330983076 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.339503679 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.34260842 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.332029704 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.459935522 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.348053523 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.35509372 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.341979209 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.341624125 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.349215965 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.384896988 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.497059124 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.350942178 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.349308194 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.348642655 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.340528961 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.430528181 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.382802219 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.356263156 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.45609382 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.339219266 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.350737255 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.348619331 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.46418883 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.351769818 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.341556279 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.342252168 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.34430906 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.286390837 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.884974509 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.339311869 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.370645605 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.34969833 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.34974353 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.472608432 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.343990408 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.351638926 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.335676318 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.881554304 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.450029564 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.460751649 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.348280079 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.348387038 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.344253609 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.406445647 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.348834967 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.345851622 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.400565374 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.142550126 seconds)
  done (took 85.831155088 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.352554636 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.335181296 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.51969334 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.360241331 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.340280798 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.33929036 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.340796537 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.604873274 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.34976269 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331072883 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.648355019 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.941750884 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.336730181 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.39737501 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.366113398 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.377640809 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323969455 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.328487744 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.320820095 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.322609404 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880863433 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32418197 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.325645338 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.397638854 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.35534778 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.837905274 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.317037659 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.322963498 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.319998427 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.316416246 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.891047628 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.321402446 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.374038683 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.318776127 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.600680654 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.69762137 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.649958254 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.3220934 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.336167007 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.316867215 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.340757869 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830145233 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.671293217 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.318143202 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.321810862 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828622009 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.316616464 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.32150575 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.316351498 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.583062284 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.319517679 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.318751436 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317604571 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.321510895 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.316484207 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.373307035 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.371899999 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.840965658 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319486758 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.317464062 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.362917069 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.317286981 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.325450091 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324713526 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.321756373 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.676621539 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.549332974 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.324256147 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.675068234 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.884268129 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321990659 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.973578257 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.322778992 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.331728144 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.351392463 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318637326 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.31957899 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.848437821 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.353249296 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.318985663 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.659384986 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.323641726 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.615925605 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.335965741 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.321769922 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897121271 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.33425286 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.362019731 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.323334663 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.319345681 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.335686701 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323161607 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.604226099 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.36490356 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.31952423 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.319860954 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.346826385 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.32007153 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.337455645 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.322828115 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.957751412 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.325737584 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.319231301 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.341443845 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321119203 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.326440708 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.324308942 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.31992086 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.60146216 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.321636573 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.345307923 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321795923 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.322922179 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.32381972 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.388637974 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.322230454 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.614884262 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.322122196 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315878789 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.314117022 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318702498 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345154998 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.308153102 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.3294108 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.304778265 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.602999052 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.321860593 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.321662197 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305034309 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303777298 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322298267 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.306236908 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.365525053 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.30675297 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.092319425 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.346372995 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.351057289 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.303698548 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318645836 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.305154181 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.331508868 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305837038 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599939983 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.586121515 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.530479073 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.309378525 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.305091389 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.11173016 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.339437891 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487570062 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.322168646 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.30627861 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.586655196 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.526925594 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.308675983 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.306209773 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.308827151 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581822669 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.312519774 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617186617 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.900041348 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.311855325 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.317736111 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.09749048 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.122612434 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.30965874 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.30986824 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.598579391 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.323027605 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.30753318 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.305142733 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.307192284 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.307477413 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.312843545 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.317178169 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.305712815 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.30671233 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.649556616 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499791138 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.322191412 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.308272024 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.83267685 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.33928608 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307218499 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.3215076 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.310848616 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.308620173 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.359911386 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.313060382 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.332101747 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.307654433 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.31350287 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.860405176 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.313062699 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.309784111 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501488437 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039998348 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.312908107 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.308546989 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.307418651 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.365416636 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.864906463 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.337293403 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.606481241 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.317464324 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349626928 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309100065 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.328026765 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.86036005 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311360058 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.308725387 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.040543968 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.313415543 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.745748905 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.308986172 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.311850787 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952722967 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.31306171 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.313711247 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.315181309 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.309524023 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.627909527 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.310703775 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.360083747 seconds)
  done (took 494.710955368 seconds)
done (took 643.586729568 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.308973654 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.31120626 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.314809752 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.314939554 seconds)
  done (took 10.455150144 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.326453243 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316825414 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.325335543 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.317030317 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.329129467 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.316975086 seconds)
  done (took 9.138680484 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.310367322 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.315410234 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.315691406 seconds)
  done (took 8.14793082 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.51431238 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.337071668 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.657008018 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.317075654 seconds)
  done (took 9.032303447 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.326220008 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.328305778 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.326273069 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.327988188 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.329444449 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.328348491 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.328099525 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.327678213 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.330896858 seconds)
  done (took 13.159451207 seconds)
done (took 51.138609235 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.312109128 seconds)
    (2/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.312983674 seconds)
    (3/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.295598171 seconds)
    (4/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.505358708 seconds)
    (5/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.34437075 seconds)
    (6/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.308268151 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.393153648 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.46427362 seconds)
    (9/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.493221331 seconds)
    (10/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.47235252 seconds)
    (11/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.725951098 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.348362107 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.37309109 seconds)
    (14/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.657564766 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.608132577 seconds)
    (16/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.350036973 seconds)
    (17/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.389284881 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.412848292 seconds)
    (19/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.513829818 seconds)
    (20/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.428499558 seconds)
    (21/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.346850941 seconds)
    (22/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.409081437 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.398867277 seconds)
    (24/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.526334195 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.465634687 seconds)
    (26/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.349402573 seconds)
    (27/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.381057947 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.656894312 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.318527036 seconds)
    (30/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.293808313 seconds)
    (31/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.363019064 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.29439618 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.595871689 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.48144744 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.404472647 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.657226903 seconds)
    (37/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.372811462 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.303030133 seconds)
    (39/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.296748616 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.464119019 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387720058 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.295401538 seconds)
    (43/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.591678082 seconds)
    (44/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.387301125 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.418874669 seconds)
    (46/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.423540885 seconds)
    (47/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.294191952 seconds)
    (48/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.560898224 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.494551966 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.344187716 seconds)
    (51/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.416405638 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.624376495 seconds)
    (53/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.46388212 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.296805264 seconds)
    (55/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.400313002 seconds)
    (56/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.299193139 seconds)
    (57/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.519628626 seconds)
    (58/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.523716341 seconds)
    (59/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.395858789 seconds)
    (60/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.353120769 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.412860207 seconds)
    (62/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.480602687 seconds)
    (63/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.520977285 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.475838337 seconds)
    (65/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.494113881 seconds)
    (66/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.3465242 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.419216665 seconds)
    (68/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.471233022 seconds)
    (69/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.295204203 seconds)
    (70/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.558946657 seconds)
    (71/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.639394873 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.413568735 seconds)
    (73/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.527854285 seconds)
    (74/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.395446741 seconds)
    (75/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.298912247 seconds)
    (76/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.299654066 seconds)
    (77/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.307086121 seconds)
    (78/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.433030518 seconds)
    (79/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.300463652 seconds)
    (80/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.354040527 seconds)
    (81/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.397670351 seconds)
    (82/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.299620546 seconds)
    (83/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.306591903 seconds)
    (84/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.324682687 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.437745154 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.405345389 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.34795508 seconds)
    (88/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.411020179 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.443741865 seconds)
    (90/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.300272108 seconds)
    (91/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.300920041 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.419011836 seconds)
    (93/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.297274444 seconds)
    (94/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.485369077 seconds)
    (95/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.298036845 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.430476144 seconds)
    (97/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.414664504 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.441304348 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.35729826 seconds)
    (100/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.339771087 seconds)
    (101/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.303558877 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.440075349 seconds)
    (103/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.498840815 seconds)
    (104/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.488096322 seconds)
    (105/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.299955146 seconds)
    (106/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.372534052 seconds)
    (107/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.297085242 seconds)
    (108/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.36550993 seconds)
    (109/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.412715445 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.398699258 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.465563731 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.663867215 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.431988595 seconds)
    (114/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.477675737 seconds)
    (115/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.300211307 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.804777937 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.447451275 seconds)
    (118/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.484991891 seconds)
    (119/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.394826276 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.462414989 seconds)
    (121/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.56721412 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.363199049 seconds)
    (123/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.362337611 seconds)
    (124/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.312711994 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.804006082 seconds)
    (126/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.35825214 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.428443446 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.571140005 seconds)
    (129/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.528264838 seconds)
    (130/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.38092622 seconds)
    (131/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.468869792 seconds)
    (132/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.360352734 seconds)
    (133/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.511623824 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.455535215 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.412644455 seconds)
    (136/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.501827178 seconds)
    (137/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.566499239 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.437449275 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.624491707 seconds)
    (140/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.30708808 seconds)
    (141/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.573262081 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.392543342 seconds)
    (143/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.358964173 seconds)
    (144/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.438149142 seconds)
    (145/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.405832221 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.321438985 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.450930514 seconds)
    (148/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.40036295 seconds)
    (149/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.304653245 seconds)
    (150/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.391267001 seconds)
    (151/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.534601455 seconds)
    (152/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.449790504 seconds)
    (153/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.408879967 seconds)
    (154/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.567054138 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.427797281 seconds)
    (156/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.592050961 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.330704775 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.41887332 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.382357494 seconds)
    (160/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.485273718 seconds)
    (161/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.602469821 seconds)
    (162/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.393914989 seconds)
    (163/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.438846426 seconds)
    (164/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.303262704 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.37701736 seconds)
    (166/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.468195187 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.434197362 seconds)
    (168/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.418057974 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.447674445 seconds)
    (170/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.360270716 seconds)
    (171/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.319446506 seconds)
    (172/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.424528108 seconds)
    (173/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.326347759 seconds)
    (174/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.544376361 seconds)
    (175/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.407825488 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.564027231 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.567304613 seconds)
    (178/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.41358679 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.457123907 seconds)
    (180/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.356606545 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.519748939 seconds)
    (182/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.329137098 seconds)
    (183/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.324682672 seconds)
    (184/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.60304923 seconds)
    (185/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.606008665 seconds)
    (186/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.331684614 seconds)
    (187/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.310263235 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.48136791 seconds)
    (189/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.308115907 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.348670076 seconds)
    (191/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.308643584 seconds)
    (192/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.678687307 seconds)
  done (took 323.245394591 seconds)
done (took 324.452106896 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355185684 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.429583045 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.332629096 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.334230471 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335205845 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.331828505 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.357660091 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.333966156 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.348237586 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.349205649 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.328191116 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.343396794 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.34941492 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.346118531 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.3672414 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.335500526 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.3335279 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.344816276 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.34924262 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.351299704 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33716826 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336560767 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.361177616 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.335054546 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341751656 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343733148 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.340324842 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.325231097 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.35701332 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.348263767 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.325902043 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.342132999 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.354780719 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.346211838 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336472336 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.343865557 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.335517315 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.432982439 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.357218958 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.346457052 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344875458 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.352070555 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.34157577 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.341566416 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.348211671 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.363049763 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344301497 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.352393228 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.33346011 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.339117766 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360910446 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.349997996 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.346589291 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.332872997 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.341466545 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.356432621 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.348788913 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357789324 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.343325449 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339273199 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.371761865 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357149966 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.348733666 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344550689 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.344469816 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.352723143 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.348258213 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.35619661 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.345117749 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339518995 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.337972029 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.347825419 seconds)
done (took 106.257732795 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.460180023 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.334028574 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.495200082 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.345915094 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.503829463 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.459879957 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.344429641 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.346000707 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.345070553 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.134234366 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.346690853 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.346047796 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.334063591 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345248836 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.459563424 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.345606894 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.345503757 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.051161297 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.345916316 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.477746198 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.335299793 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346116329 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.346099786 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.139024463 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.333880015 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.331472401 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.477768617 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.347296569 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.034630498 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.33031134 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.333884496 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.044244398 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.480616134 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.365829175 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.355167818 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.357186771 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.499777988 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.351138181 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.463052303 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.464542123 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.496802726 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.385869517 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.330187812 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.335275054 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.348585501 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.348853788 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.349039476 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.376062065 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.336873441 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.348404046 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.035968698 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358962092 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.349280157 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.347423271 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.347705641 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.376103497 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.349376051 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.349210068 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.479565276 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.348885913 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.464673375 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.139599239 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.155959759 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.348345594 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.335215579 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.349994405 seconds)
  done (took 108.919552422 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.412630077 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.414075046 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.450977067 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.340963147 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.388183403 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.449162658 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.341629711 seconds)
  done (took 11.022609872 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.346629608 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.349689473 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.389862091 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.388401892 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.349328781 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.522968106 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348889546 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.353954273 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349170267 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.39338012 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.350664312 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350947099 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.358770888 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.339957172 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.389594627 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.35326376 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46065637 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.342936425 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.350863147 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.497296259 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350495569 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359849549 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.397387411 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.355070715 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.352511434 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.34826757 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.127248023 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.349383357 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350710076 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352403335 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350712646 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.406902242 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352455861 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.341719179 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351390316 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.458659043 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352470864 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35132601 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.351402532 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.344669497 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.35132938 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353317255 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.351316082 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.352984704 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.352603659 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.368332902 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.352319902 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.352644949 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.3527772 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353142704 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.393047011 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.350902126 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.352509087 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352239659 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.399765195 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361216907 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.353518523 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.352004944 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353353892 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353035026 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.499217647 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.390701714 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.353409542 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392236461 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352379306 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353427349 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.353404465 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.35386382 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437245485 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353431006 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.390712191 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352835696 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.529210848 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368255398 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355052916 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.34799566 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.349292977 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353070789 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.343355476 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.350785802 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.351660509 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.346277127 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.352029407 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353790637 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354213807 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.505363878 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45602214 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.355919171 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.36153655 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.352518212 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.355819507 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.397387971 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354324679 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.355116236 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396118434 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.465944402 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.407543612 seconds)
  done (took 139.085161699 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.359551521 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.358845063 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.350286417 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.374157976 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.348267667 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.346321507 seconds)
  done (took 9.369779996 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.349267719 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.358967344 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356259466 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.355671732 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.35675929 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.356934734 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.35751277 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348951382 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.359969817 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.356390847 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.357639007 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.358470351 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.357268978 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.356774439 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.356889255 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.357034031 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.357389467 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.35806019 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.356834919 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359067107 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.34308447 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.356974775 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359067082 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.350032973 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.360814631 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.357882596 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37462759 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.356502014 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357366137 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.357528232 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.361032049 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.358527782 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.352073725 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.353761155 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.360500516 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.350408009 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360568778 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.358502878 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357641976 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.357484358 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.357181173 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358811249 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.359066079 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.35951169 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.350846296 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.354197726 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.361663535 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372896268 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.360088941 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.35945757 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.35971354 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.358684123 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.359532158 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361360197 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.352641487 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355261177 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.36121453 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.358820602 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.360165525 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.352312438 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.361432562 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.358522984 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352341906 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.362695341 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.359810195 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.359262428 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.352086196 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361431282 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361140391 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.360275386 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.361149477 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.361545533 seconds)
  done (took 99.994647082 seconds)
done (took 369.614133985 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.640214533 seconds)
  done (took 3.876132379 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.348532117 seconds)
  done (took 3.585714738 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.233247825 seconds)
  done (took 22.473363763 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.376711206 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.391879497 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.353305526 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.356131313 seconds)
  done (took 10.714949439 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.617457172 seconds)
  done (took 3.855912592 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.369119995 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.356757673 seconds)
  done (took 5.965610834 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.53710364 seconds)
  done (took 3.775808658 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.584935877 seconds)
  done (took 3.82407715 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.372820006 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.364867692 seconds)
  done (took 5.985737883 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.329944662 seconds)
  done (took 3.568871482 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.463538722 seconds)
  done (took 21.703531683 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.373045258 seconds)
  done (took 3.613774956 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.377080683 seconds)
  done (took 3.61530014 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.838422325 seconds)
  done (took 6.078614342 seconds)
done (took 103.873106157 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.349085724 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.350607434 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.353798543 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.347655195 seconds)
  done (took 10.640880242 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.427912788 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.42850215 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.436363297 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.423461404 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.423918947 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.431914565 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.389539112 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391487694 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.420274158 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.418590972 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.435155691 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.423068557 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.43256103 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390681916 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.417365829 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.433561317 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.420594789 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.438657439 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392326819 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.423960614 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.36791697 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.424516738 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.418908481 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.3662942 seconds)
  done (took 35.216673464 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.85210746 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.426905255 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.510634441 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.408732164 seconds)
  done (took 7.439781188 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.468736609 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.473341073 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.489982384 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.534432721 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.571847369 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.484960912 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390643255 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.389488382 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.374130628 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.472910143 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.557046913 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.469037739 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.684747801 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367373377 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.683868689 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.366680489 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.366147752 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.472286205 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.518241559 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.550447542 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.368060274 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.471078765 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.475400092 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.472612347 seconds)
  done (took 36.715036589 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.376113205 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.385449252 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.369080131 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.382712398 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.369643578 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.369686313 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.369564531 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.375794155 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.368792293 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.369214764 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.368982717 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.38356571 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.368826074 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.371320493 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.375527059 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.371530942 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.370529023 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.37616004 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.376767903 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.370371038 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.368716701 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.377561794 seconds)
  done (took 31.459698659 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.352693376 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.353712462 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.706439176 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.610330177 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.354312864 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.357054704 seconds)
  done (took 13.978398034 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.425286925 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.565206253 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.365795188 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.702041118 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.791503658 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.365479977 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.360870716 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.599420452 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.894558774 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.886223425 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.420129788 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.430416375 seconds)
  done (took 20.051308693 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.361299244 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.358509137 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.362429988 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.374875881 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.413541429 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.367503142 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.367942051 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.354895917 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.418183279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.422838376 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.370158766 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.415986403 seconds)
  done (took 21.833763586 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446143759 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365287378 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372223632 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445625959 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369263332 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36719072 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.430771938 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.083611306 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.375383355 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642737146 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373303902 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450055626 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612550993 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372122416 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372208469 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.331534565 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591341058 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841718559 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367648962 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374768419 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398024707 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375743062 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369792894 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.574728822 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371141923 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366867861 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.630519444 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367251271 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648530498 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625951807 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625906498 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37300419 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644714419 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01178758 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478981882 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569923899 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364512679 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387792517 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.376387326 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.3716281 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369512776 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370150791 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.620913319 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371020895 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369555504 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37354728 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094221458 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381057557 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.367622629 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369097631 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624301649 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45515772 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.376651271 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368428822 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38522822 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373291152 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.375271394 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497942404 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009068122 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369002897 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398019483 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.374588842 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371987606 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370383682 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004016052 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.377645572 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.376147874 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376094876 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370496564 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371442375 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394206293 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371165406 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.389530248 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369028623 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133119576 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376584795 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372198616 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895997558 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37975146 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.376970411 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595165519 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371180802 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370938127 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.37125969 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370000023 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086891994 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378573577 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.340265004 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434045601 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086560323 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.578994223 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396894434 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401329758 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593515797 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.341417437 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372465696 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.372678558 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372193249 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392886339 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.093826677 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376641633 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.377888904 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620418506 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.582812684 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373377577 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.345191119 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846205076 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382884532 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.401868572 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373733185 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.578613365 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.98521168 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63392809 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376684481 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41147506 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372169191 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150540745 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379488162 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.385348377 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374122076 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649727046 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.186367781 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375455575 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448022387 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375782426 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373332305 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374595051 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391326838 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375056936 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.555169608 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393053799 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632377982 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.377096037 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375611558 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.375255948 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378648416 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.376084608 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596114453 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378949069 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655228098 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375071782 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375013094 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378217924 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.593534869 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.389170981 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.384556928 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717542955 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373922347 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380667003 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651910793 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414224538 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488379522 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406940211 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.389145976 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62968494 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.381077465 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.383090188 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389346574 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377981606 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3827029 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.386014307 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375464702 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991010209 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353174084 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382004689 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376707163 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.39483023 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450691155 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38655219 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581991133 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.382421301 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371783446 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.385893464 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.377149375 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602542297 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633023821 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.381854498 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556753089 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.846433202 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99299065 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392644254 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.377429361 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.377299937 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.378001393 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379436895 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380495509 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379978419 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581694593 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64449616 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375162622 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.996925065 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380724398 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387379003 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.3860265 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63397502 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.392141709 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377717639 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388292866 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387161955 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389474385 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639663423 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604836023 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.396664432 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378403025 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.897574092 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386377642 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380615498 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378608781 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406232175 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389553469 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263801574 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724724909 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391725455 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640569218 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393469436 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.402502153 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.381409739 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384938844 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38206017 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.393837126 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394026416 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.585907534 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387854952 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386065189 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020222316 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153468396 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938854473 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39132371 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.385472543 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386107658 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110265126 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384721752 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382194069 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624352026 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104247307 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38434136 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85395249 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.385068272 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137057076 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642454358 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609018335 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388664172 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.392325371 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644532781 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599363203 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408951225 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38527599 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387415639 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.352499431 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93539258 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393424165 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562428315 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105598489 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39449101 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384683626 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.440121527 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.397173459 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778594132 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387083057 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382877425 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388569568 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387199054 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268732831 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39263523 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383338643 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033807021 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390075794 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.86158323 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388430883 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.58961964 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.648196201 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.622372123 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.390604141 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.390991053 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.63326774 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641627721 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385505986 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386455286 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943848766 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.243168506 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.391959974 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383569492 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162643086 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394359921 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673065938 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.399675308 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.38963146 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392178577 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387305834 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3858682 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.386456156 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39164556 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360989254 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859546473 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.391710038 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38774629 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389818759 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409381114 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633521162 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.402758484 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999548969 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61571822 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396100904 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426002767 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.391639716 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398560504 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.357301956 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385766177 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385787081 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397356305 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611936207 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402778572 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.361114154 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.464834614 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602102851 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387853294 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384948011 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604970685 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.39023394 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.401889066 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167477623 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423625129 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384943941 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406082656 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379983381 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42531209 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460796504 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594390469 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.651011355 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651576316 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784187053 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391556705 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389360461 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.405196939 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469617698 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386599378 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.399177811 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.391820228 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001202136 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160729104 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016264297 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650275909 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388747078 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397830077 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389100509 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631370866 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387821926 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665569069 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386959879 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.383063024 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432691205 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388702052 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403917841 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605682981 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663848065 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388573705 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398304671 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392310374 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.388659105 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654888217 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.605318738 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868596485 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918943151 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391214221 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388953695 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122991657 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669131182 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390357534 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391865343 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38995765 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.4118797 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.405223961 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.404145299 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39030444 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615052916 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646359146 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043234118 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.652663205 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.41854752 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.314925871 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391407066 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638658478 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22299627 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597928557 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018911653 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107783582 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648665522 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465940357 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598763685 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.395341776 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628926406 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.399906561 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395187267 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391972235 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39156879 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.39301733 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.649433595 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014227876 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646624728 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.398588475 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.403584994 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428034039 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.599354671 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620153118 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11481078 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610937784 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657714218 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40194832 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393915527 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019805752 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656152578 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394283721 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.399714077 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610856219 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39945087 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429225757 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.277508353 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.392757008 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927209791 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.606444192 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414636744 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407098873 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119122604 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020878685 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.403291574 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876208373 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396685087 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39546291 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675819694 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.402382231 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396659902 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679944952 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.401803013 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395216744 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61090008 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.013950708 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153481544 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.423378234 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402334258 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.396206846 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397376205 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461360775 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400882182 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39712253 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.794246758 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402289909 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397713671 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411155845 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.395868151 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401883146 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.40103791 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396596892 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.406771876 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.381176733 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.387596961 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3991723 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528849821 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955984353 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403835873 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.012696966 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.734583789 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646715961 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398455342 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.373279826 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.404665629 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399476432 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398771275 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39780989 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407549379 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932372508 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.401525033 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.662222062 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40715324 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.609891382 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611146675 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399376922 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607497648 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405815322 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423643262 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.368100232 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400164301 seconds)
  done (took 985.626724077 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.410008428 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.410752784 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.405048781 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.466806166 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417118848 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.408304002 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.414828809 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.473867485 seconds)
  done (took 20.681641595 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.395313884 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.398619831 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.395824813 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.399275489 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.390998429 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.879530173 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.394946777 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.399205281 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.413011682 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.393955748 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.399160593 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.024162456 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.399894945 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.396034519 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.412614575 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.404360883 seconds)
  done (took 32.774518175 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.125161958 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.425264995 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.994684856 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.440618469 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.437575377 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.396323285 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.548872351 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.393743454 seconds)
  done (took 26.038745152 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.40563968 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.40634384 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.405604287 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.405959104 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.406591635 seconds)
  done (took 8.308184383 seconds)
done (took 1252.0053103 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.408050429 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.40782718 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.408511856 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407685514 seconds)
  done (took 6.909936223 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.372504102 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.371129073 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.371939797 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.387914293 seconds)
  done (took 9.780873751 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.065304572 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.920107752 seconds)
  done (took 5.263314997 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.917449329 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.915645408 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.914639819 seconds)
  done (took 7.026166449 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.673167688 seconds)
  done (took 2.951460831 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.347557829 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.392099682 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.392814746 seconds)
  done (took 8.411990243 seconds)
done (took 41.621255034 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.404142159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.155753592 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.54913562 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405691296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.55513588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.549456531 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.645872857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.398408138 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.397434759 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394571112 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.395658569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.57121939 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.633001271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.152656475 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.63253404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.154947995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.554294516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394900892 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395955406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.393951857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.645619856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.406267069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.401606228 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393810459 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.571259369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.558054171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.399700647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.155743651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.394485149 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.401516174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.540753956 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.395176435 seconds)
  done (took 83.278314965 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.394943679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.403370956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.404929586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39506528 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.409835472 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.40509547 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.396220031 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.396425739 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.407497862 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.40202325 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.396542548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413275067 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.399122697 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.396489924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.416331348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396415309 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.412013495 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.399749339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.397282911 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394865482 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.399732224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.399372206 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.407493617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.396155501 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.395671184 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.411853166 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.396144751 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395830525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.397495551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39526468 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.41260303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.396769733 seconds)
  done (took 78.122661661 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.398067826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.412986856 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.403738002 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.403183601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.402907783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.406658247 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.401079663 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.397079707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.405223479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.401603746 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.406852718 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.40981193 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.399143093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.414343536 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.399120158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396940819 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.409660834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.397707521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395819173 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.402486503 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.40152693 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.401598292 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.398710722 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.408111695 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.413981166 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.399930705 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.397601937 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.402391873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.399694392 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.396980924 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.40571697 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.396212003 seconds)
  done (took 78.169380907 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.638246204 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.414089555 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.417482973 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.408402245 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.415546263 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.414016495 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.409539979 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.644387848 seconds)
  done (took 15.046179369 seconds)
done (took 255.894785388 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.408309636 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.89795126 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.441649998 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.407904619 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.431199017 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.43748846 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.613264258 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.437576658 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.598827086 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.409467691 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.426223296 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.424386423 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.202317888 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.54477669 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.195928204 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.31827095 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.279163771 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.401275367 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.959904962 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.630344821 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.44054654 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.410086555 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.206826192 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.289332172 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.384675421 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.476152957 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.472311808 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.558942242 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.525702479 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.470380985 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.892811306 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.417792753 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.432495427 seconds)
  done (took 64.729902304 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.408604164 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.417071662 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.417480707 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.417729591 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.418802812 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.417871735 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.408463081 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.417328 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.41790591 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.419858048 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.41740578 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.418272079 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.418861307 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.417738566 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.418095803 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.390628942 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.409020568 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.419143559 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.409550156 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.391947219 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.418410616 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.417109748 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.418088358 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.418998589 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.41947874 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.420052993 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.418299329 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.42012518 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.41984983 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.419239043 seconds)
  done (took 43.748906711 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.419516825 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.962829524 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.147872884 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.422527787 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.409620231 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.414755013 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.696284069 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.424202724 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.414656637 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.414654981 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.886361036 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.424362678 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444655298 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.156159774 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.417933505 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.421644622 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.420142849 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.414466219 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.970675999 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.425856844 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.695069294 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.425990814 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.695835266 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.426322307 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.414856135 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.413736909 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.417516499 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.196822565 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437019609 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.888267383 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.189584196 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.693473469 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.13865121 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.204970195 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.189387669 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.428176074 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.422633961 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.894523594 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.419898527 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.414491792 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.694954686 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.418352963 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.162201697 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.098898817 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.436092268 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.422586883 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.230623452 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.893636157 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.656853702 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.425009333 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.193986736 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.422291444 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.425916804 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.415352819 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.653677275 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.42059429 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.415577561 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.276374454 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.423625249 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.696636415 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.428372861 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.415284117 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.969807835 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.420693742 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.964647059 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.421946261 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.423569081 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.416965059 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.166830457 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.422778429 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.113874422 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.433597033 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.424546837 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.890419789 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.9716982 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.280130447 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.421102059 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.979027095 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.172533518 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.71564615 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.424864058 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.175895893 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.718565709 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.42556511 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.427879834 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.426351026 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.424856274 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.487582587 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.694470059 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.038668981 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.118828414 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.288704189 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.705992095 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.42928094 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.417238049 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.278945368 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.4311346 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.42755868 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.163240077 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.121426849 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.440468671 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.42607363 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.100720392 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.440318596 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.70257991 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.427342608 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.204174369 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.423670891 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.489677469 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.426760018 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.423755714 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.422151195 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.701203111 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.425122857 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.428333521 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.09908573 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.926006827 seconds)
  done (took 197.380209541 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.428585537 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.412999467 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.413219576 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.411760398 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.411795111 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.420107048 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.413769369 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.413253286 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.420044691 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.412329189 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.415104828 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.421998244 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.419505292 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.413206948 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.41573576 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.430578606 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.41252093 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.418547419 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.429709192 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.414006841 seconds)
  done (took 45.642847345 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.428562327 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.971881398 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.942814969 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.434764483 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.430403405 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.4207283 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.477737902 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.433006276 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.429030713 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.717547689 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.595262269 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.435515895 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.43157282 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.428617299 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.942226674 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.408538339 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.717038316 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.982507732 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.435837804 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.977518554 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.408507662 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.429786484 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.421498022 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.976221634 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.732238136 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.705678735 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.483941255 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.973454197 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.429768204 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.431078985 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.976087058 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.435400712 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.421451674 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.96168717 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.438334467 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.443820324 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.430736968 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.478947879 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.479327773 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.717775058 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.983039368 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.715079677 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.447940743 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.60696499 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.432987472 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.402420057 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.989637393 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.437335173 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.404234852 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.433731812 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.435868808 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.955348998 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.429344907 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.956411265 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.437815502 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.433799081 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.980555358 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.959419699 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.950617055 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.596102984 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.42752093 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.704956177 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.437946909 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.989726362 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.4390458 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.432977688 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.433305853 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.592181639 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.985967156 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.709031507 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.726005858 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.724484605 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.437379548 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.489734125 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.433943255 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.71886212 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.489036774 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.81630944 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.725822687 seconds)
  done (took 128.819475737 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.702065944 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.543563056 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.797549514 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.984295253 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.91851514 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.559660286 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.538516394 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.668028902 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.428829072 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.539398687 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.060036282 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.519111859 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.181053956 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.495048645 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.534355764 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.547507634 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.817311746 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.37212116 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.070492372 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.041109365 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.429442923 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.51929008 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.931427764 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.624048044 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.425058846 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.995278692 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.353629402 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.9397453 seconds)
  done (took 53.837687855 seconds)
done (took 535.442842457 seconds)
SAVING RESULT...
DONE!
