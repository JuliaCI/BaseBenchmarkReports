cset: moving following pidspec: 974
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.296325444 seconds)
loading group "string"... done (took 0.595333708 seconds)
loading group "linalg"... done (took 6.902622747 seconds)
loading group "parallel"... done (took 0.159248275 seconds)
loading group "find"... done (took 1.102102069 seconds)
loading group "tuple"... done (took 1.702186255 seconds)
loading group "dates"... done (took 1.177383641 seconds)
loading group "micro"... done (took 0.22112635 seconds)
loading group "io"... done (took 0.985893347 seconds)
loading group "scalar"... done (took 38.528888931 seconds)
loading group "sparse"... done (took 12.974265718 seconds)
loading group "broadcast"... done (took 0.945722379 seconds)
loading group "union"... done (took 12.37788081 seconds)
loading group "simd"... done (took 4.257639813 seconds)
loading group "random"... done (took 8.565623015 seconds)
loading group "problem"... done (took 2.026126098 seconds)
loading group "array"... done (took 20.621879771 seconds)
loading group "misc"... done (took 1.781733576 seconds)
loading group "sort"... done (took 3.233007905 seconds)
loading group "collection"... done (took 17.083114834 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.517647994 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140894477 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132926078 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13428732 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.170319075 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.129439436 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143427934 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100101493 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.127288695 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162908321 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133649019 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.471586935 seconds)
done (took 5.270833787 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.206170487 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086707928 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097536754 seconds)
  done (took 1.037022558 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066757095 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123989831 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067212801 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.084761234 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068436553 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067403694 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.085609225 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067700479 seconds)
  done (took 1.42319304 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075696469 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069359239 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086799773 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068999477 seconds)
  done (took 1.159340179 seconds)
done (took 4.761964056 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.846293323 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.243136265 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183463975 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.451521296 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149216918 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184801597 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679005916 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337378552 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208269288 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083186666 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.122461617 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.358186824 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123523156 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668400074 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07849049 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10845035 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.174706576 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434583498 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08490088 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084387747 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104036268 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129361284 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105739918 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093230954 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.158277587 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08205554 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145142091 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08202762 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083709862 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224610777 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.187821398 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680848808 seconds)
  done (took 10.579392173 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096689915 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11344079 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068022979 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139949149 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10015253 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089747219 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072916935 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068207916 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106979222 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.145869082 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09106842 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121608025 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066123855 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088342993 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086679618 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.225597955 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081432677 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101774799 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072229632 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075593166 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106121111 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097258753 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07861061 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09485298 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129028208 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.2115956 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100556229 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115936679 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070295662 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099577674 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131417154 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131088991 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067093762 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085319951 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125859275 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114068663 seconds)
  done (took 4.64417584 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.050964821 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154393657 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090082711 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.179438978 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066880482 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124861464 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083418824 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099308388 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21838966 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.068066358 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.471866805 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129009636 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083877806 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066232871 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067007357 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.08760146 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.566765752 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145726486 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110706005 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105087626 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089864952 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07263519 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358191952 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070004203 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066761256 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085815365 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060507145 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.133570683 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07099672 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.175689496 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109789946 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068518752 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119906246 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.181632193 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092407355 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.156633045 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08611026 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065948026 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167099654 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091581069 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066898824 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082685675 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120335954 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123364263 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.07080082 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086153421 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178149329 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068998333 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085288993 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.867136084 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169126851 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094419659 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085560841 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.274475974 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107845847 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069623653 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06549138 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261193893 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152782878 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069443902 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085803962 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069294488 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069887067 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.372146308 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087597267 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.769331553 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071959928 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079328653 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087620758 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069712204 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092783734 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072161458 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102218274 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067306815 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067732144 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083609764 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066473725 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067102964 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10346904 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.206127561 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066058019 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086388862 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065608168 seconds)
    (83/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103686887 seconds)
    (84/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097373656 seconds)
    (85/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090270533 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068049705 seconds)
    (87/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118552238 seconds)
    (88/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072373748 seconds)
    (89/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068979002 seconds)
    (90/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123521803 seconds)
    (91/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0693449 seconds)
    (92/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105938099 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091990328 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085115573 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069122848 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130471088 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086274468 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.136855113 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073728727 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065508696 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116702097 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087238059 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101129232 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099427151 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069260454 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153186118 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065569918 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084333593 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069045778 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066338071 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087061839 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.0709946 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064625068 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099655864 seconds)
  done (took 21.170346349 seconds)
done (took 38.303274455 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.294255398 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097877147 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078941346 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.098618739 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098327157 seconds)
  done (took 1.602847862 seconds)
done (took 2.509488607 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119287851 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117890781 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063736528 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093098559 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063269486 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.121446268 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097670685 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100558331 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120164135 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066572308 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097702312 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084650846 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0660234 seconds)
  done (took 2.147964754 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085405608 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084605404 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089386831 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084505835 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064235728 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101849264 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081263208 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108607915 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083022471 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072723197 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084076286 seconds)
  done (took 1.839749548 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083999612 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084116441 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089159817 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08279913 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064107689 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101547286 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081799815 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105328196 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082495998 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09182443 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066392162 seconds)
  done (took 1.834025436 seconds)
done (took 6.717143058 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080216499 seconds)
  done (took 0.974777518 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.693894289 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.049730482 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079529909 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134608304 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.201206001 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.139566834 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.344445421 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089305194 seconds)
  done (took 9.826448452 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086788687 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087431864 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083477242 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086696461 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072309614 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070973806 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089969657 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071663672 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088440877 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074065483 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072441899 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089752974 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071398179 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088947529 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069889186 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087988078 seconds)
  done (took 2.258375271 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091048902 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109079659 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073402267 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.096945081 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073008784 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.094252497 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076512444 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073838795 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071017901 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095666071 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078122809 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09484298 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074738092 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.084804286 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076818674 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.096021904 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073673851 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.093809104 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077193492 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.093966718 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078150428 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065684795 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.093409954 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076200317 seconds)
  done (took 3.00527016 seconds)
done (took 16.966156112 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11527467 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.092597701 seconds)
  done (took 1.109218409 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08488198 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102535025 seconds)
  done (took 1.093505883 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086812008 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084192549 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093223061 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09919196 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067582187 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08680504 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.108202521 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068750177 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066790067 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.086548553 seconds)
  done (took 1.756220519 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07181196 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095832743 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073523498 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100930667 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076974615 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083491335 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076494231 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086633237 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083075199 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063976806 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.091818943 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102306953 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074886875 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103564614 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076089535 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088369762 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072779239 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.087866196 seconds)
  done (took 2.41816723 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068749523 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068527444 seconds)
  done (took 1.045588596 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070368612 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064867142 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087982962 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068471115 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08383342 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06480739 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082742816 seconds)
  done (took 1.433841765 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.422151343 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113245154 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340361702 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073344889 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105163595 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267277553 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064734679 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069518077 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093502739 seconds)
  done (took 2.499997966 seconds)
done (took 12.26530468 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083242433 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085876847 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114874063 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.386311022 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094956896 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.087689627 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.135858944 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.234385213 seconds)
done (took 2.136858847 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128367216 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.630657894 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404762277 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212585445 seconds)
  done (took 2.164721794 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341057942 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090484034 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058524064 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.086260031 seconds)
  done (took 1.497212726 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06907376 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071082237 seconds)
  done (took 1.058647059 seconds)
done (took 5.766454204 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069235889 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067719013 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08290492 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068891923 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064829551 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083489045 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082703017 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086039867 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068584757 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067384878 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.087146869 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.071466399 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06717614 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085488628 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065984639 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067229108 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.083247488 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065431073 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067190813 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08371861 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065560657 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067086029 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084082938 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065361968 seconds)
  done (took 2.728089477 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086585258 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08576228 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07458057 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072178504 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092122893 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.076342175 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092809571 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068532944 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091658443 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07036414 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089456448 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073507674 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069659776 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071168675 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069272167 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.092208413 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072156415 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084553162 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068769698 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08762984 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073170376 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067378232 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090307174 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07238827 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.089682034 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072322704 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087742613 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069470419 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090856763 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074082407 seconds)
  done (took 3.301090773 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072654172 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065086901 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084012739 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074189488 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065543876 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086104235 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066269583 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066092369 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08595274 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065626104 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066097925 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.085168809 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065901835 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084951257 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067458225 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069071147 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.100213926 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066252095 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064572679 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.085935015 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06935593 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066645376 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085146973 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064976931 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083655578 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066057387 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065521271 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.083547766 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067175565 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065232081 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.087623345 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069749476 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065059515 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091125934 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068859004 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064399154 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.088829151 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065027189 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06592776 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084504943 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065360529 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.082210004 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066609826 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071905148 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084381046 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068264972 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065777886 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085218128 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066535593 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067981616 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084653761 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06530816 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085335719 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068355813 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069052917 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063844036 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065453394 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064141488 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087845783 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065959452 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064561304 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084300805 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068350325 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065900759 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.099936855 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072188885 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0837273 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068106527 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065955015 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086793707 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067464756 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078360001 seconds)
  done (took 6.233296255 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094526059 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109860013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067364489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066245443 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0630046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086710396 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070646764 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065160937 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087375971 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071697061 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084340112 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068132407 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067215662 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077191667 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064880826 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08685638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073105781 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064118632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084949813 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069378145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.196112282 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071176997 seconds)
  done (took 2.721166964 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.177812709 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072302458 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.128006521 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093766806 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071669967 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093761615 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072416023 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071962975 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092159897 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069585322 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08954121 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072135313 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088938898 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071092944 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088412219 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070602859 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089739594 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071053339 seconds)
  done (took 2.515854212 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079959884 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067406177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107704313 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067902926 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087579336 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07050319 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09176818 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077664893 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088520237 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068975979 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075060082 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089804163 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070321073 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086520337 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070643148 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067490908 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090359775 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067601293 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095713935 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07315627 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092503225 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077179541 seconds)
  done (took 2.69694504 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08283344 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068745905 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104844664 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070243527 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083387154 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066584819 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090883259 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068554546 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071378158 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.090716703 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068159334 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084554083 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07396477 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067138417 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091111532 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0685322 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089016197 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06892475 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068414564 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083898979 seconds)
  done (took 2.495918383 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090472165 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088123015 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071390892 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097560122 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070221107 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087548181 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079085423 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087420284 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070588734 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1081489 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070008101 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069013463 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098818825 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092716849 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070971792 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096464463 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078651903 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09656552 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069269511 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088572819 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090075814 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088733646 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078050316 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089742805 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070473722 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088243385 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071057781 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093149136 seconds)
  done (took 3.28627726 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06981352 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066051743 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062885721 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062880211 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062479082 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084663139 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064678974 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063942121 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08444093 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064653834 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066289159 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085492463 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067067379 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066002114 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08512091 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066327697 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06571018 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06297142 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062429339 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062731612 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087952985 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066747391 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065053436 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082951684 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063531933 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084263642 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065362898 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06374606 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084850627 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066205314 seconds)
  done (took 3.042404906 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079399209 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073748262 seconds)
  done (took 1.09103968 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066144077 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079616449 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083640964 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070073578 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089428276 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070305343 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074910456 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092956863 seconds)
  done (took 1.566274947 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084691406 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078787397 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089471638 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082092209 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077177682 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082709559 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160610444 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089156527 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075673404 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065311872 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.101584376 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067110106 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093631571 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069745716 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074233428 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094638937 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066282353 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093891399 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071801695 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065913762 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089883036 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077281383 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090317477 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064733968 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069372484 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08952974 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100036961 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069724016 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07101664 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097252782 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074675308 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08167421 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069806344 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069811937 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.086523919 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079631754 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104396301 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070695687 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095542656 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069492462 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097323174 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064506583 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072080942 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.095399269 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077621878 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088143157 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069354531 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063315648 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065424859 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069029953 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.084197439 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069804305 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062710546 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094508373 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07078285 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099447651 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067905804 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068714037 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090722445 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071169138 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092449702 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071040937 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068666515 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085498866 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076729414 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09076687 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077171286 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061844947 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.081942374 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066965021 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097380497 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091526044 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094420897 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07049762 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069450833 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086631975 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072580591 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088826458 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075785663 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074311794 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089818365 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074746366 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095665036 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068605893 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090380093 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078785455 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065720218 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091954403 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066668878 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104476018 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066802329 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084224807 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067093305 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078592355 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091848049 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068408497 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085328817 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076199696 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062027455 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.089308332 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070523406 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086346506 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081015374 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071717986 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071901238 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073768441 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.097906742 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068590414 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091734813 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065382586 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068578168 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087709997 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075473091 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081329148 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073062151 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069075092 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088993727 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077218563 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085987975 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069788845 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07501319 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094832201 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066773597 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083633891 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072840886 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067240659 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091794704 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077062001 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08664191 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064465996 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062647418 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091569686 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068220715 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091080726 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074904377 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070970917 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.083321227 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066421865 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.093277116 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077901982 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087666405 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070119277 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074913693 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089761119 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067763618 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094384183 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072601185 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066771153 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094198174 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069414008 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080677758 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072816067 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069863466 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085870474 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072283864 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089700131 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070918724 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066263376 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085982673 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075454408 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087127091 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066747922 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065738677 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08518041 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076790171 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087559529 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062699696 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063225536 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095869033 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064331755 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086259355 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066489068 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068854214 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088097862 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065042239 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085123333 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07069031 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097694501 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073584755 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066570944 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093398894 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079051644 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086960765 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071446754 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066056078 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088722847 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068136466 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096249023 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074564896 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091415653 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071593841 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063390693 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093244678 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075758612 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086503343 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06786659 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067529518 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091949553 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073847635 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091755033 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068534875 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064235918 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089218898 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070800176 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089960452 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069496677 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066413957 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096142785 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066301343 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074328155 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067372418 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099169679 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070719948 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080997014 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074402131 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066461134 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094455316 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064318075 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066288266 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087433811 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070392685 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087344954 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072804364 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063172365 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095906487 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077403058 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088376717 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069313792 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067977533 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095236393 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070846803 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092229816 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07368703 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0747146 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100204439 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068823059 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091678127 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080179325 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066604712 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.083473407 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075259427 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086158576 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069021851 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066516186 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064918576 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068677761 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097353454 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074377871 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060038138 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09094976 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065605329 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086164165 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063395406 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071122678 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068965558 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067419492 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094803341 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069926581 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066984357 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069076349 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064884401 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.089821121 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069264094 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069677666 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.089387532 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070046518 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086360744 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073108715 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066693035 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086794475 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071383197 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068524567 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090326219 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074524053 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089163173 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069728064 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071668479 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090963628 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069196318 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089821597 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068978454 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071317489 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089873496 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069936999 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090829484 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065445556 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075092699 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088773786 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076863571 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088467341 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066628491 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076924402 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091799462 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075061782 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08988025 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07061554 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069255395 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089854223 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071572067 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095168146 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067324926 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098831763 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078772202 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068691243 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092272876 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069146421 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089911485 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069274433 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070021222 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089952152 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06930987 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068171972 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094573595 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071423059 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089147168 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071651216 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068902541 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089640549 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070938374 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081938222 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069584499 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068540313 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066194969 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075275983 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.089084423 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067202891 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065578982 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089924376 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065996936 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063283404 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096695342 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096998855 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068881317 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073643732 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088206687 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068660272 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098185047 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062660044 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064571911 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085443083 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064792835 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095040925 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069605482 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075979965 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06689283 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065337891 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06292897 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09103977 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065526386 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081911201 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065545846 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070439482 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087894071 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066463303 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087003083 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071202152 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067536406 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097876683 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066299554 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087450521 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068851325 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.0644725 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087461119 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066937495 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069361306 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089659148 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065354393 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084646677 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067959109 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067759673 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089284331 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067933125 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068033437 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094793792 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06714021 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090798694 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071128927 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084293127 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071338627 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066797253 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086928075 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067389322 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07014281 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090821212 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067942672 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096643872 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066701788 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08756785 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068373944 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064664383 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087398004 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067290145 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066787979 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087650517 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069044214 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094996478 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065929965 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069571593 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08825837 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067312597 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093701707 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068456475 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069586049 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072339663 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065990166 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091202545 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074883752 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09176822 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071124901 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068032851 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089697513 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072467604 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086380092 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074846937 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067107551 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088693161 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068768744 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084500976 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067600339 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067032788 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086944048 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074346287 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087393344 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067706232 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066801611 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085763122 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069125291 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069419125 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095439454 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06932252 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091050881 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063385195 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064187844 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088695916 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065256737 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088741344 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070614712 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072563128 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09041702 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067370016 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086470112 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077954061 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072541565 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09223066 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065538506 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069897671 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066802592 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068095855 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091077467 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067922955 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088108635 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072286434 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068712437 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08765089 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074807599 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090381323 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0695604 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068605488 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.0891391 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067660665 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062008309 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088931626 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069067218 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093000738 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069835098 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06715369 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098826734 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064301791 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088035681 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071304004 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087225123 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073171957 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063000487 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090034073 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069103931 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088083314 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064137303 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067078949 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085537691 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070663838 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066651291 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083835401 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077965334 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096611123 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070764957 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065892291 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087599191 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063052774 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08237957 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067391953 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068318442 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090571219 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077840295 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086208188 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067196961 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063139372 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087418076 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071238878 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06969216 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063546109 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061408236 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088920836 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071593716 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07258313 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087119956 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066557907 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091229671 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070589184 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064913916 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09113657 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064439012 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091078893 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081998659 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067165926 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090167694 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073519467 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096234376 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068532951 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081838866 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06921072 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070506986 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088447153 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069177548 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067299808 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080081029 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068975767 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09093496 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066309064 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091105111 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067541958 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075083253 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089603391 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067168751 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092265532 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070052785 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097573117 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072516416 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075148036 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091917376 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070014994 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087142568 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067972655 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065334787 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087538748 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068551084 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087856728 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075231816 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096145859 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068735045 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078775213 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097927514 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068596019 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084568443 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067557936 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065966632 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08361895 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068301615 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064604996 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086291546 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065569638 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086007131 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069593965 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073143745 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089542734 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068226628 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086988417 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062466635 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069301366 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090265339 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06916499 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063550323 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088340306 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068733983 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091325436 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071685483 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065502585 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090222546 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069390629 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088292037 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064368666 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073939389 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087275517 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069783269 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065894752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088839712 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068765135 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091375138 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073188597 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088373762 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071258457 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070384879 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090664694 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064140197 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064081486 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071202804 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063837133 seconds)
  done (took 47.184082723 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104328652 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086174585 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064481236 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062265135 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097343954 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063346469 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085094578 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064922419 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063295115 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087234861 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062152108 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083161705 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071460634 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099542497 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075316153 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089778804 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062655281 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085157945 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063047302 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062882822 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09364197 seconds)
  done (took 2.613546699 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07733263 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092815552 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075301934 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09888252 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070543789 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094359973 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075740349 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093747787 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078547456 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091005438 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078560503 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094828478 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069012938 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.09080869 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069508632 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094614811 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078922391 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092025241 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073413114 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097988208 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073579692 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098031269 seconds)
  done (took 2.841896981 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070659582 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066297308 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088831893 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062703149 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065963948 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.08324883 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.079066027 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064203878 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068405718 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.0639042 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.088614335 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065543813 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067751329 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.08399898 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066617642 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063803347 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134839559 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091467997 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066191679 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088574601 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063441593 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067773874 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083642523 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063086125 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065289642 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091439402 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06723378 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084932482 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067541969 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066017796 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065641506 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064309243 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067299497 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090243581 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066348223 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064637472 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08816103 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066494504 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082389246 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065445824 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067232507 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06141437 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06554749 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06684434 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.087899116 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065316995 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087876387 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067088399 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06202037 seconds)
  done (took 4.589275941 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083973863 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131543723 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068915485 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08735137 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.106132224 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074199141 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092979802 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110933227 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065389947 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064302788 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10579473 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107580295 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068661279 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.095165168 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076152522 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089876569 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07072141 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066264149 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.094875698 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067950063 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.094141332 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074756933 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104502275 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.102972544 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072800843 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088693186 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069257428 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071162009 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10377458 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094102104 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073402515 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094948811 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084571721 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090716384 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068483833 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090175642 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085667394 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089510602 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072256039 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086119538 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072395765 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071446003 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.096167599 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106228304 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069984899 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092592307 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069854285 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065151229 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101902161 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069887997 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09804914 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104718197 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073156448 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06681686 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069361255 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103477073 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06746406 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085748522 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071392062 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100193681 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065177287 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069773441 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103756658 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089378431 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07703393 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103935643 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074582767 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093221367 seconds)
  done (took 6.890489019 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079562239 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09545346 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084398388 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106416136 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075754623 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.099032462 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095117111 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07725035 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095094973 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081004405 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095735586 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118455513 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071461448 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097778029 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076644723 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096267463 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076437658 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071889033 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071199313 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09586986 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073282302 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.104311369 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095853814 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08590494 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122677257 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070596391 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095879839 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075548263 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106076031 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095251348 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084579521 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.096442181 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076393912 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104300476 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082292017 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.097610851 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067548307 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09666825 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075243515 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097442191 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070073598 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105560698 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096207104 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071356907 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097060062 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075882862 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105645178 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082361011 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099774111 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101836487 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075964632 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105217046 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075636857 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096965002 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104598394 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.110007171 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105572674 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105682689 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076204673 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105994615 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104591278 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090227171 seconds)
  done (took 6.620185152 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087159591 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09878239 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079248074 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085668983 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065976754 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093546422 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067205551 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065220956 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098968677 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077401201 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101512905 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093661536 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077267957 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10084319 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072165931 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097604758 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073057567 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095217017 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077495683 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096114425 seconds)
  done (took 2.703795026 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078385711 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08471842 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.092042193 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074640843 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.093500088 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074970415 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093601724 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072257903 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089632204 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073262742 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078470751 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10175857 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068799166 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097231637 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09915762 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076582477 seconds)
  done (took 2.349193039 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078979771 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095661175 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083765608 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090541256 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069255297 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064618976 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090608684 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063888342 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062649768 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.102094621 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066389322 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091833929 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066878291 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086239503 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065000757 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069503153 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.086002323 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064686865 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086907771 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080151854 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098882474 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066813056 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067138314 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089093259 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067779045 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09467873 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066833555 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.086650106 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06618787 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066992049 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089709368 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070036886 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086294334 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06606137 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065395199 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087272936 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06763726 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089024053 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072142711 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067361003 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087410784 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066336325 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089022823 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068703872 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06252842 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065777722 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061831182 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092132712 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065745371 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088535613 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067763535 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06939938 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089223862 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073580853 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092104835 seconds)
  done (took 5.240643142 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083567782 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069379482 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084867858 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065249336 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069330797 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.092315416 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069844158 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090672565 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069686809 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085802118 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069819577 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069533656 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091842834 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071370879 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090976643 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073673503 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064171688 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091833768 seconds)
  done (took 2.406583186 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075524975 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067316875 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09676762 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067466814 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066163249 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091627744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06379827 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086577878 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066607661 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066768799 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088485392 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070066327 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086756314 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070705571 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067233059 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088511223 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069375201 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064607153 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089514604 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06313756 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090786956 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068911727 seconds)
  done (took 2.669759316 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076773907 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093839061 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164038545 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107135473 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083667519 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.079013817 seconds)
  done (took 1.612919665 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094412057 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101674145 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067878564 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087766513 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097592498 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067843527 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091277296 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068579309 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099968086 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0997022 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071726032 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101137617 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079521833 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102509492 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097543717 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07759134 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090927268 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071252895 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066880193 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109135369 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092438353 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078421747 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092362689 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069691031 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091332019 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07937061 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101013677 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100202954 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072240372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100055472 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076902772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091736493 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079470285 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101089351 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072196886 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101162482 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070550683 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109249821 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09685685 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079227636 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091964279 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075493158 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098964328 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073341911 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099880687 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068373241 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071344871 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067121322 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093809673 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109920869 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074757147 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100993244 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074728487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100198331 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099373698 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09083862 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102053509 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100800778 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07705068 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10026586 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076627575 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073155624 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098068921 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079681876 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097105613 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079835927 seconds)
  done (took 6.789154718 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086567027 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111516098 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070190348 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100833798 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07773383 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092752381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068431296 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091955334 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069528642 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091267922 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133480028 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070842853 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100271614 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079688612 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09320954 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070405151 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068316222 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074072296 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092438931 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111265144 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07129596 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100919391 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079091524 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100718608 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102305916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077394005 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093011106 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071033913 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091740976 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071124512 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097193172 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07073123 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100777246 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070477997 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100994947 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07097993 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09338925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074941192 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067812382 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073026134 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101526654 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109253903 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069748065 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091761677 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079797392 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09335415 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071063279 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092912107 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070679338 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092269086 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080213919 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102915245 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080138376 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102341346 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092436019 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071999487 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092356517 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07196451 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092984895 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077693402 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10124227 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071596136 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113624927 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070436504 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069024586 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099688878 seconds)
  done (took 6.711612613 seconds)
done (took 133.822934594 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209951624 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.19055951 seconds)
  done (took 1.407927163 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072418287 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099451348 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.104233351 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131711583 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089609055 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10142817 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099552327 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102076935 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06703305 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088388685 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069041001 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068103384 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154836742 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068020301 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066424659 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091468163 seconds)
  done (took 2.488213881 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101309798 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197360501 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099187751 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.089128772 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097712583 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098215809 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066000877 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099481499 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072544945 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065856981 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097420833 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071421819 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088941996 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072850538 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093927731 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077798361 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066379476 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097882933 seconds)
  done (took 2.670450852 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105531226 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149714736 seconds)
  done (took 1.270553946 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.188782817 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.14392603 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.190496503 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.433312697 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205900227 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.267027874 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179859488 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.178178431 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162264848 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175536239 seconds)
  done (took 3.137204766 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101942508 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.14532003 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310987732 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117210934 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.098024483 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117481909 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121024572 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.103270591 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080317395 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104010719 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102987335 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080382734 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121680013 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078084599 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099764226 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079396204 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124440364 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075033085 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099493264 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077073376 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121789149 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068170635 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074815162 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098057897 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076540922 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101001225 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068518674 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06713338 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074248533 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097431652 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079848437 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115571349 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075173186 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132250831 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09672697 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136626086 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080065717 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.098563093 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077436639 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097916416 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080332951 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102488161 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075941943 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101971234 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069508873 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078889583 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.091022588 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068823844 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104882766 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070987715 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104725456 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081099084 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13502222 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.092009515 seconds)
  done (took 6.349020744 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.721761875 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127917594 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070669677 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.133252672 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119641524 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074978241 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775030577 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117176718 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203192564 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094074474 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111687782 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0719858 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103559579 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085844892 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131902641 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102746418 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117024506 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072079207 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125469919 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.124225537 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070951118 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119889272 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09451793 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.433418605 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067623368 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093850155 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070225336 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071254374 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139288117 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105617606 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072199021 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148363243 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.110968893 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.145753736 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091582225 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071160621 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069647453 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.106290842 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214323322 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18770552 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.156874953 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070615579 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070094155 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.095108569 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093529077 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09236896 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139814243 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084327282 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148066962 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09551117 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072414511 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089874245 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071333568 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080963256 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101192952 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103414691 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.261832191 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068371015 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068087419 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070530804 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231813421 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080523841 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103707503 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092999688 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.182671386 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070845499 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.723602422 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086331572 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068364104 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094194358 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068942449 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069614968 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069006384 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141612941 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.343986159 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068959324 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069190091 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093298481 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20168399 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077686309 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092417032 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13903298 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068884364 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09300683 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073319568 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071817799 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145608477 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.107366523 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070907679 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093044694 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07119815 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091491113 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07089742 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190435075 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.105488915 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081935164 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.184266817 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092226816 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.139319103 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081341661 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091781011 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081329949 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067768434 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093744403 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06978366 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101609053 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.119614713 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082570942 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095153306 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071949073 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124028553 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08405095 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092522534 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080467252 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454510913 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.106737329 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069277223 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107413549 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068863788 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139604479 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095130685 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212707378 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06946412 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104184803 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070167775 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092219305 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07154141 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140470064 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094300546 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072197711 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071324591 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095911993 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083209996 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187461459 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072134937 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.187534175 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16131652 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094325835 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147929429 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071256231 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143852879 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072031897 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094881966 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073608658 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764752222 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070169971 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068902075 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092525185 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173673498 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070721065 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079321759 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101514808 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067398726 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.763932553 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083987372 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103795569 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083591408 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094571354 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070763768 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068665429 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096345666 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1379426 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.172904502 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070625968 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067511876 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102179496 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.13789524 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067754867 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102013539 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078688989 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102068144 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069458284 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093543453 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083619979 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144860047 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.10436196 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.165490666 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.564063671 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072421724 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078918389 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.19736242 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070826369 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111184741 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070482577 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108697342 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139071459 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07914364 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281370238 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.14290909 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177642729 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082882106 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10851264 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069248765 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09196584 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082059698 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091913076 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072092708 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.100713549 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073111666 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069949058 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107927872 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069613342 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200829918 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090076344 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080522255 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090012825 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071581771 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105911956 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069908109 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070040111 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10260524 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070276391 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100479902 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.668434315 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100986156 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072018769 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071109452 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190150152 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141438101 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07071676 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092795083 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071828227 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137159747 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.187669196 seconds)
  done (took 31.344905573 seconds)
done (took 49.682158996 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263880869 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177027414 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.252958839 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118007018 seconds)
  done (took 1.929693776 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.152524084 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105197747 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122590432 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065741683 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.129749595 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090130714 seconds)
  done (took 1.711976183 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.401359835 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269019746 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234034961 seconds)
  done (took 1.94323071 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221534399 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.239315274 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.421675848 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.308833093 seconds)
  done (took 2.341648535 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.172989589 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119260438 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070116136 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111489138 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.166381433 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21801115 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13137137 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180390391 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082072279 seconds)
  done (took 2.343103666 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.169530916 seconds)
done (took 11.48106912 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100402994 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.213255131 seconds)
    (3/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107381128 seconds)
    (4/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.228312689 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067413396 seconds)
    (6/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.196154069 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115380196 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07790411 seconds)
    (9/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10292274 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073441228 seconds)
    (11/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.207718903 seconds)
    (12/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.178403419 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07467244 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.19528962 seconds)
    (15/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116487376 seconds)
    (16/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090351646 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.181728894 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.199688245 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098470145 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.171499127 seconds)
    (21/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.104341282 seconds)
    (22/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.21570203 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112050908 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.19467411 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.186271204 seconds)
    (26/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.117050432 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09624581 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.188921674 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074177252 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.16480543 seconds)
    (31/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075985348 seconds)
    (32/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.201971122 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076043646 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.2320927 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123428136 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074275031 seconds)
    (37/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110678674 seconds)
    (38/309) benchmarking ("sort", Float32, false)...
    done (took 0.152985108 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.160740711 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.135524326 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080419734 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.127312539 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066225622 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194521353 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077916486 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123080443 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094046681 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.113422047 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.095317606 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121012134 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072766539 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116311174 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114151231 seconds)
    (54/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.131737581 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.11731807 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090858409 seconds)
    (57/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113998453 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.207840341 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.138379721 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.185541223 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071208666 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123773677 seconds)
    (63/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081235497 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092963033 seconds)
    (65/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053390148 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065452801 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.074530242 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090742416 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068450176 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091095665 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.159185537 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.21054441 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.151560489 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074570432 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065565706 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.098670751 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087797371 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.077406751 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.175114641 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.165553966 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203242725 seconds)
    (82/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.167074417 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053155462 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06655106 seconds)
    (85/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196830186 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089635253 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091579578 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.067336575 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.20440109 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.09847477 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.195404602 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.130759581 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071164323 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051693985 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172657495 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.138936018 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.188217902 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.204848507 seconds)
    (99/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.174996852 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.073693594 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065966301 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09939617 seconds)
    (103/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051519328 seconds)
    (104/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.129535957 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054395484 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.188971765 seconds)
    (107/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.10152111 seconds)
    (108/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050850829 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096537506 seconds)
    (110/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08859047 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099166195 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081453089 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072594639 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.106974769 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166919953 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142428203 seconds)
    (117/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110143507 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145292986 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101990277 seconds)
    (120/309) benchmarking ("sort", Int8, false)...
    done (took 0.168274422 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051920327 seconds)
    (122/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161157832 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067661053 seconds)
    (124/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067288421 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.379874695 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073646641 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.136319733 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.098173834 seconds)
    (129/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109673731 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120778726 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072844342 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070729966 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09655782 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125916404 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091376667 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066159435 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112548261 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05439627 seconds)
    (139/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068116628 seconds)
    (140/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.122865285 seconds)
    (141/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074555368 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072471378 seconds)
    (143/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.089466092 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051595477 seconds)
    (145/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181547212 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103938016 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066907477 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073003798 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07686269 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079501174 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051073049 seconds)
    (152/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.098279572 seconds)
    (153/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075620525 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061675039 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090505097 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072670124 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075959959 seconds)
    (158/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096772539 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074341422 seconds)
    (160/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060672522 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.103168093 seconds)
    (162/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070431808 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076353778 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077055601 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071843779 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.140132928 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088257885 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192334182 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065383226 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195162946 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090215999 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051952188 seconds)
    (173/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086396562 seconds)
    (174/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.075507716 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054439706 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072823439 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.163247078 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071468488 seconds)
    (179/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.106035459 seconds)
    (180/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067343245 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.136202346 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070167404 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071817454 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.080082197 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076393662 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070789531 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099531171 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069284177 seconds)
    (189/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.093250469 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05342499 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051836979 seconds)
    (192/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.123756351 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065469338 seconds)
    (194/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061874955 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.162340638 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06666017 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.170592387 seconds)
    (198/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077473076 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050830411 seconds)
    (200/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10535409 seconds)
    (201/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052503334 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065599594 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07835331 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074546917 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071857257 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088413917 seconds)
    (207/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051667229 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119217133 seconds)
    (209/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07323003 seconds)
    (210/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.154538964 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101997941 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099026152 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067969187 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073214115 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093294259 seconds)
    (216/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054811347 seconds)
    (217/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062180517 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08717931 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070467207 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065299871 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094108091 seconds)
    (222/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053046336 seconds)
    (223/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088174641 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.076875336 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145793096 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077391381 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065459031 seconds)
    (228/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068024511 seconds)
    (229/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.100700624 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05336521 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065527711 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159448266 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051470953 seconds)
    (234/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096298156 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062224919 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050990205 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162599264 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08118042 seconds)
    (239/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.076451609 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072366446 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.178670249 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053949462 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065277756 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096465505 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108182483 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051346154 seconds)
    (247/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.101531224 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05236468 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051184627 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159586274 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065785813 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.173236097 seconds)
    (253/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06856199 seconds)
    (254/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.075376655 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052210066 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066911574 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198143784 seconds)
    (258/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052658349 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076493833 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077176206 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071837161 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117884963 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112826544 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094080432 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066819869 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101053877 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091651428 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066767821 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.0990603 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053480485 seconds)
    (271/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051822216 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092313167 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052477516 seconds)
    (274/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065753708 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.075105759 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052248921 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061214105 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064736214 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077095894 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052111419 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191441938 seconds)
    (282/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072732555 seconds)
    (283/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064873064 seconds)
    (284/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09362384 seconds)
    (285/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053408168 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073037037 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138161382 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064434642 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089121818 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066782324 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073300526 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091782401 seconds)
    (293/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053268587 seconds)
    (294/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051894656 seconds)
    (295/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.145916391 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072157261 seconds)
    (297/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091290919 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068628132 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202262279 seconds)
    (300/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054501611 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090374819 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092137419 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111609353 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113501123 seconds)
    (305/309) benchmarking ("sort", Float64, false)...
    done (took 0.126380766 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097332887 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053974176 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067427 seconds)
    (309/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080343392 seconds)
  done (took 33.167813718 seconds)
done (took 34.215062014 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085516017 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118661302 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078441915 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094382596 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.107721406 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078354211 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098198654 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07873484 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105281477 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.0823907 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077475135 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054319509 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072444199 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101381168 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07508584 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116048075 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078783573 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.096302475 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075128083 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065084642 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097754786 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066674202 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067306776 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.080228069 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07957882 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071679921 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09783645 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074409412 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090086587 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067180504 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069503332 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098555729 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066666269 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077910985 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097989139 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073064176 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098173411 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077319086 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06769278 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090244083 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074561986 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065771422 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097464478 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074690652 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071174265 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095317403 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073503929 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102717896 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091623177 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0917836 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075580692 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076134712 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102036204 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0723444 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093635973 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074250501 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070897327 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117135367 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073448799 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091991973 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075636043 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073894228 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096199171 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074419117 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072219768 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100930896 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075670402 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095449504 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075678063 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071044748 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091080494 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073814308 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068829919 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.091176332 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075511593 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100730818 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06606286 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071297795 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096654436 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072962953 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065048683 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093085511 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068257131 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071976838 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092394847 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055554693 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069585387 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096506246 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065839567 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096841099 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073463839 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073673281 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091381769 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077172966 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.0654641 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095699208 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066838339 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065960093 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.09275369 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069968768 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065893857 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067382303 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073592721 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066490914 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.099755668 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080267389 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090073539 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073213632 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064700383 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0896881 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080755121 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098538361 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067732502 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068162386 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089427961 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073716058 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064434041 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09083292 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067025895 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065191778 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.097078132 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066451779 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068379209 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097288653 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078737178 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088721844 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070905064 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068014646 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090199263 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073158658 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065793716 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090398757 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069264471 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062234583 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067317756 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064746352 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071826688 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09518316 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074788943 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067332842 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099205075 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070796725 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095110568 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073017213 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065385646 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059205633 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093545135 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068308842 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09095966 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067584019 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067624315 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089792331 seconds)
done (took 13.317417482 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070644676 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.174164069 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.123806794 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096624895 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111584578 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067698201 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076106111 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127865984 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092086587 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103891259 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085555046 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083762124 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.139938696 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064955276 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.091956512 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07121116 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06667441 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113913047 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125209052 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088248643 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.136200154 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065575708 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121450885 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089908576 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113301311 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11792787 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068503975 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070231794 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093771571 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102141728 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110642315 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070511655 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065952929 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124099388 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117568845 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084632858 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08975255 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084775359 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066481063 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.091268297 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.088103818 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123245734 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080296732 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079288844 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071009172 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.097370219 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067444713 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.109835335 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090336915 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.105546859 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110546149 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106957371 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069178451 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.080231956 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.090889247 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088046894 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106744158 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069525904 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066865217 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094331435 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066661914 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069329616 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11316252 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115127814 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071562859 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105112525 seconds)
  done (took 7.296452948 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087864663 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091011249 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108995618 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082986531 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.091511345 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067121147 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066361709 seconds)
  done (took 1.705709034 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07118619 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091941633 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115879823 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089108118 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110253704 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087917194 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102166395 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068367167 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082408331 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094699037 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087467573 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127648867 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068386485 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098516723 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0925056 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066705491 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11725665 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06749069 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095054613 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091396658 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093621588 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088472029 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06898386 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093371893 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081780402 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066639749 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139668393 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095317725 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070156695 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070539986 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089623706 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108344667 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106308771 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075295887 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065800692 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107360198 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081230837 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090578162 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084886149 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095719554 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083091995 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067811887 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093506331 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066935733 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071598944 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102928361 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068920849 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067347104 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.096158623 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086780517 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093734174 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081798457 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066670978 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.09624269 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069946768 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096457058 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07899929 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068735493 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112317384 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069648381 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108254459 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08505718 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080911806 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109762073 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069823225 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106498927 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081520116 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068919665 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095162339 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070609751 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108027508 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066467903 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069049549 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104205013 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069296313 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114504451 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09102125 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068611769 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103965272 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067665625 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092744432 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068713774 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.0896135 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096429477 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067817067 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09577367 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071628231 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064485932 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091392385 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073047049 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065703779 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.094406211 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070735907 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067956939 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069076938 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082217287 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.095461051 seconds)
  done (took 9.454429926 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072379133 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069825788 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094392856 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069537538 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067954069 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067382282 seconds)
  done (took 1.56156464 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098446227 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093995416 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082638941 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072785997 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.131096702 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081266193 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109016728 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104405147 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086003399 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078793127 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108233889 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.082093994 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113382459 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073502346 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10665436 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072484951 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.107428305 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076975321 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.103596463 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075368181 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111641159 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074486932 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073538693 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107768505 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070881274 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098553538 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077664097 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104447896 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080418863 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104960335 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074012423 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071007121 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069898142 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077284553 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110227378 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071725469 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097871156 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073091668 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101095255 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072821939 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081670692 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100247063 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074702322 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097941113 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079621643 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096451437 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072376992 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101105103 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082358909 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095880078 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073467382 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072157982 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096692072 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071945017 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095837325 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081237282 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095659311 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083277611 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072278046 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097371017 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070252646 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096572099 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079947014 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096178845 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081252016 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096220754 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072044592 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073560353 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099916167 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073257905 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09657323 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071448411 seconds)
  done (took 7.439219936 seconds)
done (took 28.561395855 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684038771 seconds)
  done (took 1.801469876 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.739630902 seconds)
  done (took 1.859066981 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.307918559 seconds)
  done (took 17.428636696 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.607956025 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.783194873 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.848171253 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.157089729 seconds)
  done (took 3.516948733 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.913828473 seconds)
  done (took 2.056739935 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245722183 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227637565 seconds)
  done (took 1.599145647 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.786604623 seconds)
  done (took 1.92136494 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.297947796 seconds)
  done (took 2.424081082 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329271121 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178886336 seconds)
  done (took 1.64570444 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473075089 seconds)
  done (took 1.607330217 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.296116276 seconds)
  done (took 8.441718598 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209418907 seconds)
  done (took 1.359886955 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270991903 seconds)
  done (took 1.414393895 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.404671602 seconds)
  done (took 4.54071147 seconds)
done (took 52.748238493 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082760501 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080877967 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107990619 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078962587 seconds)
  done (took 1.481072738 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081666208 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072536122 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103414525 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072852549 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102465888 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073128145 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.0743533 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.1038706 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072819506 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099239093 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073412091 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071828063 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10182502 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074181174 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096361787 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076168864 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09988782 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074182672 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075842094 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098454979 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07205211 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074489134 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101651539 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07260264 seconds)
  done (took 3.163462035 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081626287 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072517356 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099797329 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072525765 seconds)
  done (took 1.473696091 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081615965 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092171083 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115136599 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076254764 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119496363 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112019662 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070392079 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068956954 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096592193 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07802413 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067655591 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.12329062 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113790597 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077417324 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079011375 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091952387 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068864261 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113760045 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07752781 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076489908 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100358059 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077252545 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067155345 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086410463 seconds)
  done (took 3.27919841 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082862633 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102841847 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104511387 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087529181 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087757167 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06478819 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103967673 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089455314 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150449171 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065542617 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096187532 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066977619 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071973235 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.091115228 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.0780546 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.129611533 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109139368 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06767426 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122665427 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065256876 seconds)
  done (took 2.990068494 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076599758 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070811337 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091517131 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071946785 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078148354 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098632797 seconds)
  done (took 1.639922454 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071529274 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067187286 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092079211 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067836361 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071267535 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092004579 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067249684 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066598308 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092031525 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067812943 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066405922 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091595576 seconds)
  done (took 2.059040322 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.399129016 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096192271 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069486559 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.092098938 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071390907 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066081006 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.108187282 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067908209 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117345132 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066995347 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.0673128 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095599658 seconds)
  done (took 2.464157663 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26987205 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079222664 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324554727 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139166324 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14300661 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14508483 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133227962 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140591568 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.172584845 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130821785 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225913232 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196178619 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134742906 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165696127 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115909204 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09855733 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212880364 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191325344 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13137218 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220950485 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174097086 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153033113 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175740658 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128824144 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134284029 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15074044 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070715426 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107624713 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229236798 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160876158 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1751662 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138863839 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121565168 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233923004 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228901537 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171343812 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162181777 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110424996 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.130979771 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16491796 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257787484 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115797461 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194664917 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135804563 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107922587 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168304466 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14752341 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146910791 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134816155 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089255261 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201047552 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239357021 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167353106 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086116065 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138529201 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14294472 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142976539 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130182872 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239329888 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189566015 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153930866 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097357053 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098708814 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20911485 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158605077 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.136461047 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154033332 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12033635 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161739222 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182527682 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146385061 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17069281 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.158876837 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115348615 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146826019 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168846333 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15605577 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198336509 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176970916 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073950915 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152070201 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130531837 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082042454 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167914271 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07452588 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200594987 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126029707 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105137904 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141739149 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135379901 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136683488 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220386067 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176655008 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129689591 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065748138 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129823789 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147413516 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177461775 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114176105 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134535011 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144876 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078765394 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165784721 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101501065 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150843958 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075495287 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151932463 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157927052 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074334524 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152411009 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128834193 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10184697 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161066121 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218349292 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089163904 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081153826 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197119487 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17633444 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105891812 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19988252 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18667884 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126281721 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130679336 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181893945 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237681833 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089398785 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22074208 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135637341 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083132151 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114706744 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15360302 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140573918 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150680368 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082755978 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148071609 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22551121 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07524492 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122857967 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162302351 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106946426 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080933284 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132201338 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129649502 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122025056 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1020588 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133372756 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169252575 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120777132 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103331541 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158382398 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127490013 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228639751 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116568236 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101666205 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131819317 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095260271 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166809739 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187581646 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106747567 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194346863 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.15203094 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133424314 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1474076 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082181688 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167303737 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079095099 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.06983464 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207751112 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137786052 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137517914 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182650382 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131368842 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156395074 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148196669 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163766826 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16090546 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.15724227 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134210771 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113872139 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112653607 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182305364 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074099676 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119781427 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080413081 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132347112 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123696923 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083831236 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19894858 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155704576 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127740423 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11397058 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125520957 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175908135 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10455005 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15835215 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146245234 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12223892 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182753798 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180848026 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187115789 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101255236 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204207252 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071212077 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101104722 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092499119 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120336359 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113358491 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084014057 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114632508 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206613561 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15906741 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168180571 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139646606 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150751959 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184578082 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096772257 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116826526 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205653891 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151915856 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.130170084 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118152843 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099707277 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197366985 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111340683 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238525934 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143311949 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152794698 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211529073 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125651425 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082910859 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133291873 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16672193 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134566616 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174429998 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128375064 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1161 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139550787 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075330772 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129713521 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156236019 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149606281 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164414894 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112779407 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193413039 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07761818 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146546893 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154501915 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152091521 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.090768123 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120623862 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191344714 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123336365 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147807133 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182375504 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107826027 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123496598 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237889657 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175793109 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112133638 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138970216 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120376251 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183800676 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149935655 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170561072 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140028109 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164837075 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135540777 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087863902 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115330218 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098523895 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133369934 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122788717 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138663517 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.143992451 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094775017 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188797209 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105005836 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139010553 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146208931 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125235769 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090390951 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125917325 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204481726 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148867915 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230357657 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128038876 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174798395 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225766202 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074296276 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108367785 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077527917 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196863515 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085111163 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160613264 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126276181 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10489906 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15304118 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174509578 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123350227 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070446011 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137615966 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165157795 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140438687 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125968081 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10578789 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223245832 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099768524 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079136898 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144036391 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133285536 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104172828 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232811607 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.088279944 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099630837 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103364315 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082196045 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15725709 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212063164 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083301901 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154059269 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148794431 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14006276 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157401511 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129676178 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101427404 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143246417 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178577716 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158253724 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091108907 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143353152 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158662022 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184735057 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136131799 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096308417 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233262627 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210509906 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.192744826 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117101406 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142579643 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14388546 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108704544 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198990206 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08315314 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224678843 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109703842 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169060038 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133083749 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135597361 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161404252 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098945803 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118699265 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176840916 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146649472 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111271425 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078190822 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174626156 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150053087 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110029646 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104525018 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170190535 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100830696 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16445586 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202027791 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110468949 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13367199 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097643512 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109478276 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137434988 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132102303 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08821402 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149136264 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233822961 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090460021 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211471911 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172894781 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143305446 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196155187 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101785751 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667325926 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106587146 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184062951 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149112028 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23445847 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126099301 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147725674 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111305336 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153595649 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206972847 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134124407 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175271678 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192743212 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.146291289 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08076785 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131799489 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132357481 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088698287 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135532346 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143237904 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146710971 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123467704 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.146258258 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15460517 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081613539 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124967924 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217317679 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117700483 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174270161 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17152799 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113262384 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148085602 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170706374 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107748955 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122731243 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183821491 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137971919 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127240123 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080768741 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131692066 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232652214 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073425426 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225688681 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151382395 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138249007 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142736069 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145157712 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162247666 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137984867 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151005089 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122371621 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140418071 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113670396 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111461186 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104389523 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106849591 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142116047 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127674302 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128967991 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122708606 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209572748 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07332108 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124499323 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104007401 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206117327 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233831435 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090215796 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11054396 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149500796 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143798079 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.141670269 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151123701 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083394391 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111193525 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083852349 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076427803 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13924882 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14208541 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134461026 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141266127 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196061527 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112587123 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251350155 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097259994 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134824679 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069911984 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108200296 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124095253 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0996828 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138641627 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131169291 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202857794 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124911433 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119025594 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093897212 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.10238468 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083133939 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15756637 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140455555 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148919478 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126987955 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062387028 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1388248 seconds)
  done (took 70.018445331 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136150767 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.109083947 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.123403984 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176351578 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150197542 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241083994 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183952877 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227782172 seconds)
  done (took 2.579106777 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07168026 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121600167 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100068752 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.109808455 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067385167 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.096653014 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.279985795 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081199327 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.09424267 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089143091 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.10725739 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095474257 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.492359162 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068905829 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096231983 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063859529 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094541954 seconds)
  done (took 3.349156964 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.434321737 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.668845425 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.453357676 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074389376 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.04154857 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111969902 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.595415719 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.170202257 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096795025 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.451864317 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.722533405 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16314549 seconds)
  done (took 18.207964677 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077167912 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069536448 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110789702 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083856249 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070990476 seconds)
  done (took 1.641659402 seconds)
done (took 115.484505937 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083186195 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.356562011 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053484797 seconds)
  done (took 1.673889084 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085975146 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084221544 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112942796 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082868486 seconds)
  done (took 1.606594901 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077643241 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076082693 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111750548 seconds)
  done (took 1.503288426 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.286655965 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140476933 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.116923531 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085214067 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077169377 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105486323 seconds)
  done (took 1.502578133 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075038297 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074938284 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101186882 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075919258 seconds)
  done (took 1.558035672 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078979482 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052200138 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054096937 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084303861 seconds)
  done (took 1.509071405 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089121615 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077324465 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.107028224 seconds)
  done (took 1.502822536 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109129258 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113111819 seconds)
  done (took 1.453582128 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084950919 seconds)
  done (took 1.31524373 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101735785 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141705932 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157114494 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138685594 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168211171 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13740971 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085984138 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.118277588 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106286417 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088323957 seconds)
  done (took 2.480082857 seconds)
done (took 17.966493836 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081197343 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392758814 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361918118 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089587901 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.697809521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356004725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.009972625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092405971 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151315704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095913833 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085088004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647945788 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.96693995 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322011331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.989403407 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413771277 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651107563 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066662974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06609863 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097928487 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967226085 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067232798 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097549495 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068644497 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677654192 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372652315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067796275 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.446314903 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067720718 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095300428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356909263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06808249 seconds)
  done (took 16.213915417 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073495998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145353689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07544658 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083339836 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09970788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070135365 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098226674 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07075192 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154060061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067819915 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112369355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068861045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071595684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097677832 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087463182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067247538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067232594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066985919 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098140791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06941259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085984582 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097889442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068738927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095459173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069096321 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079034558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096579896 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068598792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067844249 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069065481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069027575 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09844528 seconds)
  done (took 3.954952636 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116958034 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152893207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074131974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130372961 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112263574 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098758579 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141538744 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122760415 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156390543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068126837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083434191 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067078643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.09900941 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067530457 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085654126 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101419252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069151994 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096125442 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069467899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068220913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116397441 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068094078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095062481 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070486781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068072745 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080476636 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067492549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06698441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099351837 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0701072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099353786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069665678 seconds)
  done (took 4.192241439 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076037108 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074992616 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111247343 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083527888 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068924278 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070168458 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071501055 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099012063 seconds)
  done (took 1.904355366 seconds)
done (took 27.504790195 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080770987 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069358459 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100612782 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081629266 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072832845 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.107588431 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067173674 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102471221 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073255098 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072752967 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103887446 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067877182 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07093592 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09550845 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074150577 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066541457 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.108361402 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07158396 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.106710494 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080137993 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069266021 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.102425376 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074326954 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.107024662 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079716757 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.105407561 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079546212 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07268113 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.097903074 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070795371 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076085628 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112708706 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06822047 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077677677 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066361787 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066476058 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.102658344 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068532388 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.106151445 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077903884 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069205151 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105334329 seconds)
  done (took 4.764018065 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090557922 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090365313 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113853164 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061493077 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06601133 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.094231965 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088229399 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087779611 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061214189 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086957025 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.084309065 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060912427 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06220267 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053500241 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.089134026 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057683962 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061576594 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084647696 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060148717 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059659547 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057107355 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.082481538 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060996172 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06225805 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08464498 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062603432 seconds)
  done (took 3.170892007 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0775094 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083382362 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117356818 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126067809 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.13440436 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07675216 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10804139 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087872394 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113440061 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068918551 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071545873 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.123171371 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087802965 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101885028 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069069113 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086980198 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.111356147 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069952547 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100936972 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092255461 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083659519 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106889144 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093030519 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108799616 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068110143 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069932296 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100998401 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081490256 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099983416 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078076633 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07108541 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100149871 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069539023 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106751415 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073017153 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069162327 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117851456 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077758428 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105271251 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069305231 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070418701 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.096512119 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090496284 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.150673367 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068737029 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073482579 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104267874 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07668757 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095389833 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087656142 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078089601 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096187852 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071279234 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066663635 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096146595 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080476741 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096963996 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071841499 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076301361 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099465568 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080579674 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071020519 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11282677 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067472189 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103711274 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067717672 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067959839 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095730352 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09291669 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096544201 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109894263 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068039133 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097470531 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077197326 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103419518 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075121183 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068290698 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112072093 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077822795 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098990345 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077772275 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071248406 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099518492 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088710295 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06933024 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.098315024 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069189056 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101096084 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072326942 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069126832 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1100094 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06817399 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070279696 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113197513 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067159633 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096747024 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074611143 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071676504 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096464138 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078292923 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100334149 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069252641 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076784709 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096905809 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070698963 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076365507 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.10367428 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066471259 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100492482 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074068353 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067627674 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068101315 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069407988 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067947978 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10864526 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073718981 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100481335 seconds)
  done (took 11.464214129 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.187561717 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153327561 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.10048053 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.176137133 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077068275 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077954668 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178225306 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124435813 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.078422831 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.0974747 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070420336 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.144299349 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107109301 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.150849192 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079107768 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.098718166 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083383046 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14683726 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.178459397 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.17145257 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084776707 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076741174 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099798453 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06900832 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073759476 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.112980585 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.126740926 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078144497 seconds)
  done (took 4.463474495 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08469553 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128502418 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07434317 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088221483 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121226179 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067126622 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099722494 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070180852 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079274171 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.109798309 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067010434 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.10320133 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075110165 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.102939769 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069758256 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074599147 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.10424533 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070029927 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070198042 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102691185 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077620443 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.109550647 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072135453 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066126902 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104321329 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068095405 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093677204 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084869283 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097379968 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09109052 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065408934 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10617235 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082036532 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098190197 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069776896 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067432624 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.096993103 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068384119 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069110158 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096101331 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066763469 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058128468 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096691604 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080432763 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102539088 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057755335 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072273288 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102775174 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074020281 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065170354 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100226154 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070765726 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070116547 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1044443 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07282562 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100709519 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070542214 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065867817 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103769791 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068879998 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064353262 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065271628 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071025782 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064712181 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.107605074 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072384938 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094972679 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069257236 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068895474 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103446227 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068004815 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070590717 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095303483 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070370883 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071485251 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09892001 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068448694 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066063504 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097632906 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068196123 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055041726 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097329401 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054833024 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070950124 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096219618 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066871103 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068212538 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.102561925 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079390826 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098818653 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074243122 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097178167 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068243289 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070337927 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.089855205 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071953599 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082170595 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113963698 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067924316 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.095486697 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082423598 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.100569081 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068442559 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056471615 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103309418 seconds)
  done (took 9.914835951 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096588182 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088110249 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099356213 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08371448 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.119920288 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088372297 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074327532 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106007606 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069504853 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109984169 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074364108 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075891237 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097931245 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077720586 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093503732 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106801845 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069478482 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.105214042 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073093731 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099644052 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112217334 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08144842 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.104305209 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069092387 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074802929 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109866034 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089691219 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108441264 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079229589 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074616377 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109685489 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090638825 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.103758283 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073284159 seconds)
  done (took 4.362446794 seconds)
done (took 39.381794008 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.330565761 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.558484008 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.319917618 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.335985214 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.344004029 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.348931758 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.334511886 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.322378535 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.914688454 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.326382722 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.573238359 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.094412434 seconds)
done (took 61.071274663 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.434823605 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.463220332 seconds)
    (2/2) benchmarking "String"...
    done (took 1.596221607 seconds)
  done (took 4.327906616 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.727209788 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.316499488 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.582851899 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.325793283 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.325176002 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.620221385 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.080205112 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.206608998 seconds)
  done (took 28.722279952 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.332284998 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.719058563 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.997816315 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.990497412 seconds)
  done (took 19.306175074 seconds)
done (took 62.782203919 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.331167535 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.391004078 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.33825602 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.307447434 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.442356407 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.375251215 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.623584843 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.339422563 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.326286144 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.310307959 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.326225451 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.326954527 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.345205061 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.625441734 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.331555715 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.326901824 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.423112359 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.813412549 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.736451117 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.330826854 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.335106254 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.365968359 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.359848523 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.336346632 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.345340739 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.329174816 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.32648142 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.332711354 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.816462394 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.329535148 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.330987262 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.893220315 seconds)
  done (took 194.737168059 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.32779616 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.304142071 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.417471563 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.367899508 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.75781023 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.529338182 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.469137965 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.838373075 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.348026625 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.349663306 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.654447173 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.327948234 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.700321279 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.292363169 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.333957054 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.435291318 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.609371624 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.691733968 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.341126106 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.604462547 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.329927124 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.543676296 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.423996767 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.581151364 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.381732706 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.384957342 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.351054583 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.368870784 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.516998963 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.542677197 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.351449251 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.368631171 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.954235339 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.182811785 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.34899412 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.37146703 seconds)
  done (took 154.969873411 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.902221934 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.329133746 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.329901609 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.331612322 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.364520832 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.329970666 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.911579843 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.896419956 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.830257714 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.430442592 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.394641878 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.608410204 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.331213948 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.425081764 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.342541109 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.333037859 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.344620119 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.355231407 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.329645332 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.33222938 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.912849598 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.345076368 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.450965438 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.336488405 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.331254672 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.363476813 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.724511413 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.331001467 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36376446 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.655571252 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.363777197 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330453471 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.684939931 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.390172277 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.444193572 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.332069063 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364534545 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.331017978 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.603545631 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.331269761 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.332426096 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.334955654 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961951518 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.333558168 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.914533494 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.33415765 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.294887985 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.333787013 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.331881328 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.562293554 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.899502281 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.333297659 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.33219503 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.334985447 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.332959301 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.332097333 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.366956188 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.568667756 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.432846482 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.333111079 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.337408143 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.365253308 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.333804009 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.555658124 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.334743743 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.729292152 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.390018461 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.448544905 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.915863553 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.335317693 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.428289968 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.452620722 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.332556511 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.333496837 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.333924768 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.333716098 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.441115855 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.332936675 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.747413608 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.338873699 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.335007669 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.397095437 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.428161748 seconds)
    (83/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.333036777 seconds)
    (84/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.684608339 seconds)
    (85/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.335400969 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.334163122 seconds)
    (87/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.127294757 seconds)
    (88/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.430059516 seconds)
    (89/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.332626352 seconds)
    (90/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.334261767 seconds)
    (91/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.334102138 seconds)
    (92/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.748966393 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.33260068 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.334077936 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.90071901 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.551920263 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.337194348 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.597878532 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.335123104 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.335413119 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.768905856 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.883422827 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.983269979 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.337218432 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.444664226 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.338132448 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.336023883 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.334781243 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.365321722 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.336264798 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.397127857 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.336451781 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.335363491 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.732865054 seconds)
  done (took 360.447637277 seconds)
done (took 713.322223266 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.044551708 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.035334722 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.151358043 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.023340385 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.990791187 seconds)
  done (took 11.51733049 seconds)
done (took 12.791317398 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535826862 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.53256738 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.399060001 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.535331368 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.365304249 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.555346822 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.516343414 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.356615139 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.447189155 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.424750181 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444007602 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.394010144 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.366173734 seconds)
  done (took 20.144805449 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.666226335 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.667161613 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.399158626 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.672558089 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.370718603 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.661696563 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.536164274 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.554146836 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.534976488 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346124342 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347073127 seconds)
  done (took 18.031641381 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.676805225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.65635185 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.400157798 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.675884572 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.372776601 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.665751848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.534063527 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.548542725 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.535234615 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346735634 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.348001439 seconds)
  done (took 18.035496105 seconds)
done (took 57.486528641 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.343183358 seconds)
  done (took 2.617158542 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.381574687 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.546432952 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.362223041 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.350403789 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.345113391 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.344970061 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.35122759 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.346043599 seconds)
  done (took 12.305371647 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.339469766 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.339278585 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.34293528 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.339380563 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.342131873 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.341955517 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.341888433 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.34344539 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.342027947 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.343866012 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.343786339 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.340422615 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.342180492 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.341411456 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.339835744 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.339701697 seconds)
  done (took 22.73916971 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.342644958 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.339837524 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.340123173 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.340805345 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.339367737 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.340387798 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.341028129 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.340928514 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.340231454 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.339846278 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.342091459 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.34062292 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.340581899 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.340076363 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.340650453 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.342532332 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.340240403 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.340530163 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.345223632 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.34083113 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.342323119 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.34109175 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.341650134 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.342404488 seconds)
  done (took 33.46462465 seconds)
done (took 72.402061595 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.539951022 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.112035925 seconds)
  done (took 9.928018101 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.34421761 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.34450152 seconds)
  done (took 3.969389897 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.34369372 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.343591822 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.34440306 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.344020086 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.34420051 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.344732851 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.344718233 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.345013513 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.344443771 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.34398384 seconds)
  done (took 14.72055946 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.345792757 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.34474156 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.342377943 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.344010697 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.34427459 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.342832905 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.344819599 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.343886798 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.345154683 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.342540944 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.34521681 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.342417034 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.345382468 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.342759388 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.345584514 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.342972159 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.342607647 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.343370544 seconds)
  done (took 25.470214859 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.345277958 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.345751079 seconds)
  done (took 3.970544654 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.343165692 seconds)
    (2/7) benchmarking "second"...
    done (took 1.342900364 seconds)
    (3/7) benchmarking "month"...
    done (took 1.343047532 seconds)
    (4/7) benchmarking "year"...
    done (took 1.34317389 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.343147194 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.343261455 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.342545263 seconds)
  done (took 10.680933259 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.347334659 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.526185952 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.61214817 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.031269015 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.34801725 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.349717915 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.278357494 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.34932172 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.35058514 seconds)
  done (took 15.472774603 seconds)
done (took 85.489576953 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.358189432 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.338100866 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.343959271 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.341574266 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.355151381 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.683601983 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.369180143 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.597642076 seconds)
done (took 39.668017566 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.345486597 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.109674813 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.118777436 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.341536362 seconds)
  done (took 11.851507328 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.337315799 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.318296154 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.330029654 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.433188375 seconds)
  done (took 18.702053088 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.999439806 seconds)
    (2/2) benchmarking "read"...
    done (took 1.673329126 seconds)
  done (took 4.956279105 seconds)
done (took 43.135461959 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347992952 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.348694655 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.345966182 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.348602737 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.345402764 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.346381918 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.345405729 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.347866044 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.349717495 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.348287639 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.348515338 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.34887996 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34858987 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346554243 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34630102 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34875263 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.346245013 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346490248 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.348428265 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346302406 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.345608167 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348359112 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.346513908 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.34761691 seconds)
  done (took 33.61982873 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.34978678 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.348613426 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.350326197 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.349992862 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.347286851 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.349824645 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.35030581 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.348424192 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.349679688 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.349341333 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348248545 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.348187443 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.350289422 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.347236038 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350404962 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.348240619 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.350459879 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348504549 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350474647 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.34842897 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.351037242 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347970509 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.348563805 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.350062628 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.348872423 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347902092 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.351525975 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.350256928 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.351047168 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.348516634 seconds)
  done (took 41.764097132 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.356747526 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.359206206 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.351461674 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.351617653 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.351059605 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.350795567 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.351592309 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.351583599 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.350324513 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.352158655 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.351360148 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.350854337 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.350816798 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.35196396 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.351309482 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.352223578 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.351844822 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.351610561 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.350726814 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.350876412 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.352136602 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.351958135 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.351095764 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.351291504 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.352334512 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.351162614 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.352119506 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.352080599 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.352697203 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.352413176 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.351680211 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.351942923 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.353097206 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.35289048 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.352428936 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.352401619 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.357446297 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.36125749 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.35379527 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.351906806 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.351957288 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.352255653 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.353287416 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.353543161 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.353470107 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.353639588 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.352745117 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.353939316 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.353326987 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.352694539 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.354133059 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.354597586 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.353738296 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.354282205 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.35316019 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.353852797 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.353321559 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.353905225 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.353695612 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.353620323 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.353965353 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.353229968 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.354110096 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.354237487 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.355603974 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.35366773 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.35420154 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.354701005 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.353379851 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.354832855 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.354909298 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.353932459 seconds)
  done (took 98.70512327 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.354059965 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.353309229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.351547359 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.352331516 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.352453275 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.355902692 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.351799122 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354908166 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352933177 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.354848051 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354999002 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352872174 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353641137 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.355377642 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354952735 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.352825564 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.355262258 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.353115768 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.354047945 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354831191 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.355607964 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.351964005 seconds)
  done (took 31.071977119 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356461194 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.35603899 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.353428548 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.356565912 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352229835 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.355672577 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.355193754 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.3555454 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357181566 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353303737 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353896358 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355853499 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.353702562 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353915933 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352883537 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35409637 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355945232 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.353579693 seconds)
  done (took 25.674758722 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.354657616 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.355308212 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.357049882 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.353695855 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.354796821 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.357285645 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354117188 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.356823527 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.357159127 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.354890378 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.357287794 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356992476 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.357497446 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355855478 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358450406 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.354715182 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.357688536 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354715377 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357919289 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355447993 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.355885509 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358738886 seconds)
  done (took 31.127365483 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357482092 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.358140094 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.35550793 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.355384657 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.356191747 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.357832955 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.358323331 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.356235555 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.358040989 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.359780521 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355430425 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.35779553 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.355402792 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.356064624 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.355855625 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355132359 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.359233106 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.357472758 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35883219 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.356981918 seconds)
  done (took 28.434007576 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.360273214 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.360844484 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.360567775 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.361500282 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362011019 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.360538034 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361034172 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.361362277 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.361009178 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.362391623 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.361679315 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.361180773 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.361415068 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.361069821 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.362248407 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362749947 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.361753205 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.362047397 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.361467236 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.362239133 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.362954722 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.361437146 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.362636717 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.361589165 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.361398508 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.361937565 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361714037 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.36310698 seconds)
  done (took 39.41985552 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.361658469 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.360095445 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.358407448 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.358163113 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.357880758 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.359178884 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.358438871 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.357783501 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.361213113 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.358919065 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.360063958 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.361584483 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.361309518 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.360645066 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.360812475 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.361150172 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360592085 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.359915469 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.358487438 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358583453 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.361835313 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361534733 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.362989685 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.359157809 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359112424 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.362834697 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.359363693 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.359862607 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.361856372 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.358634649 seconds)
  done (took 42.097317031 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.381200015 seconds)
    (2/2) benchmarking "in"...
    done (took 1.380821726 seconds)
  done (took 4.05686528 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.36039326 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.361597944 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.361663478 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.359784552 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.359732443 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.362068766 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.361466579 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359485099 seconds)
  done (took 12.181602976 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.367243179 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.362427019 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.362021204 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.362420484 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.364089453 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.367700415 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.375340082 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.380144814 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.36935134 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.366975282 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.37511489 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.37672151 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.37145123 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369245389 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.367195034 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369313201 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.361617367 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.36487533 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.365447063 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.364957821 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.36504591 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.371732945 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.370052062 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.360845477 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.369791236 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.382368479 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.374702337 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.36426001 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.369199467 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.375382155 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.367653777 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.361346201 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.36499215 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.36594762 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.364574646 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.365351993 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.38135475 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.391631475 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.375536765 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365399858 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.3669455 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.36135059 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.370714738 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.373278937 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.370159723 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.365512093 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.367071806 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.362652911 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.369637265 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.3728154 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.371427086 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.368200134 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.363462653 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.37675271 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.370427216 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.379853921 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.385610092 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.375282614 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.381161336 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.383778189 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.384829768 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.378438885 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3727858 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.366453929 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.381006647 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.39678089 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.378319226 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.380287187 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.36369589 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.36625681 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.379853527 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.385010809 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.381744726 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.367116314 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368305393 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.36757798 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.372721786 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.367035335 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.380193821 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.392155337 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.367042587 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368400561 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.383365922 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.396650538 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.371529234 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.368740891 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.36998406 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.370246051 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.374142294 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.383204351 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.386128448 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.368465273 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.37148735 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.373090553 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.374948268 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.369665959 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.371749316 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.374509438 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.364663439 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.368303754 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.368709696 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.376709953 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.382267718 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.368125809 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.369958576 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.382347278 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.367854541 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.371698046 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.383083239 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.368238816 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.368538463 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.374522769 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.382564544 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.365889659 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.376328231 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.382590364 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.370381243 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.376528668 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.371009168 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.370922643 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3841655 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.403024686 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.368750826 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.370178872 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.378174917 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.384460849 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.372153992 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.37951886 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.369900465 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.368372075 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.367239258 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.376799045 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.369397714 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.376590138 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.372150875 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.377437439 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.366523354 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.370936382 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.371364727 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.377259291 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.37596666 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.375481794 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.376226264 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.377421842 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.372506331 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.378306374 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.382360496 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.375262575 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.376556013 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.377084678 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.36789691 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.370218532 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.377676475 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.371703482 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.377172582 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.373011646 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.376270989 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.37177414 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372624675 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.371640878 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.371952008 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.375453155 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.379595585 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.372516182 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.382313568 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.375117685 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.368719605 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.37231639 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.372333107 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.376374669 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.371748807 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.374944167 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.379453875 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.382016928 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.372359174 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.373339537 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.381946962 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373004379 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.374547485 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.373688028 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.38038052 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.387357287 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.373090348 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.386012949 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.373793737 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.374318101 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.374806099 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.377749502 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.377277934 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.373480057 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.380984911 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.381740695 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.392312613 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.388015545 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.379500155 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.377504079 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.379648227 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.377920084 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.383829917 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.373660992 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.374820326 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.374807164 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.378684775 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375392604 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.38126151 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.373818703 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.379384639 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.374446927 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.375337462 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.374428254 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.374352778 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.380203858 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380148265 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.371851188 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.375852514 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375679662 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.379222032 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.371765954 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.378268961 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.378697076 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.375903652 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.375907577 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.391365544 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.373172921 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.380626606 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.381293456 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.380436599 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.377443316 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.3747565 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.381929632 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.379857709 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.388410255 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.399456435 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.381056394 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.387301367 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.397803 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.38006924 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.382356443 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.374920188 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.373244532 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.382606075 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.384948156 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.376267887 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.377740825 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.377640177 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.381515619 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377828724 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.389859326 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.372888569 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.380203447 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.376838942 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.383099144 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.374159559 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.382378979 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.381624828 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.380702643 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.382645901 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.375508236 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.37561226 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.38406242 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.378056457 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.378970046 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.378685572 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.385686915 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.387567546 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.388776673 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.381965574 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.385164938 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.383593683 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.381779911 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.383348859 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.379777812 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.381927558 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.396916234 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.388839821 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.392368788 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.384607518 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.378024616 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390112094 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.383476413 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.387668496 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.383457563 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.382227636 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.38207399 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.380660876 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.37408039 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.384604197 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.377896658 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.384179068 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.384803981 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.382976941 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.379233108 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.3823325 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.379503309 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.379270645 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.380218815 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.383152661 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.378925863 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.388068416 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.384785485 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.382897719 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.38385478 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.39088072 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.403074008 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.38586407 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.382646043 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.383207647 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.383015292 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.384813549 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.379763751 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.387118942 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.388692244 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.387185039 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.395490971 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.384417607 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.395429797 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.380309862 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.387278587 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.38986286 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.376999231 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.381914829 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.385340438 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.380773481 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.3942346 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.398071336 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.386162134 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.384234421 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.381524571 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.381601979 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.380676821 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.381065639 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382841824 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.381508232 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.397015398 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.408753071 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.389630251 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.386764909 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.378015588 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.382096103 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.381772163 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.385109365 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.39211195 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.381179982 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.387576182 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.385007928 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.387473538 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.382458127 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.382549195 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.38149296 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.379282547 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.381745106 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.394886465 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.406159744 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.387629202 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.382281633 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.398458329 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.382626873 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.395751774 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.402410052 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.387827423 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.382673082 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.382705295 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.391050619 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.387479015 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.389188581 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.381797921 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.38865301 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.387563185 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.38342899 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.391413833 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.388340189 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.384806141 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.38892633 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.398405623 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.41010904 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.390161502 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.388193805 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.380588186 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.388767563 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.388619042 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.384597465 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.38786305 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.390121128 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.399114974 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.39310549 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.388464957 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.383159265 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.38968814 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38470336 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.384705577 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.384702006 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.383916289 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.385039843 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.389602697 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.385171259 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.394266718 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.383382297 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.389906688 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.390860119 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.388556112 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.400687271 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.384893197 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.390173936 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.385969119 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.38594869 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.390372161 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.388314827 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.385192888 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.392143328 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.38452409 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.38960442 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.395721166 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.396630278 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.391569363 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.387169434 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.384895425 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.391844037 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.389958558 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.385641512 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.38728226 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386635113 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.392093828 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.385965189 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.39367298 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.389118297 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.385219625 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.390648386 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.385600919 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.393914198 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.39967511 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.390500706 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.383768724 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.384978701 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.386238539 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.389686474 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.391622457 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.401992977 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.394434395 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.402295687 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.401508869 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.392249771 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.392152285 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.393304015 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.399555336 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.388871364 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.392504973 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.386501386 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.393591532 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.39042059 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.394724456 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387750346 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.399863303 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.390431348 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.391753188 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.403049569 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.414117102 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.387351067 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.392345886 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.396214146 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.391304698 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.384137457 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.386586553 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.389686854 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.400190499 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.412148457 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.387474424 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.394291194 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.387766916 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.392928272 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.393895895 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.388740971 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.393040774 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.385048214 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.392229053 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.388235915 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.387798073 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.385775755 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.392251889 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.392823066 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.396357829 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.40159067 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.386411421 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.394973899 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.391991244 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.393453289 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.389457494 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390323195 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.38588531 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.385738872 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.393319543 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389615703 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.395387319 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.395904716 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.392930524 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.394258847 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.391197512 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.390250093 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.398195851 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.405605767 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.399039136 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.385159286 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.393944316 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.393858596 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.397602901 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.38973767 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.390596776 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.394632723 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.396859671 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.389365507 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.390252268 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.390660636 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.398137715 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.413905245 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.412916281 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.394507748 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.39577109 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.400412269 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.390170099 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.387029307 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.390207493 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.396637568 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.397795531 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.400507118 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.392534515 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.403648253 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.4116493 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.394977747 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.39520596 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.39847015 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.405319549 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.398738131 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.390859295 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.392136553 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.40030596 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.41694546 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.39063448 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.405666741 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.429190836 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.41408978 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.396392931 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.392405888 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.396111898 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.391958019 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.399008136 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.39167061 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.392702903 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390992667 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.391682898 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.398451356 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.401776651 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.397219364 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.391419485 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.391994061 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.398671021 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.399532943 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.391021669 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.392018708 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.393094746 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.393483109 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.393768731 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.394740511 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.399822155 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.411002013 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.409117273 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.392176785 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.393450937 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.390791133 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.401729502 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.398783418 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.411320624 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.402333941 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.394522609 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.394258803 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.400472126 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.394570504 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.391705666 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.39906411 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.39858146 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.397110111 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.390888214 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.412903006 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.403017016 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.404482239 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.398502498 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394173907 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.395623486 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.401039311 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.396368641 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.395413619 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.401965509 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.399682548 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.398718103 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.395342596 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.393883448 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.401619544 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.404268835 seconds)
  done (took 826.330836153 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.393005181 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392575098 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.392019459 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.392092476 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.391787826 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.393392811 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392267938 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.391402857 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.392539104 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.392631656 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.391424268 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.39169159 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.392766175 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392470004 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392159736 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.393518064 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.392217861 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.392213551 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.392754247 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391870291 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.392615957 seconds)
  done (took 30.567521887 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.396002194 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.393310683 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.392397044 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.394832396 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.392657498 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.396158359 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.392960075 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395558982 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.395527022 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.393794947 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.395819911 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395596266 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.3931661 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.392932545 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393880691 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.397318865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.396709502 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.395108809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.395072689 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.39275676 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.396896908 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.393832224 seconds)
  done (took 32.011129195 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.397310101 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.397804645 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.400852186 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.39298818 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.39664868 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.393126056 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.397550386 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.396334614 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.398171073 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.403327708 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.400751325 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.402201471 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.408816511 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.403462826 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.404272991 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.398037991 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.541465254 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.397536877 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.398505502 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.398291518 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.394159883 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.407751621 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.394930288 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.393908318 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.401093219 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.397445545 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.39824674 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.397075884 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.397386226 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.403225661 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.402352502 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.397716809 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.401558707 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.403960988 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.401243204 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.402980401 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.401143625 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.399710163 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.396534342 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.399335177 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.412859217 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.421003542 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.398297587 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.411435985 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.398956369 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.397942104 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.405870967 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.409122687 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.396964433 seconds)
  done (took 70.101758963 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.399649845 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.39961375 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.39753334 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.398158028 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.398382218 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.399448936 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.399292143 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.400909972 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.396151278 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.396637158 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.399511388 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.397475955 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.396742595 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.399361653 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.399699496 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.397333674 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.396963294 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.396377524 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.397243426 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.398565107 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.397298128 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.400630072 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.401387651 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.398069956 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.399932181 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.397329198 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.397948023 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.399996113 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.397193133 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.397418067 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.400985547 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.400925279 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.401099609 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.399358675 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.397632317 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.400618796 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.400524317 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.397797697 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.402199035 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.398338164 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.400125985 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.400404066 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.400475243 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.400081935 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.398861673 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.398563823 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.39903068 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.39800859 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.399211702 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.400319669 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.402179407 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.400620916 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.401704764 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.400013881 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.401740814 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.401784397 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.399522449 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.399447975 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.401851467 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.399216539 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.399547961 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.402559897 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.400902699 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.40245182 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.402099963 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.40036901 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.400092247 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.40130741 seconds)
  done (took 96.498276551 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.401608323 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.402412572 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.403199675 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.404017787 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.402838079 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.403568602 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.405771601 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.403231936 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.403079904 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.403206316 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.402196677 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.401870384 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.402811846 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.404377415 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.399652162 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.400123106 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.399801775 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.400333197 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.401251102 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.400468068 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.401315902 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.398323623 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.397845997 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.398933735 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.399675696 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.39930362 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.398453667 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.399812034 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399616384 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.398214429 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.400096097 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.398874971 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.399056118 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.398588686 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.401617814 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.397483141 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.397849273 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.397192283 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.39799374 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.397893444 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.397523217 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.398446967 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.398408949 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.398413615 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.397689968 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.39831119 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.397915532 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.399853921 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.397150673 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.396904939 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.398014112 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.397805263 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.398950978 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.39764716 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.397904683 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.397437967 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.397717331 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.39815366 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398551772 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.399702768 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.39864164 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.397354981 seconds)
  done (took 88.120617786 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.396625273 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.39662604 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.394154092 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.394408867 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.397342301 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.394930112 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.396323475 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.397025485 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.398085355 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.397672968 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397405171 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.395351326 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395556182 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397857871 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.395861923 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396238549 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.395308157 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.3948923 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.399309593 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.395218993 seconds)
  done (took 29.256555109 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.396157703 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.399503051 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.395707315 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.397074432 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.398600022 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.396306092 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.398629755 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397129577 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395396396 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.399340006 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.399574056 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.399723912 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396772187 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.396544281 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.399155322 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.396134821 seconds)
  done (took 23.693003872 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.396699055 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.399294088 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.399929932 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.399485356 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.396505108 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.395931091 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.398576962 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.396317112 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.396976127 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.399718056 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.399197471 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.399189622 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.399242455 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.401169317 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.398047448 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.400143778 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.397029537 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.397265798 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.399782212 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.400507485 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.397427089 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.397296281 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.399800242 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.399510759 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.398491352 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.398168239 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.397804007 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.398314963 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.398315956 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.400051347 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.397356957 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.398393851 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.398431667 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.397668418 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.400099542 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.398585502 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.40047028 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.401283078 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.400107338 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.401252321 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.400399229 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.398256654 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.401382258 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.401247382 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.398658999 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.401009616 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.398669173 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.39906385 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.399069917 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.398775302 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.401621268 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.401978549 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.401844012 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.402033279 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.401264105 seconds)
  done (took 78.288934942 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.402050921 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.402599781 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.399551039 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.401317171 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.402333343 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.399141047 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.402171371 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.399412884 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.399738856 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.402061449 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.399810345 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.40190462 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.399256668 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.402663315 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.400316843 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.402144121 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.399774038 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.399464366 seconds)
  done (took 26.551440885 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.400824617 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.400496196 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.402569523 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.400469576 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.401473665 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.402596468 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.399905454 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.402353387 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.402527624 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.401590079 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400737047 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.403092571 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.403197283 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.40368993 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.400482793 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.400266571 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.402921094 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.40383083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.401496802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.401495758 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.403249106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.403228583 seconds)
  done (took 32.178494934 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.40840104 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.408332568 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.426590663 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.453244133 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.441183072 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.408678834 seconds)
  done (took 9.882440165 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402557322 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403948387 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.402713066 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406285443 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40398502 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40193231 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401788204 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40235654 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405017226 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402371281 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401533386 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40493834 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404978989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401645924 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404947471 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404203779 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401902204 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402104537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403870064 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404751099 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402980789 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405291882 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402378427 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402584707 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402553622 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40270167 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405606491 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403380702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403437988 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405455053 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406697848 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403780215 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406791285 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40424175 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406086125 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405656229 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403617389 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405747586 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405545477 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402511473 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.406977798 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405615324 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404741264 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402937115 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407673632 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403750301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403960829 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403886313 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403881303 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406620111 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406915044 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403796873 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407056836 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40684294 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406989022 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407117118 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404865338 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403969098 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407054063 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405375929 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40388647 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40685041 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405893149 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404807441 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406659976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403782615 seconds)
  done (took 94.035977459 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404217092 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.404419521 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405019124 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406111625 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40483996 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405209153 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405462741 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405052935 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405140137 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405669027 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408862638 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405114791 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405074163 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405536381 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404985175 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405278656 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405701218 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4055502 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405499794 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409146172 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406191627 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406763769 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406114043 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40646304 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405901253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40858384 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406767448 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406401594 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405763138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406589653 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405992632 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406524605 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407124211 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.406635861 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406191046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405946815 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407211599 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407125894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40793813 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409470568 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407101043 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409435001 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406577996 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407610155 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407515367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407068659 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407339261 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406682211 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407490963 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406629298 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407347485 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407828693 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407715046 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40680182 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407272847 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407645393 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407530565 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40712159 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407421128 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41119551 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407642961 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406888017 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411453651 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40758833 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407460704 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407995787 seconds)
  done (took 94.190478837 seconds)
done (took 1921.142813335 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.407723202 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.481872899 seconds)
  done (took 14.232856441 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.577956823 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.530338989 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.413367283 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.430786031 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.414272441 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.421141377 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.408044779 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.413685158 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.413960111 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.413906025 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.414120697 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.606845194 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.415182755 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.413460815 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.413314127 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.507207753 seconds)
  done (took 44.560597736 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.417042591 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.418185103 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.454886261 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.417820597 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.416794849 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.461489565 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.488943969 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.420694989 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.602756429 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.465966143 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.837786479 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.417993149 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.417656735 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.717736459 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.452806123 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.463038795 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.701646138 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.840157383 seconds)
  done (took 28.757138344 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.890736392 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.441822456 seconds)
  done (took 9.678366674 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.442144052 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.440225814 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.451873076 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.41668335 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.411565451 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.451972551 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.413365007 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.432290878 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.429020741 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.443634632 seconds)
  done (took 65.683998895 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.439286525 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.417908523 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.418547826 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.416567244 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.40981266 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.409555227 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.416987876 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.414991301 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.249032578 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.551914916 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.440322272 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.424173873 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.418535501 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.420419932 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.412573766 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.456320009 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.601005994 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.412464612 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.411172342 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.424046559 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.418756025 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.52028572 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.462244384 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.413458908 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.553063494 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.273862057 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.420262296 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.425626439 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.580208221 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.412239033 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.419142911 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.41970372 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.421665944 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.009261091 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.933301049 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.424632431 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.462301146 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.427441879 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.413080066 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.55413254 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.419986981 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.425522281 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.412629702 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.904603419 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.578732081 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.538110233 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.712804478 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.420692385 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.420486425 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.486921444 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.419720778 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.421532652 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.451560387 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.197524887 seconds)
  done (took 116.688644978 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.420563015 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.903534849 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.585699657 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.430913538 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959007405 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.898585337 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.41174409 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.71549103 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.413059878 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.916941335 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.712509948 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.795893274 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.412654825 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.414993505 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.415028311 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.415942488 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.690960004 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.747376263 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.41361939 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.418279843 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.467831423 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951299325 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.65972533 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.493016947 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.45603014 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.892903979 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.65911877 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.79610392 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.416718523 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.413532491 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.733642826 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.421468091 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.414609174 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.415473715 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.703322444 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.784042046 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.76361037 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.414661328 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.424289074 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.418217174 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.444527439 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.889254844 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.772408959 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.673025912 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.799388759 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.906995713 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.415764128 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.414781402 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.422918515 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.626338097 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.666126848 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.94069993 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.663863247 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.428420999 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.70846378 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.414388535 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.473615531 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919382841 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.762741809 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.790471571 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.467168328 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.416118999 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.414596263 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.989255828 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.417021033 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.778081621 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.812825196 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.416461485 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.778254731 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.78090441 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.766574592 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919833724 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.460776547 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.420906695 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.465855273 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955896285 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.737400049 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.918931542 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.454785809 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.416577112 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.763818456 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.419157989 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.717119717 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998630184 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.933685047 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.473483355 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.443096795 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.417104668 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.919644206 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.917885478 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.666405185 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.803521703 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.717157137 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.448770694 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.418553247 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.418272645 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.425970427 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.673271009 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.431549651 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.778903844 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918588515 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.194920717 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.466709519 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.991299013 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.676013527 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.4320214 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.418151535 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.419816437 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.642229886 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.496113569 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.441315818 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.419003026 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.920876521 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.290893937 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.719345681 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.163942246 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.740281816 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.419650854 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941867056 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.418506151 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92288569 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.450725256 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986156212 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.698263981 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.47995686 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.646921193 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.805118664 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.433127288 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.938816895 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985367167 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.663224673 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.934986317 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.225706413 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.422309929 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968375123 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.426226821 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.439502953 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.60659975 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.44181063 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.699198186 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.435525565 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.946070788 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.459677074 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.713324808 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.720290375 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.9526586 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.47971406 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.745412227 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.428642001 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571106613 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.440387709 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.452970787 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.62217658 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74985829 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.421591294 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.000042525 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.420912646 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.586225021 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.993069987 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.46101241 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.747221994 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.420249463 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.424946656 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.772431576 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.46307216 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.06364942 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.424064196 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.719915961 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.434960044 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.880874038 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.421629221 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.98956645 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.646933501 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.444098817 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.432283904 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.227281796 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.42231726 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.593426698 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.598758427 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.862256663 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.424309652 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.898691097 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.422979441 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.678833221 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.435407963 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.42609969 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.774776821 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.43987488 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.427200997 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.444773668 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.421690498 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.423853026 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.90926192 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.466810364 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.14448089 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.580497649 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948456844 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.734175133 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.945040406 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.484870825 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.444135815 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.948528713 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.443859952 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.747341132 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.4228422 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.466038844 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92484711 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.426050188 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.955252602 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.967891293 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.448570091 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.732095064 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.424321566 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.472053185 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.424147011 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.689971451 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79384542 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.42344348 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.425943487 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.666109996 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.684364199 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.646474777 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.4426905 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.462039304 seconds)
  done (took 872.67000221 seconds)
done (took 1153.614627602 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.425008881 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.423997653 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.409632683 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.425346364 seconds)
  done (took 27.043351528 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.432300968 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.43086134 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.428462414 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.430460226 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.429983507 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.43172498 seconds)
  done (took 9.945454229 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.608319311 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.423382576 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.425425152 seconds)
  done (took 19.817129623 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.671052906 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.746983044 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.832077853 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.734521007 seconds)
  done (took 11.346418887 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.430299136 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.430170789 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.429385409 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.430682204 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.433933003 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.434435523 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.431072355 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.431912181 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.435426723 seconds)
  done (took 14.246164749 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.550004939 seconds)
done (took 89.307290749 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.424867902 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.286816436 seconds)
    (3/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.710093574 seconds)
    (4/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.237033179 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.425574919 seconds)
    (6/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.567544763 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.442201861 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.463316579 seconds)
    (9/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.905610876 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.448261149 seconds)
    (11/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.621729082 seconds)
    (12/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.79661292 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.521616658 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.159179942 seconds)
    (15/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.442782723 seconds)
    (16/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.507448057 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.448556281 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.72243051 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.450588973 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.620880408 seconds)
    (21/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.468064763 seconds)
    (22/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.093167722 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.496516609 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.856105624 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.657692038 seconds)
    (26/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.617143923 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.527750253 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.429299333 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.450729056 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.52324119 seconds)
    (31/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.53263446 seconds)
    (32/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.420060792 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.472381434 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.323236717 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.473813806 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.900511922 seconds)
    (37/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.822612124 seconds)
    (38/309) benchmarking ("sort", Float32, false)...
    done (took 5.450724137 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.726504639 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.884774047 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.769474058 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.428344323 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.92943092 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.413439243 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.457754307 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.394043335 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.293969449 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.086179228 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.852070113 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.11180822 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.536588422 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.298302567 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.68673876 seconds)
    (54/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.819865724 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.994976034 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.907115847 seconds)
    (57/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.498468735 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.412584348 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.595032114 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.01128832 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.464441712 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.429753773 seconds)
    (63/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.648743198 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.482713851 seconds)
    (65/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.64448423 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.33699345 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.023172153 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.063492675 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.490040481 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.062513241 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.758409478 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.131647111 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.42163357 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.454623791 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.388204361 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.429788167 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.851932107 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.840968875 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.71218952 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.065892555 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.430568513 seconds)
    (82/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.094442469 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.782406349 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.085992972 seconds)
    (85/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.431407601 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.52879249 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.4294946 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.652620127 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.424731459 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.314127196 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.421446033 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.415391335 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.491152105 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.935865496 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.046942935 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.04811993 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.3144612 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.448349051 seconds)
    (99/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.418887297 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.887207765 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.432906905 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.533186357 seconds)
    (103/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.825911413 seconds)
    (104/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.796940028 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.86829512 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.403139414 seconds)
    (107/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.101320481 seconds)
    (108/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.227248726 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.914454975 seconds)
    (110/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.524089736 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.443929546 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.860799566 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.642438887 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.163795271 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.447439252 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.432274492 seconds)
    (117/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.446385989 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.530715283 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.554879053 seconds)
    (120/309) benchmarking ("sort", Int8, false)...
    done (took 4.534936177 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.750681797 seconds)
    (122/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.063666858 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.514123969 seconds)
    (124/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.487601161 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.9464799 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.452751599 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.250529817 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.691545395 seconds)
    (129/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.78892836 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.335233481 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.206651086 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.230897018 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.689342767 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.52687898 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.432512491 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.847762977 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.314038476 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.965687061 seconds)
    (139/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.445960263 seconds)
    (140/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.290947259 seconds)
    (141/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.455017968 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.532103931 seconds)
    (143/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.511341933 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.791990737 seconds)
    (145/309) benchmarking ("sort", BigInt, false)...
    done (took 6.432754258 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.787580176 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.254770837 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.455986779 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.415984351 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.43969106 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.752227885 seconds)
    (152/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.556723097 seconds)
    (153/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.434752157 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.832335856 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.108783096 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.457714092 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.859047806 seconds)
    (158/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.471308915 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.453797605 seconds)
    (160/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.942455046 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.535325808 seconds)
    (162/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.54888956 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.41684243 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.517179907 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.25983614 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.426842974 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.847839782 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.540135958 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.869692016 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.448833047 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.798888748 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.829699488 seconds)
    (173/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.448121849 seconds)
    (174/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.860098268 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.41748047 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.567319862 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.05338466 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.234872351 seconds)
    (179/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.603238742 seconds)
    (180/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.994756788 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.436048089 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.552055314 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.45801406 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.867872273 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.461219823 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.659237504 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.48956831 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.43743327 seconds)
    (189/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.439640293 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.929209374 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.766850075 seconds)
    (192/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.829933242 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.489363628 seconds)
    (194/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.230556699 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.45425427 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.180363329 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.632234744 seconds)
    (198/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.459407731 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.148568623 seconds)
    (200/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.177599088 seconds)
    (201/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.1140595 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.439818792 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.536567432 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.17046951 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.67522686 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.479282481 seconds)
    (207/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.09456838 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.484163718 seconds)
    (209/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.459737093 seconds)
    (210/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.085306022 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.506467458 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.443113902 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.437669525 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.500291453 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.542288161 seconds)
    (216/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.419426669 seconds)
    (217/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.898227338 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.025096037 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.456559708 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.259370296 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.394396923 seconds)
    (222/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.341988288 seconds)
    (223/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.461600734 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.890172087 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.438143447 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.403643027 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.48778069 seconds)
    (228/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.500208672 seconds)
    (229/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.520000439 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.428396886 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.808553343 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.452453746 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.952674324 seconds)
    (234/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.461373778 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.954814669 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.072544503 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.458256701 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.997186029 seconds)
    (239/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.628560805 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.450506056 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.415971812 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.460898032 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.049019088 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.557984304 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.421180179 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.436339034 seconds)
    (247/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.448800114 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.903124325 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.927514735 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.594380826 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.660754805 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.455766725 seconds)
    (253/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.498724042 seconds)
    (254/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.160848709 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.984864203 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.442833269 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.441403428 seconds)
    (258/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.115793904 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.421988333 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.522666938 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.463142796 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.801766607 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.538402703 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.521374404 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.702620465 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.454861592 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.636734481 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.455934516 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.821031123 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.111563342 seconds)
    (271/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.629678083 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.545864997 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.831424277 seconds)
    (274/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.928746189 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.767296012 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.322748873 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.811331786 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.307663604 seconds)
    (279/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.681409788 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.435170578 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.453921663 seconds)
    (282/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.562724186 seconds)
    (283/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.519928478 seconds)
    (284/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.561387694 seconds)
    (285/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.422423523 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.561271963 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.513464265 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.520497794 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.546835026 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.304105241 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.621113847 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.449692951 seconds)
    (293/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.365571275 seconds)
    (294/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.424417698 seconds)
    (295/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.442741845 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.479333076 seconds)
    (297/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.520279712 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.523431482 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.441448425 seconds)
    (300/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.050112814 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.570508721 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.416311586 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.474732848 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.034766032 seconds)
    (305/309) benchmarking ("sort", Float64, false)...
    done (took 5.770057449 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.459823947 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.056664232 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.480957688 seconds)
    (309/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.451374223 seconds)
  done (took 969.523475059 seconds)
done (took 970.886095472 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.47212229 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.466317795 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.450902684 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.470636404 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.561846887 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.479901343 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.46159304 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.452646557 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.498339579 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.499776654 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.45064955 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.479300376 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.451360085 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.45082506 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.44980082 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464924238 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.520482481 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.452239481 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.467990721 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.46222931 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.468197994 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.450195821 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.500173665 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.48029548 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.454241761 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.455441729 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.455233847 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.470637058 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.563824463 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.455368573 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.455404041 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.463666484 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.520577931 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.449146985 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.448128434 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.471072389 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.466014296 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.462799884 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.456659528 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.4840814 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.949925717 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.453992553 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.453252359 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.454126453 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.453265936 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.458647791 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.452744041 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.458764158 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.465673183 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.466279442 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.943368038 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.468654576 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.458467915 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.454300302 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.46305805 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.453204457 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.457400771 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.468706501 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.472733158 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468576478 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.516352373 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.457359066 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.455666099 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.469721697 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.46207481 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.985179333 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.449238432 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.457192706 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.95508197 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.460148331 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.98674031 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.462948347 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.456336816 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.468611845 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.486057042 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.526719217 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.449587034 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.453896041 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.462532751 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.453688484 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.46406569 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.467814892 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.461186707 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.455887506 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.469363926 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.484410851 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.46538503 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.455917681 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.465674994 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.476107171 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.46373179 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.469668051 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.459005843 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.450579551 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.464488432 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.459462869 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.458912896 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.458361912 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.4600092 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.466474304 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.956630567 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.472917295 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.452364154 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.452827381 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.4557536 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.469700371 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.958372238 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.457093592 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.478629283 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.503772859 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.457963182 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.522472937 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.459257326 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.473095661 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.46643982 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.459897964 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.452092028 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.522210068 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.951868701 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.471479129 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.459455532 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.45603359 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.47317518 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.458959944 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.453205316 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.534090332 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.457912225 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471439665 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.578742575 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.467742389 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.488738922 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.455938621 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.460567159 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.487121181 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.471902525 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.490186209 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.46129633 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.473292075 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.474380485 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.454739955 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.468779573 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.468798103 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.458915386 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.465016977 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.451236697 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.486723668 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.470384093 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.472099224 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.479735439 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.578961797 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.455872703 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.524545348 seconds)
done (took 244.815873061 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.521595767 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.457955422 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.554735346 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.454499893 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.562439301 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.558529647 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.452559767 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.45267853 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.452540728 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.836502241 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.451971829 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.451949115 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.452165533 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.4522727 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.542218801 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.455542261 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.451935028 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.797625396 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.456462717 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.530573719 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.45104893 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.452799624 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.455327213 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.874660228 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.451916615 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.457432725 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.53099379 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.45524972 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.814244739 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.45543503 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.459165235 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.808936312 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.550962551 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.473208796 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.465529725 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.462323469 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.56220157 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.474535423 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.540856418 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.539796958 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.559067456 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.495256763 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.456926523 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.453794961 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.459813627 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.458388166 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.454777232 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.482737516 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.460590124 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.454179251 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.801148796 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.466310916 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.462946667 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.454657164 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.45408544 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.47733675 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.455070728 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.457936231 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.551941045 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.457534829 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.526079694 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.843709305 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.838854181 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.458806061 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.461842709 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.456147866 seconds)
  done (took 156.828499978 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.527909382 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.538824826 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.579536281 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.462165404 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.513496366 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.584713637 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.462245145 seconds)
  done (took 12.055843593 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.467929637 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.457158975 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.51223456 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.512325402 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.459137606 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.613466112 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.458439544 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.474751864 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.455721493 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.51438302 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.46047653 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.460038966 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.465449659 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.456073477 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.512196388 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.474155621 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.577138149 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.464085643 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.459674428 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.619944179 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.456043538 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.465113491 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.515896662 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.474747256 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.461741806 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.469791228 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.046813263 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459087423 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.456215232 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.459680687 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.456990133 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.503984533 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.460011784 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.462646646 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.456651459 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.579509508 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.459771461 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.457981554 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.458610448 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.46049525 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.459172136 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.459645841 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.459594098 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.457209083 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.459194088 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.487459681 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.460854533 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.459392568 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.460024079 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.46152883 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.517618185 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.461433913 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.458054185 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.457926959 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.520281022 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.466578834 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.461392899 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.459531638 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.461372574 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.457413582 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.62239844 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.513107788 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.461551211 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.514288074 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.460712848 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.461467816 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.461301362 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.462112876 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.52092328 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.461893878 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.512069593 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.459260691 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.624166684 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.490666679 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.462879897 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.46781628 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.468522921 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464134078 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.46583902 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.47360986 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.460294131 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.467543133 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.473590484 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.460677352 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.459227654 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.574109222 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.576479117 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.459996044 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.479411467 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.473808179 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.460525635 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.520306076 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.462639128 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.459553218 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.519418338 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.582193878 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.520265245 seconds)
  done (took 165.872106207 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.472010778 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.473849664 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.467675832 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.483212963 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.467732816 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.466595034 seconds)
  done (took 10.222737614 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.470833066 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.465653424 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.462165639 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.463266313 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.463424993 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.466427057 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.464324943 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.470531276 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.468492451 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.465845774 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.4659374 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.466220041 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.465944158 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.465610993 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.466092137 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.464423502 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.464943206 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.461246078 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.465432062 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.464550451 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.572983683 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.464998481 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.466122543 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.469773178 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.470669411 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.46429081 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.475544181 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.464559583 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.464465193 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.477539881 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.467913069 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.46701756 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.472890874 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.476268544 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.469988849 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.471174639 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.469757649 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.466678873 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.463334153 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.932872247 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.468441431 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.465999299 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.465774713 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.467595026 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.472388106 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.47484756 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.472034554 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.476097267 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.467134671 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.470033969 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.46895323 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.46557273 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.466464158 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.468181608 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.474228686 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.474943369 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.474213625 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.466519039 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.467033636 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.473386373 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.468592938 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.467961708 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.473695353 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.472833402 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.464425198 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.471202799 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.472477872 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.471935532 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.467246607 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.467167843 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.468435578 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.465059249 seconds)
  done (took 108.685818336 seconds)
done (took 455.050013187 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.765475122 seconds)
  done (took 8.160127721 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.704764723 seconds)
  done (took 8.102714163 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.351104999 seconds)
  done (took 22.754725472 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.558849733 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.518808972 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.49222778 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.471701906 seconds)
  done (took 27.438840485 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.043129068 seconds)
  done (took 8.439648326 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.458366475 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.469364705 seconds)
  done (took 14.3246943 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.80304267 seconds)
  done (took 8.200310897 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.115204035 seconds)
  done (took 8.517860084 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.475837349 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.46394917 seconds)
  done (took 14.61018421 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.454555277 seconds)
  done (took 7.851379471 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.151883744 seconds)
  done (took 9.549077344 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.473467765 seconds)
  done (took 7.872955017 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.538179113 seconds)
  done (took 7.934581526 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.75824967 seconds)
  done (took 10.15557767 seconds)
done (took 165.310242409 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.464889013 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.46561793 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.463234656 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.462575551 seconds)
  done (took 27.252630531 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.500911814 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.513361504 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.503030165 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.510480002 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.502109985 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.500165705 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.493299955 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.492511144 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.511447691 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.503434108 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.502501773 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.503205867 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.500438876 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.493976979 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.502898783 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.503300557 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.513405263 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.502280055 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.493863164 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.50506702 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.468701342 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.511993431 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.50367324 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.467105631 seconds)
  done (took 37.401672549 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.672405759 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.545552695 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.62819373 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.527391704 seconds)
  done (took 7.770955132 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.52135452 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.521822469 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.533524602 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.573698102 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.607044821 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.532633108 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.491994536 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.490090377 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.475284393 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.52385142 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.597336869 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.537555199 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.643478413 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.468759848 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.657779898 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.468749277 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.46911606 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.5216854 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.574064617 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.592763165 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.468999105 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.521184553 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.526759069 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.539102903 seconds)
  done (took 38.257421509 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.468307238 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.477767304 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.475081061 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.469102883 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.470242037 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.469600267 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.474888722 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.470185292 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.490012222 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.469732479 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.467207976 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.468245584 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.469117642 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.468317419 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.468613646 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.481701241 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.482695948 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.469054444 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.472428321 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.475021091 seconds)
  done (took 30.857255161 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.467557057 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.323052632 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.820974537 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.728412354 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.468479873 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.466333765 seconds)
  done (took 28.675068519 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.550570565 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.685604637 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.474449564 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.860187259 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.938873045 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.474423304 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.476571616 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.725224801 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.056414211 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.074712263 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.534724489 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.534357921 seconds)
  done (took 21.787999157 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.478665033 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.468233044 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.475587896 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.484497941 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.536531529 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.482939859 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.481935132 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.468592399 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.538625097 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.542501247 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.481945139 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.538777507 seconds)
  done (took 39.381653381 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552352195 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.517437663 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.467068567 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394096473 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.915464344 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.678259146 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410561098 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.963047594 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.471197267 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73983242 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475600846 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555857393 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.726157059 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467041798 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.465545961 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.59511031 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699609381 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000133493 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466355004 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.791028871 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493647017 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.47907751 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.986782978 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.498341073 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.679207484 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.604245536 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.726267907 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467166299 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772823274 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.481786741 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477544128 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.466168672 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741439553 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175783551 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561643586 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477427639 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.429760465 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.181446469 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.46611166 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.8686576 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.471396503 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.468831645 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478012687 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46838343 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.40431132 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.472299196 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97678353 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.476677571 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.180092953 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.467164629 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479088703 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562686638 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.471478871 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.286297786 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.647902255 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468175867 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.466513604 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479171025 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043390733 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19059254 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.482678871 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.40546981 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.643735281 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.751802612 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167025373 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.5692311 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.472976095 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.473413968 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455059136 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.796092923 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485376021 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.808766206 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.491026978 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.131370626 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269976024 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.480046868 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450594957 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059504696 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47349137 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.403994463 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699819295 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46989956 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411241581 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.418858166 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.404716063 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250683401 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478877119 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.980957237 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483315142 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966217528 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.483740293 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487531514 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493325475 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.69544849 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.354322305 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469857039 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.470288588 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606642394 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491689997 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.969717453 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459212562 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.473298342 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730480274 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.682773287 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480188601 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.593230739 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721710696 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476885732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.489606127 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.470746631 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.484884401 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.138612355 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.480457054 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356313253 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487913463 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.470906807 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286390241 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473930989 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.571794442 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.47144102 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746694989 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.333469177 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474274404 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553663178 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.48098063 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.472560523 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899811471 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99564911 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.472655066 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.474858185 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.480432573 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.486258324 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.473543886 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.503602187 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.474884257 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472307747 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.473321485 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.697371267 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471676631 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750873906 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408091241 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.81059479 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575146656 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.696390708 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.758849033 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.472069301 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.737382362 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472964559 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.475641661 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487187095 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492577027 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57217044 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495497314 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.486578304 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.73548294 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.47688165 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.477992436 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.830837935 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.474467438 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477035966 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.481046996 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.05795038 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15447195 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444906067 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.478654758 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370434802 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.486977294 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538318899 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.479820571 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484738445 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.439584475 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.527650848 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.481225075 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.486276838 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699675114 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485311332 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.814327794 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555486501 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.716800315 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149791643 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487117447 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.410078002 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.18583601 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.16803452 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475178398 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.411882453 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.474287382 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486734596 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486347103 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.808290683 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.147602424 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475621623 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.836815306 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.484549842 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486874381 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.480412928 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474863333 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.414769346 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.215787436 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.492941901 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.490486757 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619732358 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.489584106 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.410455456 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.480368182 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.482331721 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.474985321 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.476624892 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509286269 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.836261261 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099524767 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742300412 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.406660011 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490150748 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.943933661 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.511288341 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.481883506 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480134414 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479841032 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.495574684 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485720854 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.488042798 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.919613788 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.160607912 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048323901 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325633065 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088802176 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620592236 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.491380177 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.480803725 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.981901121 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414810974 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045093315 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686945502 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.984876964 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502789459 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721970658 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.763976735 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299572899 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48799352 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708303857 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.540196725 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.490118685 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489778957 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.690204296 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512923499 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.488252748 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45880656 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.766134515 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768095449 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.481717049 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556670344 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983290528 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480696231 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.501662284 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.482583614 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.925310622 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677616596 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.198762877 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.723309974 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.483545493 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.488071431 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994788763 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.483352379 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.711310822 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182566706 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.48754139 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.727209738 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421973952 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.489675591 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.490277893 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.482434288 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.917329061 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.478724476 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.73574862 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490719458 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414643535 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.480436197 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098423265 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.335283889 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.486128478 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479602298 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.300935832 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.492529243 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794155836 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.486688708 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.412466707 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486215885 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.414752598 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416054395 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.173413662 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.48582295 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452500668 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019272105 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.595409075 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.647222143 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.501772008 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540560979 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.739925048 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.495840939 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156446942 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7100267 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.517164937 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505028067 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.582288068 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481519335 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.48427403 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.483193472 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.71861491 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.066685412 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.707610367 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.509414588 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.387857092 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.484761344 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.696803058 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.481758162 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.49864567 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756340468 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.194650992 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.482911467 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322681642 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505355646 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.481718145 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404086292 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.656538224 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494122627 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561252783 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493623709 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.492939885 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.49355717 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679386679 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490231384 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.484485423 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.497711448 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575525887 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.573557543 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.411312032 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.487697693 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172417782 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303977665 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159450263 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495421826 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.48137903 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483388882 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451049097 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633102121 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.713749928 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757237305 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605038857 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.708491176 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507604885 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490685286 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484282822 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699626345 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759063477 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384271278 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.497162089 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.499839743 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.484554603 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495465115 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.697240826 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02347463 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080914156 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606249108 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.498821973 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991127977 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763927535 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484835983 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.484543851 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.080786934 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.492585456 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.936393171 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.491860135 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485025932 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647948016 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.495606266 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199185015 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.497063312 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.645383496 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.258807575 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959993499 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.746624151 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.00466191 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.496551617 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162570892 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308234337 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.750478491 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553223732 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4963568 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.599349581 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634078883 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.497807502 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.486495786 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.485199683 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708322793 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.195986288 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.497556722 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165728477 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751636136 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.483027154 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.498763322 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51026201 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.496795715 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.712532855 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284951406 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.713259336 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496785772 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.492241454 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.306213893 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164888651 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500459454 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454230985 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.490380703 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760624314 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.725585614 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506941572 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.940552373 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.199001795 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085902445 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.462962568 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509467698 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.491737802 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314313527 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163845027 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.428356221 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025716966 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.054821329 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49980777 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762538016 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.492732309 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.497905163 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76644143 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.491487361 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.490088041 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502577046 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.162657073 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315871478 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.492713209 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.888095216 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.428549993 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.836026549 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282180396 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481232461 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.497915077 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.703124753 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.491529122 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609354881 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500243153 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.486192014 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488973853 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.242104635 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.780547391 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.495447998 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.493588186 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.490180831 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.505928111 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505446883 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811608643 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491310183 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.166083399 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.842495087 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.749365553 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.504028444 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.476472579 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.493920603 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490171585 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562425037 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.760673648 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.824320288 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093557397 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.489947233 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.503747201 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49449545 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.707923597 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70297743 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.504642735 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.503772782 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490790252 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509718179 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.403425722 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.999003297 seconds)
  done (took 1681.083755496 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.542999383 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.537392113 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.520767857 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.540002441 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.512970056 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.569223397 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.508851781 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.567872574 seconds)
  done (took 53.726724984 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.500612754 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.732612729 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.528236277 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.494888162 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.504522003 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.508812236 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.974605199 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.504588429 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.504839052 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.506790054 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.506350861 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.504451707 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.185958969 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.504754822 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.51274087 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.477065581 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.503793695 seconds)
  done (took 68.388066578 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.510994724 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.884315465 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.525004226 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.490188362 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.900968601 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.507600652 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.780266495 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.5197622 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.505368606 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.81040882 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.158034159 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.54604551 seconds)
  done (took 82.568177267 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.504958113 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.503786201 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.504752573 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.503822322 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.504522133 seconds)
  done (took 8.950535803 seconds)
done (took 2127.501016864 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.745195405 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.296238618 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.212527518 seconds)
  done (took 5.936525149 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.645303239 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.693199505 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.84517831 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.833299896 seconds)
  done (took 8.446192333 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.78167015 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.889665917 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.701648523 seconds)
  done (took 6.800543471 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.037738238 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.503856306 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.568728881 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.491934192 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.494316779 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.493943239 seconds)
  done (took 20.911086387 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.498083308 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.500303428 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.497769545 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.499572211 seconds)
  done (took 7.42499982 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.478516958 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.258503783 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.479313255 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.498023297 seconds)
  done (took 19.1437825 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.244553444 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.269642178 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.24133927 seconds)
  done (took 8.184547031 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.516503913 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.340360159 seconds)
  done (took 10.285718312 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.824405509 seconds)
  done (took 3.253216437 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.628847662 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.761155988 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.720328899 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.566504392 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.73798077 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.683660851 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.288096136 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.831957141 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.554939869 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.871756537 seconds)
  done (took 31.075657274 seconds)
done (took 135.746305017 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.58037295 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.515379319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.702340974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.593007543 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.727333983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.703422237 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.79319407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.562503487 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.064135198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.049815232 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.556160229 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.725838492 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.735771041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.51223757 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.736403028 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893301081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.728044328 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.622611877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.243130633 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.4444427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.787161839 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.190037515 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.38448286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.211019237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.733461639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.655535199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.771470187 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.89949309 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.418691571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.79389114 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.654820229 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.499771385 seconds)
  done (took 199.91917721 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.499693395 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.499041258 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.516203585 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.506219827 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.499584524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.501544543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.502652436 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.515310303 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.500090401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.520668332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.501647051 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.506350935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.498571307 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.527769642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.502797564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.530785111 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.509993514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.499295828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.514671545 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.499898962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.516794211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.500574708 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.50038543 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.536362267 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.502300452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.501432083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.500189718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.499572642 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.503463538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.510650275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.504224586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.500667581 seconds)
  done (took 209.662705782 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.504659001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.502028616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.515845116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.501111616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.501306253 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.501757809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.503317259 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.521386163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.516646276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.504798629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.505955671 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.501219545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.524150182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.51661198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.50404034 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.501549272 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.512564878 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.501182117 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.506486775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.502347235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.51997164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.516952169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.502190409 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.509913645 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.502567214 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.502780144 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.525758807 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.500928804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.504381482 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.50185407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.502309838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.507636135 seconds)
  done (took 209.681793364 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.696629131 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.505700831 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.505068726 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.440984156 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.505318166 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.5052045 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.507704657 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.708657918 seconds)
  done (took 15.810594301 seconds)
done (took 636.504992542 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.91205232 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.611681957 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.710983703 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.524901756 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.39063448 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.531785956 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.526061906 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.708194017 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.05978811 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.693828479 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.813486602 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.529492057 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.962976658 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.52511898 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.791649207 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.63214087 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.412902364 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.527542785 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.859435381 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.152163186 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.795707894 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.113283965 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.708128327 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.097919744 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.962966028 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.135933795 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.341311469 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.406622947 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.525703712 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.872303663 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.3179625 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.57921215 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.596542789 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.576792576 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.627967464 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.609898581 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.583017575 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.574078052 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.719806319 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.863483728 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.139523582 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.839007734 seconds)
  done (took 102.299826966 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.498233499 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.49747194 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.496207179 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.497817587 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.498380885 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.49692518 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.496949788 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.496520015 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.498674221 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.496382148 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.496798007 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.498612758 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.49704597 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.498990271 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.496221564 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.497266617 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.498450142 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.499021002 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.497079121 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.49642479 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.497570527 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.496811357 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.497409387 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.496572677 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.497852415 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.498263937 seconds)
  done (took 40.372728227 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.51081992 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.756361214 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.944921889 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.520202347 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.513543291 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.517948192 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.599965939 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.511445523 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.516763718 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.517355219 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.673389093 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.512168458 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.549654291 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.957737239 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.516465689 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.510061127 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.510359527 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.514279338 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.767749746 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.522977745 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.600594031 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.511237601 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.601564482 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.523980649 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.518386466 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.515338512 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.519870726 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.085429475 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.51664311 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.677235954 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.39303917 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.600804763 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.039216243 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.959181283 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.395308118 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.514636532 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.511831716 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.682460877 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.518164409 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.516427112 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.600431703 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.517543373 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.958412182 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.146501447 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.533594496 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.512341041 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.109230977 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.680935518 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.785582946 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.524406835 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.981926393 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.519963249 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.512896348 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.517980951 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.784764662 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.523742742 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.516467816 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.959295723 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.52123382 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.60402001 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.51452382 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.516413935 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.775345149 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.517550621 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.771145492 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.519726696 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.525965573 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.517945675 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.973495717 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.521622018 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.17549132 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.53615514 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.513010766 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.682993257 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.776818907 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.145212916 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.520502503 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.785659993 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.057423571 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.604446636 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.524206733 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.082009092 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.608721615 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.523505393 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.517099415 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.515906678 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.515018388 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.557315355 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.60279064 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.103425323 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.168387759 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.980449916 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.606483072 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.533901416 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.520291569 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.963119752 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.515066538 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.515289815 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.953933363 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.172407712 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.537314675 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.526842835 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.173743503 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.539179818 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.607684833 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.526856459 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.96877996 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.520773501 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.559862494 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.51519157 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.525956577 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.522181477 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.606672906 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.524449527 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.515844301 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.140882346 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.70291542 seconds)
  done (took 197.84636292 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.51955018 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.512448078 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.515260556 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.512654614 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.51368949 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.519292024 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.512699242 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.514235387 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.530007627 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.513005999 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.512503633 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.513897477 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.517955468 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.515479379 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.523293414 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.521414863 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.126888253 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.513811211 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.514346897 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.512939767 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.334726968 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.515448706 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.51454584 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.513375163 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.521544256 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.521938597 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.516061962 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.516019172 seconds)
  done (took 157.335087783 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.517758076 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.133888653 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.518645277 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.67010412 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.542265112 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.515451433 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.66329602 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.584873921 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.522722297 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.514933275 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.515309304 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.850018452 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.518657761 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.074562631 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.728482035 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.66177233 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.078771773 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.519880677 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.51625772 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.515742984 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.665635635 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.527906836 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.851088515 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.136314067 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.519071228 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.135223795 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.507321274 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.518455049 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.522639819 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.138355558 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.51736472 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.848338634 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.609767634 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.588821491 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.137982681 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.081677491 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.078257752 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.676518997 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.523087097 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.51699618 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.516806433 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.507781652 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.138060285 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.521159014 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.524619477 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.129575961 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.535013525 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.519949277 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.527442203 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.516347778 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.588295742 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.588924107 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.85776859 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.144300362 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.603938612 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.539661576 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.667151594 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.896692157 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.522412916 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.082216429 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.508121822 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.137856035 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.522501602 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.507831247 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.519328274 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.52405557 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.683450142 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.664030043 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.083225708 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.525460282 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.083438289 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.685813575 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.518408822 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.519331094 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.521380663 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.139540159 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.085565816 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.684672236 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.674390668 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.738078934 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.5100582 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.523584969 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.51005809 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.611771568 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.520556237 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.137611159 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.087651717 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.522246581 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.521753856 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.522289094 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.521470988 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.718350883 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.143339338 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.614113366 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.078565737 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.871503714 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.856526224 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.522387024 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.586804251 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.52114658 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.858696615 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.523034485 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.584340259 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.961784048 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.858154185 seconds)
  done (took 180.659214654 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.783585793 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.825854582 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.619305653 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.646775117 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.078952273 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.133598944 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.700304238 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.606184295 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.62318096 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.654296723 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.236458214 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.609611036 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.719308942 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.61049948 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.257881459 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.59835463 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.622495152 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.646308973 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.644703454 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.638388918 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.140816813 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.823129089 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.688718357 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.646624326 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.591762939 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.340326095 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.29436399 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.048000277 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.703399817 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.794254186 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.059145985 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.751541325 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.30553667 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.20003187 seconds)
  done (took 71.097197946 seconds)
done (took 751.046010766 seconds)
SAVING RESULT...
DONE!
