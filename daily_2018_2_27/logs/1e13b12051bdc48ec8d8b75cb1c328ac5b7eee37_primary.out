cset: moving following pidspec: 23178
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.463718743 seconds)
loading group "string"... done (took 0.511399353 seconds)
loading group "linalg"... done (took 9.318428232 seconds)
loading group "parallel"... done (took 0.169840306 seconds)
loading group "find"... done (took 3.066278556 seconds)
loading group "tuple"... done (took 2.156074953 seconds)
loading group "dates"... done (took 1.389642735 seconds)
loading group "micro"... done (took 0.198694919 seconds)
loading group "io"... done (took 0.512284733 seconds)
loading group "scalar"... done (took 56.302960209 seconds)
loading group "sparse"... done (took 13.653338062 seconds)
loading group "broadcast"... done (took 1.30130343 seconds)
loading group "union"... done (took 11.05605005 seconds)
loading group "simd"... done (took 3.831374893 seconds)
loading group "random"... done (took 14.059186519 seconds)
loading group "problem"... done (took 2.185807147 seconds)
loading group "array"... done (took 24.145922043 seconds)
loading group "misc"... done (took 1.137173298 seconds)
loading group "sort"... done (took 3.731568291 seconds)
loading group "collection"... done (took 21.587091018 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.69819691 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126725005 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199066191 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.202088744 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.272234791 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16588185 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155045724 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.148338651 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.568762718 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.203216281 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135500003 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.354289772 seconds)
done (took 5.982505172 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.254042805 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.059742995 seconds)
    (2/2) benchmarking "String"...
    done (took 0.191333953 seconds)
  done (took 0.928954053 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078252392 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158219122 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108679286 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093723757 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093580659 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108268543 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093740829 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107744071 seconds)
  done (took 1.442374201 seconds)
done (took 3.385152306 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.487888444 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.956483001 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.505219396 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.184307809 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.301817726 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.309381319 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.264609858 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.227293327 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092385561 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084538859 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.195399693 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.420673552 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.391993402 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.956974328 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.067197953 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094918366 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.157769718 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.783228653 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08019606 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.107650477 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.508539436 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213667791 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115438586 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105146668 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185016094 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125081468 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.138349696 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101829403 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662979774 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132023922 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.206574237 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084143336 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.136737657 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.161401503 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.216691682 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110260176 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671707449 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202634932 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094326146 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099988246 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684074429 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118928054 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206738473 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105858028 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.065915271 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.158875036 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.111442353 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077637764 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091990769 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100294486 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156289933 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453232037 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106223139 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.194314853 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094369138 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698326883 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098410733 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.270510518 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126517386 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091993277 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090490176 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088473256 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154953954 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094502517 seconds)
  done (took 20.096491343 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.188089969 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.207526417 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096300849 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143729097 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142289845 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080388698 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088370397 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095443245 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.11294652 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.195854293 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.125498842 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.213303222 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07599692 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.107394937 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.164420947 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251493696 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110804 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120872159 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090259736 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093483642 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142973661 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096460684 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110818753 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094766209 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17189695 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203496598 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111761638 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122038138 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089050872 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096463621 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142282358 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148365462 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091647779 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087760872 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171837962 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122292361 seconds)
  done (took 5.408317806 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.230473254 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102765352 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249019871 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.185933012 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.126024303 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.176464291 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.191295002 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.296083522 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.234118213 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161842442 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128668806 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095200989 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079412896 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078810161 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096608782 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.801208003 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169014398 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156318073 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166452664 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113427799 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096239186 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360266721 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098719405 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084669053 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092400864 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.078828468 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.219308003 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092897058 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.577290613 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.085127141 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082397601 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.111895595 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.213988853 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112607885 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139681744 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122421908 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111983512 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084569915 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.207724836 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098015173 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094126758 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.078351096 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130606089 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113881288 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105640952 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10370662 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.13257126 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085938106 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106358186 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.044511812 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193956435 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.161488662 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101989484 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.272838338 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105157286 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096721378 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107514357 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.801184287 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099034618 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117369143 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096541371 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07913865 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092724539 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097302229 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.454875638 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102752658 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.720456321 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09459748 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.13853901 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110737836 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.113807268 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086215251 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084245577 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121317847 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084520756 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083917521 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096532783 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084198586 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078979776 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104295824 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109812833 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099924702 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078987605 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146925365 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.109567387 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104210742 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122899328 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088381498 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083861747 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127973341 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081337934 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102247227 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.183390076 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112341639 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110433346 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112332921 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143428524 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088129547 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098683335 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.277021239 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083819718 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123854906 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100311755 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125425741 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097307029 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079195758 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100267442 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078490868 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080207471 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158259692 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088656269 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08085531 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102968769 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092630223 seconds)
  done (took 27.480542965 seconds)
done (took 53.664234146 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416201132 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078685777 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098261615 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079100163 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078095479 seconds)
  done (took 1.502940968 seconds)
done (took 2.231740799 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.293267636 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196147774 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086765324 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187198023 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086938202 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191484324 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160644223 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118823057 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20266134 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086301739 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18651246 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084563584 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085997242 seconds)
  done (took 2.720723055 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103098 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104733462 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101181268 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120108105 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085331084 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100804688 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118550737 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106750222 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1001482 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112013126 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085572818 seconds)
  done (took 1.872483214 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098517777 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103805486 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091794234 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116248082 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085819204 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097544245 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115490468 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106717844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098364318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112173093 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086897602 seconds)
  done (took 1.847648925 seconds)
done (took 7.170864396 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.202199675 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.441262145 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.179105332 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.244172097 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.327012066 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.294628614 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.592882517 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.200374742 seconds)
  done (took 15.34271489 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.217358014 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090912821 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091449742 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09586923 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.113470284 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090869357 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090536011 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.115141959 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090407443 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094083004 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.108943223 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095683227 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095423446 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.11028939 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09099387 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094014733 seconds)
  done (took 2.481523833 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.133540966 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114834987 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115751325 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098173794 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093221073 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11662008 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100957417 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096767968 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112377497 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094934462 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101634244 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115871768 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097080253 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093370148 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114855171 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116599563 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092787521 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114824474 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115065809 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114223538 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099356022 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095097225 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.1118243 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099335425 seconds)
  done (took 3.376428257 seconds)
done (took 21.936079076 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.140143328 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08426312 seconds)
  done (took 0.963815229 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165352784 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.182533018 seconds)
  done (took 1.093818584 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112056722 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089824948 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135110285 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102545347 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089945659 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10794933 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115900217 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107091653 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091317167 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091154717 seconds)
  done (took 1.791426862 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09437439 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094438453 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120096604 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.157689953 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115812075 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092682829 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094098879 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110793732 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097320804 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090321323 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112675631 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108481615 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094795156 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127360418 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095596705 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09446203 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116529422 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093877434 seconds)
  done (took 2.660827751 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091285625 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091176262 seconds)
  done (took 0.932667272 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093146916 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089570052 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09172714 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108178722 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089623774 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089488432 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106227635 seconds)
  done (took 1.417172341 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.511686676 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.233462365 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.366596997 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070895535 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120334063 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.314299465 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101709477 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070713745 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089670233 seconds)
  done (took 2.662613278 seconds)
done (took 12.269192206 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090594013 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.203550135 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.595736226 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.129610914 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09032755 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.14539294 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.340065488 seconds)
done (took 2.352792776 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340795961 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.177685294 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082267959 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090749167 seconds)
  done (took 1.444309656 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082993849 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097871717 seconds)
  done (took 0.942185162 seconds)
done (took 3.149413223 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.111306625 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08807226 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.106056591 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088631508 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.087963599 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087765035 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.108100023 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089527111 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087506444 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087244424 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108017585 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.088865466 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.087171255 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10515298 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088538232 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087701904 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088633993 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.105011228 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087796175 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087709132 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104725597 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088939159 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.20570943 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087591738 seconds)
  done (took 3.15667694 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109245882 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09004732 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110041061 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093219307 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092814842 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110012067 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093233058 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090557056 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109632322 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09171499 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093035457 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.11015027 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091678582 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093293623 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090238683 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110544769 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093024793 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090291541 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107626238 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093473877 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093512839 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107426997 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093035892 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092431388 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110649063 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093162302 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090155409 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107843564 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094676255 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093156932 seconds)
  done (took 3.703124343 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095911759 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085658352 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088882046 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114146454 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086618818 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089159099 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103429365 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090473408 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090068717 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088242997 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109244497 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089312512 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088340547 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106670249 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09090668 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092457162 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115692855 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089359644 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088905648 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089677306 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109089929 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088966555 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089242541 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106924269 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089926055 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086566606 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088756202 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106038203 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091171039 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088383254 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.108742232 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092675404 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089000928 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.114924106 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093471508 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088975842 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094500752 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103774898 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090573568 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085718216 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103088967 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090488835 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089380153 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093963528 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106668836 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090390077 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08886609 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.107551017 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090168543 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091649864 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.10268297 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090615714 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093109221 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090924786 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110139944 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088539699 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091661917 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106757221 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093957687 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094190875 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088338549 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.107226024 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09447957 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08932761 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121401238 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.095280786 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088771065 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.107668963 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091034649 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093745455 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10800222 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100880754 seconds)
  done (took 7.668409227 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114382599 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097558977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108059183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091219575 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08932467 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089171637 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112239245 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090024593 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090086312 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113345753 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089884634 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090152595 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108489199 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090872198 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090392617 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10760147 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09686791 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090083548 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08946354 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10913281 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089772867 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09397959 seconds)
  done (took 2.912992969 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23478914 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09687227 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138134645 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119872062 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107603848 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120345626 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094684553 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095645602 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110497009 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09947976 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099670268 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111223049 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108510497 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098568782 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116937102 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099250308 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11095109 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101030314 seconds)
  done (took 2.835654692 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104317746 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091294643 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152319822 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092412833 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092329923 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.110336924 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097430822 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111705369 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112095652 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092643134 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098801721 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108920283 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091956455 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091280897 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108873163 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092211328 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092527156 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091542839 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11546765 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096514811 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113715727 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098396242 seconds)
  done (took 3.030043543 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104851788 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092732031 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126607463 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095959736 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091625907 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108438573 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.097355933 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092143882 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09710978 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111011365 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092590095 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091009443 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124536051 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092149341 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097069505 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110190355 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093826903 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092824119 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109461489 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091404558 seconds)
  done (took 2.787070494 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.181568918 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125462441 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108150711 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113473013 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126093632 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107491167 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13265169 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109316328 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106382439 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136110866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108605088 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106943457 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132774292 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111891277 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125374944 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114954113 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113947554 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136055278 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107441076 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124258332 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119048166 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107908398 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132304422 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108051823 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12359535 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107962704 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106905049 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129298751 seconds)
  done (took 4.140960721 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091152807 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091497362 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089228702 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108223689 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090714644 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089772455 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089788105 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109215079 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090898375 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090901069 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108385276 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091451938 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090857005 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090339707 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10827882 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091077436 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089552461 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.10768674 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091867334 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090564995 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089952084 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108230173 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090644049 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090721437 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107739348 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091968295 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09049076 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089964745 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10850108 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091334901 seconds)
  done (took 3.638245656 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103018626 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099881215 seconds)
  done (took 0.983768161 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098899948 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104430672 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090042996 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109483092 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096745006 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090974517 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116677684 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097206143 seconds)
  done (took 1.585410009 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.18258782 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.205818585 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.115506851 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103068696 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.205929857 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.185559441 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129900697 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094650282 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110539824 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084701873 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.198456892 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083623545 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109174288 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089256302 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091731743 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115542544 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094370805 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099631387 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.115062822 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095137593 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096334223 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095352115 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112051162 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101386504 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085344251 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112251641 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095011873 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120247279 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090772395 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093063762 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089459154 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.110821262 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095623076 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095780858 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110177763 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.206263452 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100183005 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0883149 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110394658 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097647582 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123325983 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.111064338 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093456008 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090710331 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112380649 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.097180866 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096234066 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.109285702 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085830342 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087894653 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091900924 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105302497 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091497853 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093038257 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110647937 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099041867 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093462103 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107266891 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088171236 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087764687 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108334701 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088476951 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094122458 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.11297274 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093276037 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091850713 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109942596 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094054403 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093805258 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.110244246 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092905238 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106462727 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11092405 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09754159 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097354971 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.109649992 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090673779 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096683654 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090881894 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111863062 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096610367 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119395285 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111914956 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088209588 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086952773 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.117752807 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.093685692 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.094273801 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103918078 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100871385 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093917137 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.11238825 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086255567 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.089351222 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106285787 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.095777662 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085338477 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110310744 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092844184 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098125476 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09705665 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108869637 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093757677 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097023975 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118539523 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091235698 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.161179085 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089540764 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087897939 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.113286065 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098691856 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086520798 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110393551 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092409527 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089550762 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088377597 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.118652728 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094834278 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096913807 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.121498188 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095697029 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093520159 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.113901041 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092477127 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088425732 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.114075406 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102504399 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094110942 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.112266027 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094132482 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093935258 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109444351 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097555125 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089493143 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097634064 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110088368 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091974801 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093414949 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115704497 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093969595 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087398029 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.109348434 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09403446 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091187378 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.114723113 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093608382 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088146152 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104518775 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093389008 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087354171 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112618856 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101881903 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08840231 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.11407506 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090157884 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100608104 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08995768 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.118155246 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094585861 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.09652871 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117142024 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085328974 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089340964 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.11421937 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094538653 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089339878 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.113628359 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093561526 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099004088 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.104925275 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097722937 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085904566 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090340628 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.117215993 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094857159 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095031884 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107869543 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130468408 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102742982 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117674221 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092760864 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091658703 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116522318 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092981832 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096215363 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118029086 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098279601 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09008713 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110008466 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098868712 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089345261 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.116093106 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092442953 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096864816 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086093306 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.114539244 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085992222 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09691383 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114190328 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097678264 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097828768 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114600875 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092746978 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101338664 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109388666 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097662491 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084726023 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.117686484 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103791334 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098456697 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098060478 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116278377 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090408779 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093490995 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121483101 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095416461 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091846589 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.114717746 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087266909 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086662667 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.118564486 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096486061 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088217409 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093159077 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114069785 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094339841 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110197685 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086786655 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097076807 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095194299 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108675614 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092948266 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091548384 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111465155 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100287884 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085568063 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109407392 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094428326 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096952456 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.114035888 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.0939863 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096047686 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.117704553 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097227984 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096660432 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110136088 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101806487 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091735804 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094177964 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.110166572 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09632104 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08771578 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115034162 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094485809 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090198489 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110028085 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097032996 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099341911 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.11917943 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092833938 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097233071 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.117941008 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099584453 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090953162 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.117254536 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090556372 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087274782 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090652482 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.107284681 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095139937 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089280934 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.118339592 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092966843 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093363833 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117382507 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096289926 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090878811 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.118215203 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105686049 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08881295 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.116201457 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092441403 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092654951 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.110909842 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091267056 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095633849 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114936332 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099020505 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095941899 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109909416 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095787228 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100665033 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090824598 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.119668775 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098854816 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098833978 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110206374 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098294958 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090060343 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116580836 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088253659 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092797579 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113232971 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093801077 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091793628 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.116126452 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.097073045 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.092733372 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.117003849 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107449897 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.098043827 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103735486 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.117685394 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.097614079 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.096010151 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.118591878 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.116260553 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093000058 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.1221898 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095070926 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087617198 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.107547781 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102537241 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093020148 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.119606473 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091288567 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097851112 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099672436 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.118241563 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093961058 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101315409 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122561118 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.099697309 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098085513 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.107106922 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091678535 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096922966 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.114758334 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097442695 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096279248 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107080386 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09683126 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099821569 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116207123 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093179556 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087788755 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095576976 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119695666 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097332672 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097767614 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.116152398 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095857814 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089506012 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11821881 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099942708 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093887112 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120312794 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096122798 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097818051 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090116624 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119668686 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094892733 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088330591 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.107555988 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09176308 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100600098 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107692225 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098891893 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098680291 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.111328649 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092875975 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098357707 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090424819 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116956286 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098713348 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091110207 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124673118 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095905629 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092871385 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.119134421 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.09957969 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087403807 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113084824 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094463055 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100764627 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112654191 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099867191 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093431235 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118673752 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097937979 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098641966 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100113055 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.120822034 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087887401 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10000034 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11758522 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097008378 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091635169 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112506234 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090156251 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092530573 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.120839787 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09277325 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101720012 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.119547006 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093046368 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091565124 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100423477 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113779123 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101444489 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090388634 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116278073 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088632008 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09611913 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113366761 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100729296 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090771657 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108939063 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099911258 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.0997579 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118012956 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097984601 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100396276 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087871268 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.109044465 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097703724 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091172631 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124732006 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097447259 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092624904 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113639579 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097378397 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096287866 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121277091 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089709647 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091136944 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114619507 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097745521 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092669321 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109436597 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099882592 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092950299 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115573359 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094875778 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088788171 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092930544 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.122907237 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092955217 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090588818 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112207089 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101840481 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093503948 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111860425 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089417674 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099409717 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117042613 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101528368 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091163714 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115588823 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092139677 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096892558 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121230744 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093577812 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094116145 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112893817 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101318583 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099423037 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087936747 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113852464 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105490157 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09962428 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116927177 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097457819 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093994586 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122893375 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101561364 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09764564 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.109952208 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090446858 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093235074 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108574949 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101133238 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100858532 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11333152 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093260544 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10073162 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0986967 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.11838435 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098601798 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089479958 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122946808 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092265983 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097594119 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109278198 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089327933 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097421246 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100721514 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114685365 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095115537 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096550679 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.118301685 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090130311 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09201562 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118945336 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099428105 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100799952 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114252924 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09430422 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098136595 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12456811 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097229199 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093736008 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122394571 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102143474 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094653981 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.117142182 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099123335 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101587674 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097739231 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.12277008 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09306837 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093925024 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.122539095 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102521558 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103479214 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115292499 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089478944 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0997381 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113523911 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090502193 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098611495 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123092561 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102255598 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094812751 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112096625 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104935798 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099592622 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114939163 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094440626 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093015354 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099614405 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114002183 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099074894 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091423344 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123881091 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101887186 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101260431 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.123910518 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090360446 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099920928 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11845146 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103858299 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09691139 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.1100403 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091248382 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09838198 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101957088 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.123267245 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099845139 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099123089 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.121414124 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09654819 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095063961 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.114834193 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103966447 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100640081 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116185124 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098866769 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093252294 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095076403 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117966485 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101575286 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102007519 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116816536 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10598116 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102539918 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114717479 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093115712 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095858337 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.120578393 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09627814 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101163911 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112351399 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090866244 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100902318 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102142803 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116043747 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103926146 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102200024 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114599442 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098448194 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102931877 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121872723 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097379379 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097191336 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.120049966 seconds)
  done (took 61.938860647 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145444837 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103668238 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119600632 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098167605 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114012341 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120976059 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097455419 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099702522 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1204253 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106686992 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098529357 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118165292 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112668834 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117927522 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135826584 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108522728 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118197332 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09920546 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098178325 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098390558 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131843163 seconds)
  done (took 3.195067291 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11396895 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11142559 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129507157 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111955895 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10441635 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129832605 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108608057 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130123164 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111633394 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105500143 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13203129 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108602326 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126073393 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106522307 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10567 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127206577 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113149577 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104762242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130226415 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108756168 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126143906 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109201335 seconds)
  done (took 3.390089068 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127242451 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100573649 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095921017 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119360842 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101640309 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09864461 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122874224 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098617684 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106404837 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.112970624 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090767656 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093585809 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096308055 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119244317 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092995984 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097696953 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128735033 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102200507 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102048859 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11883981 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090624772 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098896783 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098448871 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110659879 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104047114 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102383087 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119824781 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102258107 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090014423 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100945889 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119247288 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09210354 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088730268 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110623469 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090146265 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101522234 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122161347 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099090146 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098564685 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089630154 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120499719 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102084558 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089625252 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.118738317 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099854611 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092527232 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100457646 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.11938602 seconds)
  done (took 5.837147263 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124979731 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155154956 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101743465 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125815563 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133424943 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107629383 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10071524 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127507276 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100671904 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123829367 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112772793 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111825506 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125926913 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105535111 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100522008 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126310285 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104038918 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100171664 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127606788 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101896778 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106190558 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12627683 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110710611 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132390177 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105591667 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101379516 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121711309 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105004105 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110272281 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12824822 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105756173 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106362599 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132961662 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104904063 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101621237 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125465729 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113623427 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123137782 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104500665 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10085119 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10401831 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126538185 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103786859 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.376002867 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103899708 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103394397 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123364742 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101880008 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111376949 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124280443 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108472263 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111473591 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125397379 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104090914 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103701048 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132561137 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102395653 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101309396 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.126154282 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110335192 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.121587707 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104852284 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111031108 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122379128 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106617427 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110505904 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.126365878 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10363889 seconds)
  done (took 8.963428351 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131490316 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10507034 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135848267 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113218553 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103953799 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126666857 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104697205 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104598216 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126775157 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110898462 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126270672 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.210977251 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125137662 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1099377 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126947356 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105293588 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10561497 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126662089 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105786183 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104338395 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126281325 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113021626 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104466279 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133709157 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115149472 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123363122 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106106539 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105617379 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132538836 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106145719 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11502967 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127319508 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106593129 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111575556 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136105031 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105479921 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121261106 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105871165 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104962294 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126088011 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.1018059 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112833567 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129456146 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102309885 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10574585 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127482524 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112657251 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135686648 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110239891 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110584442 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127111299 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114253565 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105166874 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127675828 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113066407 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141412531 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112815694 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112765926 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128473095 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113078546 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133697278 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120454345 seconds)
  done (took 8.181677577 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099309685 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098688413 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098886714 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120269888 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098864413 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098784893 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098433163 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121102373 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099785895 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098400683 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11972443 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098847282 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098527344 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099085754 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119749275 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099150366 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098082748 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119732548 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099292302 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099296233 seconds)
  done (took 2.932895045 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108317828 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116104205 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122094668 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106752744 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101795366 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127105794 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103104318 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101322161 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100694949 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123368412 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108224571 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129325137 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102196737 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107073455 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128981668 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10640789 seconds)
  done (took 2.642826191 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118405247 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116392818 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.198743894 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104021525 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124601068 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10808007 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101307055 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126193315 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100892812 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106236486 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126501609 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105187087 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101180013 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101691474 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122954216 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105407013 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100489433 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127042095 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102668755 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.202826074 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104996084 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103101682 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126756603 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10526502 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103071806 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128774732 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10713445 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101143205 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125297703 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102562877 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10294183 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130479414 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101031629 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105509222 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.124186046 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104610792 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102148823 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.122972381 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105241371 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102811593 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104148662 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125187844 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102233802 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102981608 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122428277 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103119981 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100007152 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128853042 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10337093 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103960524 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122663123 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106967903 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.1065734 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.130397755 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109199799 seconds)
  done (took 7.136947086 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112833277 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103548047 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13455286 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10088234 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102319754 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102937116 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125005755 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10444705 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103467462 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123994622 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104212171 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103671886 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125825506 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103522857 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102856278 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125232601 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10144824 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104060747 seconds)
  done (took 2.840382005 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106826923 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103433646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105791681 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123870812 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102773242 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10153557 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123660317 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101196353 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101325733 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124674638 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103685753 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101809728 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100550374 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12347491 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103107756 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101781125 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124551056 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101454943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10145746 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122664783 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102652997 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100931451 seconds)
  done (took 3.241430058 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112568428 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.227221448 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108301102 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.234541323 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.121851085 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.100036095 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.108198468 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.122324069 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115044742 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.09802975 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.120533 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099372183 seconds)
  done (took 2.425999866 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128729409 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138934573 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126019865 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103549433 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110150614 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129623255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10745463 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107623379 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136667432 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11628329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128138182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115537883 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114295075 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136109948 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11130848 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132033115 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107536087 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106612689 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124483218 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121657092 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107239077 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13572645 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106945124 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106843529 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129588089 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114283068 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136206624 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118793845 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106526652 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136700779 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111109919 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128151939 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115011119 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117076051 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125962028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114456746 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106616928 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142253237 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110655219 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135959646 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104192226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110130368 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134871458 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112551991 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13572957 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108388793 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111035046 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129164442 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107530148 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147661877 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111885363 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114318481 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133338271 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116697474 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134723888 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12703581 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117123732 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136645895 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111330732 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139430067 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114563781 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131989369 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115554071 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117448423 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133997562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114560293 seconds)
  done (took 8.844404345 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14176943 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104125091 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129510598 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117997386 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136544825 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107836874 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107424546 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129271286 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10842152 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104560694 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171268295 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108035124 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135460161 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115516234 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107144338 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128894325 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108015142 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115810749 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126609799 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126435087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129177503 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117255589 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114511559 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137207633 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118378053 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133965094 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109551881 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106706121 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129140666 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108635797 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112107477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131324749 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116067274 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104473553 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13756875 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10869673 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129689308 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113958233 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107296329 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133720785 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114565548 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142416649 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109993211 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107402357 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140310754 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108736578 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108108598 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127700779 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107901916 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104254812 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141589331 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11855718 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140046018 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115729802 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107801259 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133314841 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108343446 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107475993 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129354431 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112387075 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136711785 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108513167 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125958543 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130352488 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10810801 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137611467 seconds)
  done (took 8.832859912 seconds)
done (took 167.60782361 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.173068206 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.212990025 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.197373543 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155835406 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.115421914 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129415561 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126172072 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.197468209 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093599841 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092840483 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116860537 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096260752 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.160781049 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.11676521 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094800915 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095483427 seconds)
  done (took 3.036853022 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193383285 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.335964527 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.131900462 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098318713 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100285695 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098598965 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121360192 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10040853 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098494042 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127868629 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099408606 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094804105 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129109475 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096828474 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098509374 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119936293 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105905247 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098643516 seconds)
  done (took 3.125745175 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119192545 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149022426 seconds)
  done (took 1.145668984 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129154588 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.209959338 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291883287 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168698155 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118063747 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139082529 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147124053 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133304583 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.187488291 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132334827 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111512502 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096150788 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146058839 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104606521 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137945012 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097573723 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126871301 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13550276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115002362 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100147463 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145362846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10269991 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103252734 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136530051 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.177334768 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133504305 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103726351 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10237579 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123356803 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113935311 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104369133 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136922784 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110512147 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177889226 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10143752 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173662612 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105207676 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122012684 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114345464 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099106604 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125052338 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102858203 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133675448 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09803592 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103403966 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126972162 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103172649 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102177431 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129730269 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106565287 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107278513 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127430704 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.171389953 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.106261365 seconds)
  done (took 7.84002257 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.896420358 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147132543 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098828499 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.023978391 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142927159 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112399687 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.890724431 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147998617 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250208732 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.887750571 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115455736 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105795549 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260118758 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258426325 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273189135 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359209949 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.749975552 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111167581 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128815831 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162977971 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103515909 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138967606 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113672173 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.455514959 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100017712 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099063758 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126971295 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107298844 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176540887 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.0999942 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125377775 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174233753 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.290396186 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208566643 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121206506 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099540207 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098804236 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185894397 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267641477 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218819964 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188753477 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096793541 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098387986 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125950432 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115010538 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096636459 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1781324 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191021907 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19033951 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104420692 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107276731 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129639994 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10283252 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178918728 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09692878 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354485905 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381931266 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099852158 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104002516 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133169911 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264373596 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101337381 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235651343 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143491329 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214528578 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098893243 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804385669 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186176044 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098931679 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124785884 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106565745 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104664565 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12406304 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160178928 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.430203012 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106143384 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103598662 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120880857 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227348661 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100538587 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098935527 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179128324 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099617301 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127999516 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107925091 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127423059 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166568102 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270932703 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106428663 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128148139 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104932962 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131357246 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102360897 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229129199 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230561047 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175318838 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206220094 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127517341 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.158651252 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185198657 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125448317 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165593491 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127237089 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111522401 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10310801 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.246083637 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136674294 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101524718 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127739009 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105198144 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159954766 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103913822 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105420306 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.18826976 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.49067366 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187867644 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097638936 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104479521 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128383845 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179531514 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107170651 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26250118 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106661279 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185864895 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103317462 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120418427 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105555321 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183234094 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107873094 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128229641 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104947972 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108137177 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28055408 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218681427 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130505725 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245752392 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171261096 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126234934 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168944315 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127795 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164572967 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1337797 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105052529 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100353199 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833611915 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112398972 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105132944 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127255901 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182120969 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122049791 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103861153 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099773607 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097922954 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786369385 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127557935 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09808764 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101874772 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127134981 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105407247 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104847488 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127584924 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155902964 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.267876971 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108377839 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103789224 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122577367 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176629075 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102495557 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099698935 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100911831 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12333157 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107117515 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103869804 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125750522 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185857349 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15987647 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.252567198 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565371265 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100931563 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099430165 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239912031 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123419367 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328242849 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106863754 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233450246 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180804585 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096765464 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.38554759 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160175081 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206616345 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103367342 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191983536 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098192369 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12894237 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179118502 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101909313 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107424881 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178666427 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109215053 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129496002 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280282825 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101538144 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247508118 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099233012 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192259109 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102309293 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128916737 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328458034 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100760199 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133798983 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156792929 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128479786 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101423348 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.974082737 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101291439 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131077605 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105795677 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235301404 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183251455 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107219844 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129743854 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10921557 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182157579 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.22635448 seconds)
  done (took 46.420224614 seconds)
done (took 62.4359666 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.24727001 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170435985 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.343861482 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146041272 seconds)
  done (took 1.899850923 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.258511125 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162078024 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.240769795 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098626093 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.245811007 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097718693 seconds)
  done (took 2.011007304 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.169081867 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.162372855 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141322415 seconds)
  done (took 1.379604218 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207023513 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.204037256 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.343951048 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.231795008 seconds)
  done (took 1.974819781 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.269822738 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116129046 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124602512 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.223057449 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.240054509 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.203502501 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12214985 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.170691731 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127983606 seconds)
  done (took 2.545357076 seconds)
done (took 10.713185096 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.287971681 seconds)
    (2/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.373677717 seconds)
    (3/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.403514661 seconds)
    (4/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.450923246 seconds)
    (5/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.407512874 seconds)
    (6/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.332574318 seconds)
    (7/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.189409169 seconds)
    (8/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.241384418 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.368072374 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.259178025 seconds)
    (11/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.187550085 seconds)
    (12/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.12991972 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110346242 seconds)
    (14/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.284776179 seconds)
    (15/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.229071838 seconds)
    (16/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.167091313 seconds)
    (17/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.3157346 seconds)
    (18/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.145109177 seconds)
    (19/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.198086324 seconds)
    (20/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110607971 seconds)
    (21/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.272920315 seconds)
    (22/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109890427 seconds)
    (23/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078687121 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.245241272 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076076909 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.152702016 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.103841841 seconds)
    (28/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.132517065 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.15303086 seconds)
    (30/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.163572509 seconds)
    (31/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.177965056 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.147271972 seconds)
    (33/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.206037558 seconds)
    (34/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.169245442 seconds)
    (35/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110976704 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124474453 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083697685 seconds)
    (38/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.14129642 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102833527 seconds)
    (40/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158335176 seconds)
    (41/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.131308445 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111654899 seconds)
    (43/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108493507 seconds)
    (44/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.226585271 seconds)
    (45/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.152890992 seconds)
    (46/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.307087005 seconds)
    (47/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109465416 seconds)
    (48/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.214110371 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102654673 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.213131935 seconds)
    (51/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.190543551 seconds)
    (52/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.275015517 seconds)
    (53/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.31161912 seconds)
    (54/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079183197 seconds)
    (55/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.172335876 seconds)
    (56/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136585963 seconds)
    (57/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077747066 seconds)
    (58/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07942096 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.142090304 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.188784677 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102924788 seconds)
    (62/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.107972345 seconds)
    (63/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078119173 seconds)
    (64/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.142763048 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077687408 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.152781726 seconds)
    (67/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.087784361 seconds)
    (68/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105859396 seconds)
    (69/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105177648 seconds)
    (70/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.106662789 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084358577 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082988255 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083955454 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.314487696 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.143441075 seconds)
    (76/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108720563 seconds)
    (77/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.183153697 seconds)
    (78/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.197670521 seconds)
    (79/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077248306 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076389656 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105447729 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148462867 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107144728 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.128561557 seconds)
    (85/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.101039565 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.088602373 seconds)
    (87/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.077553438 seconds)
    (88/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.138889844 seconds)
    (89/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.082676653 seconds)
    (90/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.135305341 seconds)
    (91/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.127954072 seconds)
    (92/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.131117109 seconds)
    (93/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.133609236 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101507128 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10952071 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.098959827 seconds)
    (97/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078455591 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083820892 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127142027 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.13571485 seconds)
    (101/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107801628 seconds)
    (102/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.149966481 seconds)
    (103/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109529305 seconds)
    (104/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.101077292 seconds)
    (105/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077792534 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103287266 seconds)
    (107/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083881999 seconds)
    (108/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.134191331 seconds)
    (109/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085059288 seconds)
    (110/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.127572169 seconds)
    (111/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125421567 seconds)
    (112/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084779227 seconds)
    (113/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084745705 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10086917 seconds)
    (115/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125368048 seconds)
    (116/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.174727249 seconds)
    (117/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173027427 seconds)
    (118/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154667672 seconds)
    (119/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.080603128 seconds)
    (120/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.128663363 seconds)
    (121/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.082237854 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.12834815 seconds)
    (123/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079787389 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102414871 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.126177507 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085741367 seconds)
    (127/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084157818 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122780207 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147346794 seconds)
    (130/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.089147964 seconds)
    (131/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111162329 seconds)
    (132/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.186106394 seconds)
    (133/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078384727 seconds)
    (134/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.146795932 seconds)
    (135/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084385501 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.127862764 seconds)
    (137/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080815106 seconds)
    (138/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077930015 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111001643 seconds)
    (140/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077689515 seconds)
    (141/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.104806544 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.102194029 seconds)
    (143/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.082852709 seconds)
    (144/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085244646 seconds)
    (145/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077770066 seconds)
    (146/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154187044 seconds)
    (147/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.08436257 seconds)
    (148/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116210201 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.126701564 seconds)
    (150/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.081583852 seconds)
    (151/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112715241 seconds)
    (152/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085386138 seconds)
    (153/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124777755 seconds)
    (154/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081212403 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109884325 seconds)
    (156/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077265348 seconds)
    (157/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.111175813 seconds)
    (158/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.142882752 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109856579 seconds)
    (160/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100291662 seconds)
    (161/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.136043388 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126529708 seconds)
    (163/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.131677978 seconds)
    (164/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.133882202 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112880369 seconds)
    (166/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081005322 seconds)
    (167/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.077270448 seconds)
    (168/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102097729 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104088573 seconds)
    (170/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078104741 seconds)
    (171/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102950658 seconds)
    (172/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.105034269 seconds)
    (173/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.139812781 seconds)
    (174/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080782465 seconds)
    (175/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109284198 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.126786291 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12350628 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.111404635 seconds)
    (179/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.104657507 seconds)
    (180/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085623823 seconds)
    (181/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079294517 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103966861 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.128627095 seconds)
    (184/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.133956758 seconds)
    (185/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080461132 seconds)
    (186/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100467249 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.128303547 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104134196 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103171803 seconds)
    (190/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102374644 seconds)
    (191/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086146164 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082140262 seconds)
  done (took 27.119228233 seconds)
done (took 28.030817684 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.222115672 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130008238 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111818119 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110175931 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.230259243 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117842636 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152701187 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112456038 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120016321 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13598567 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100770762 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122915157 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135044688 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.240789838 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115679118 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103159211 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.126295194 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123884477 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125248565 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.152286082 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205459678 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129502432 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121855166 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101944993 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230223517 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103506572 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.136408233 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112258544 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12314031 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136090522 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111792091 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101958716 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.152225609 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.127789694 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101582899 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.135831637 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102103277 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085111705 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111214468 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136583026 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125027939 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110985314 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.136229247 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104166946 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111212884 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.134825373 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102841099 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113292708 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.124960281 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112975745 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103285372 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.149877307 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11164897 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100145656 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.123588337 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104909774 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120912765 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101444263 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.148812928 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102767638 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102440703 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126290366 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113289155 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101615536 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.134382903 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102901125 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111292413 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.13703024 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111055725 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104029031 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100731637 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.133629444 seconds)
done (took 10.032375153 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107198352 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145190348 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.244333518 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.247580946 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.155879691 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.119285866 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.114825585 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.153087493 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115144789 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120334743 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.163686956 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133694064 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.249849223 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.116739622 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.143723297 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114075102 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138562298 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112652538 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.245793693 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126830267 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148397287 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119739706 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126174347 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145036328 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106896531 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.137693806 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.137170874 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114433908 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106041175 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138806159 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127158314 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105236624 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133056321 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124800486 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121784705 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140120409 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118397667 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113695075 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130914142 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107223931 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135332499 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122118858 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106525736 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.140771082 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115705788 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120513977 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137626162 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11963685 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106810161 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113051974 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.132194066 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.129871708 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.141710108 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123140033 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11820534 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.141784038 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120582045 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117905319 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132295755 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119915618 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106232521 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.128938863 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108683395 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125562624 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.133176572 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119782325 seconds)
  done (took 9.734201593 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126659899 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134823207 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141173747 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116713453 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111101871 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123684005 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100221118 seconds)
  done (took 1.815141609 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103021525 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.263506007 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.253088952 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.253919379 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.246121825 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.264724387 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125896357 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101555164 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.163588867 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11311344 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.263311403 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.316914503 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.138986523 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119109327 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.257996915 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101529112 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.257119068 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128581249 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117961146 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.257270774 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118787947 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.16125699 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115810929 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102673306 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.256558574 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.12986608 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.303252633 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120978909 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112160087 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.142763185 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11795754 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207119371 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.25843262 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117402988 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110705738 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.254047961 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.246489125 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115850429 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.333110384 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108058955 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.244844245 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116142629 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.144779634 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117989336 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117103284 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.240278759 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148782642 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118595455 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11636694 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.266963177 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140296178 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.260243542 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115865284 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117150496 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.138195009 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119493603 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123356462 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.143181143 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.266948256 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121485915 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.255886316 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.256905404 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.249023419 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.256112712 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127807952 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.261212236 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.234926865 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117222635 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110838624 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.148328761 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.258453551 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11751961 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114186846 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.245357096 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147667851 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.258992302 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.258517888 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115903423 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115532654 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.132338892 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116565139 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103162864 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.248060626 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115793606 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144425837 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121692792 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115252002 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.145437053 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109014952 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.151527815 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118180265 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114337253 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.14783039 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118389379 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11808193 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.257500211 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.142244326 seconds)
  done (took 17.596884736 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106590775 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104821485 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10787905 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131281476 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105402916 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103982654 seconds)
  done (took 1.646230308 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140907678 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117279185 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151333938 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120028057 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164951284 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.247140149 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.255341812 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13872443 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137456228 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128768167 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.248576276 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.250597406 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.250708472 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120928058 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.253874359 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119199404 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.255682657 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144297717 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126765456 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114606167 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14418646 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121199061 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114551713 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.23857725 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.144018194 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121980659 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110949142 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.153608577 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127137454 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112574103 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.147945857 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119175672 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109430627 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.137293182 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.253514025 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.11179061 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113745805 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.147123804 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121019726 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118159102 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.252919573 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114814036 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.151536826 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120363788 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13778941 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112128522 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120887321 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13705683 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.227952572 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.149125373 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121230622 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.117652512 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.148100472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121242962 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136510077 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113337743 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120811149 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.253492408 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12075233 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.139092904 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118560783 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.117831479 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.139641011 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121993736 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14406253 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122151685 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110507227 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144108043 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117272745 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119020673 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.144795167 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120331909 seconds)
  done (took 11.684688341 seconds)
done (took 43.430802673 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.714145894 seconds)
  done (took 2.702250363 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.14261548 seconds)
  done (took 2.130093313 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.259613656 seconds)
  done (took 19.27796069 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.437580409 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.345389993 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.028805054 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148200991 seconds)
  done (took 2.95156553 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.065281571 seconds)
  done (took 2.066826535 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.334939736 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.249875974 seconds)
  done (took 1.574864631 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.728434729 seconds)
  done (took 1.733491607 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.737774001 seconds)
  done (took 2.730610247 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26716248 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241415824 seconds)
  done (took 1.514927669 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.668721159 seconds)
  done (took 1.674926818 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.504759739 seconds)
  done (took 19.513303249 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25238301 seconds)
  done (took 1.265574159 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287821883 seconds)
  done (took 1.299938383 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.621142356 seconds)
  done (took 4.633880861 seconds)
done (took 66.073120166 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119516377 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.141602291 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120560987 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145539898 seconds)
  done (took 1.528109726 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123487146 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119438826 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.14550177 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118960989 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123166114 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11757618 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144740272 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121599805 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116449431 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146553387 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119080435 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116772174 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146005821 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118489767 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114588666 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145903904 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122614131 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118041771 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145637138 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120554857 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118943494 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145018729 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123088393 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120649078 seconds)
  done (took 4.066121059 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11527973 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109969527 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111190566 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133529705 seconds)
  done (took 1.485479132 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12680391 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129872784 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15331125 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126450137 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130508925 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153181171 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117980948 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114566135 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143802917 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126531397 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131912901 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156619264 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129977372 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11892825 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154389679 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112958534 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117596638 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154361686 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124842838 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12583754 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.1451458 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123828996 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12154326 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.154505994 seconds)
  done (took 4.207264464 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193615261 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129774783 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176460362 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164853502 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17864446 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116708091 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145095961 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151305507 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125060501 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.145872651 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121877023 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162357207 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151421683 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119966229 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118646551 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148888834 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131106245 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122982422 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18949354 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12270069 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150970155 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129696087 seconds)
  done (took 4.214382964 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121188547 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109288972 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131479904 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108218612 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121384027 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.134709824 seconds)
  done (took 1.746885746 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108452822 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102821525 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.1028027 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128211599 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107374513 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103369593 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126150861 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104947249 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102747706 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10278011 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127583917 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103516641 seconds)
  done (took 2.333217291 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201769476 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145031542 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246209399 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384578124 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187476396 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157653845 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.309575114 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185317641 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176357806 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163022439 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179613061 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189153191 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151714216 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21427775 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138635482 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183014538 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169772586 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232662014 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168025118 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212270505 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181852185 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198602755 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190136506 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173554589 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139681031 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18864354 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119810733 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126620667 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19213186 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188496144 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173645231 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176127414 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139994247 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210425282 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257620328 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176156422 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293388163 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133351204 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.192941706 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189255636 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256587377 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139192024 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214253842 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177870607 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129348229 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214575393 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148337606 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.208336488 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133106804 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170778837 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182469867 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204731294 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195024282 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137719515 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325622817 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134055929 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166355148 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175551923 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212298132 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224824285 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177337926 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.1488624 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198739116 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188991954 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240249111 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139287075 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189432919 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122685532 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190128717 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229787059 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180081323 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185431984 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.236709614 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130925485 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198220277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163315094 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181446821 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231038863 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170142585 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118321259 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177231484 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132983533 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15239708 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18706994 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120207115 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239057326 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157570716 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.17933269 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206086552 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150467607 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188916037 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157314978 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192227686 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144778746 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129338076 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143157871 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.183687669 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15647761 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125455537 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177438265 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137153115 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152313532 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150388538 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148215696 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168595345 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130917396 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183806392 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194736104 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130814817 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203844048 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146012499 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.185985533 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167239979 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219393485 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128960864 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158518277 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217170112 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196361065 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135657061 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195364132 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222471186 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147861821 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16090483 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165373449 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219360915 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143227005 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225641748 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136329885 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162660476 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136774707 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201165922 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156637681 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.186741092 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126147529 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192815369 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212133033 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127002065 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139200081 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210591101 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133263947 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152384181 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136305001 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135145544 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.169233206 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14886714 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.16694722 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154012216 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192927849 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163636719 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183177464 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133081314 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20055572 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129079535 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196061518 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145977379 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.146398028 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172081458 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222663517 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12813064 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207103141 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157267534 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209897049 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198578443 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127344384 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209990386 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126996564 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119220213 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189490405 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195838607 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160887013 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.213629783 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203239 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163974502 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18890756 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147007156 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1952579 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.207316576 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155524601 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.164051521 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170962434 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195740016 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122924302 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121778519 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154245436 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136624711 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128128292 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166073552 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204139893 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161608277 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201724479 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192308103 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137751747 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21524678 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125210549 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156317368 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199757975 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13701998 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213533108 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216296631 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176050844 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167003025 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161950503 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.147777773 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125039154 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131041811 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1846777 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134738553 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162342497 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139329259 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216678315 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193175036 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147822304 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215278879 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162785052 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225470702 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118400508 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189192284 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161861676 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194981184 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183692743 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158047569 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.157415576 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219678827 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139560589 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218308046 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19335915 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177018778 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218104424 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162329399 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158578447 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14194798 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186912983 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136366521 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185564985 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140903622 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127922156 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17652847 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135624424 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168626139 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212349947 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143983923 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202001349 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153541367 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198808238 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124046228 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167048417 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171650562 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169853307 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104149007 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162113702 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215721372 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17588793 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149499097 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194700738 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129881392 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.33798756 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17946964 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198176622 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134046436 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16423047 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16910568 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183295609 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158322745 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210060274 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139072375 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235282487 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195404147 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13965187 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128553421 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173544485 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147713732 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.164916796 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153313477 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.189184171 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142157532 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2142634 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134467216 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199303938 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201111816 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145646355 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148258004 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167001923 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251970477 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167421333 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199984182 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163793471 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189157014 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179131477 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150759463 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126537983 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129489277 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210943241 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127588268 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204585884 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189291198 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182152672 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199645578 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187813943 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140260365 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12584428 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193050668 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14717699 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212809262 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161224768 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136905598 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210581605 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126076395 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128962404 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186729471 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307965928 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147779666 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193478237 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105224676 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305281436 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128901064 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131569892 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185720285 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167003518 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161527294 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180195397 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200942033 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140044697 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181541439 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135101109 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203083672 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182050772 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195047835 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201922145 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143957768 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189129062 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154831132 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198409797 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144721173 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.172351504 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157962376 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220067085 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.171339535 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158661408 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166874445 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196815982 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169562672 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200937334 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137316682 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211191427 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126757841 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193648687 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136369674 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152740213 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159712419 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191721253 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130412985 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199254496 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168360378 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158779666 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12660761 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172555938 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163424505 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166708427 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129623926 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21277912 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128095616 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206501393 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20722148 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157198527 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167644633 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169311774 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129892033 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135764115 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172643504 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12989339 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174941676 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198851057 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128032581 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200257946 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193224371 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161425256 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180828408 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139866943 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.289308772 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127382863 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217587656 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149622414 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223364974 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14616721 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202692624 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165793146 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180181266 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162143592 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175847131 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.216489622 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193322425 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16389791 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158825994 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14090684 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165023608 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134474713 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147977734 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195755515 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139201649 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165401002 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164766356 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173335194 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144220047 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16868612 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197522989 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177717074 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183732063 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212747608 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135129151 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203095275 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20244748 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128137029 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.191883711 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170030879 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172342191 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151595537 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.160685209 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137548966 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242519932 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126181468 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156943215 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201570222 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194326422 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170975355 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.160799375 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177321837 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16685237 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17525871 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124941883 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178765741 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166797319 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162038273 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125295985 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197434643 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159655759 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.191550837 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139672851 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.1772176 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217085664 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122000842 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162763368 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308267369 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160871778 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221162425 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.131002131 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134480922 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174305553 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156675629 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.195903686 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195154876 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130575936 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128029208 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172879565 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156284206 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.164961778 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167560824 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208229162 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155337475 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211440837 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132457805 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283201124 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140607281 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19704513 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116320955 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126627046 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168029189 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133848077 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140161955 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208540497 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241371577 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190140155 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145927777 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133415758 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155603255 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131099641 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186039812 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148907972 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193298141 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147198268 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101339683 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1687931 seconds)
  done (took 84.309609337 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170824025 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.155158774 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167472313 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221034763 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19553369 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292305346 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228388689 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24782061 seconds)
  done (took 2.780669125 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120138629 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159315019 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143208742 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144230337 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109837161 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.488920049 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159886703 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120410284 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160437794 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151576888 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136662942 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.562578265 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116217653 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145080041 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121659296 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136392374 seconds)
  done (took 4.070736238 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.037872972 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.043913192 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.990627658 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.302269412 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23761102 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.233028102 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.762154166 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193660396 seconds)
  done (took 12.903712789 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.173569085 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.167740863 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.456650843 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.320438811 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.210574305 seconds)
  done (took 2.440341413 seconds)
done (took 127.091455814 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123921745 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123479037 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122817936 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153666006 seconds)
  done (took 1.623313257 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.191547834 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089343336 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091862569 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119202547 seconds)
  done (took 1.603045043 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.366780535 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090804573 seconds)
  done (took 1.600470234 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.347965089 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136628793 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.140006692 seconds)
  done (took 1.747533642 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13461491 seconds)
  done (took 1.253672258 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120660989 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115758396 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.285091729 seconds)
  done (took 1.639059274 seconds)
done (took 10.580925898 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120095367 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.920973974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432167645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134408227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711132545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427705825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.422928556 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175189562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170248495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136412834 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132715411 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690560411 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.438742163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.872335917 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.394766981 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.908840784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695987707 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110617582 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144739962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112202121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.403492861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136804285 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112325976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110734571 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718714839 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420892823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108944134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919197075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109950008 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112493564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.42676421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110780372 seconds)
  done (took 20.948141965 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112916068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16638609 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146503536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112503016 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113261407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139116401 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122664575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122467821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200386676 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109834659 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159438427 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110430265 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115210095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138333004 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136270158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109571594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141468086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114446279 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118397876 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139338724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133274241 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109005496 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139715302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113990859 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110497287 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158633356 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111512546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12315331 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137646606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116532748 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115724053 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138110655 seconds)
  done (took 5.256080996 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159654835 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175918672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148326081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148303076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188227707 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112901377 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223598843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149544557 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202196073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112358169 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131117212 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138203934 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152477894 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111370607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164064884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110354058 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113346075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141235046 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118976092 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111782525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16104677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110411033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112115812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141763316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111498348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132699588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140192432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122974962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110135856 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143908837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116827083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110223323 seconds)
  done (took 5.542942704 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126108505 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125530225 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132995175 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163188872 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120659973 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123326271 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154795535 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120807252 seconds)
  done (took 2.191844771 seconds)
done (took 35.060010117 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135835063 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127614424 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131827427 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155313592 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.270025231 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118787069 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128564393 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.148577267 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126021825 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131462883 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109971332 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151962239 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.1316903 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121640763 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.268980326 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.158202992 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.275972159 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.240456499 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.151077413 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12601281 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118807554 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.274745541 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.15500201 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120538219 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.26929428 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114544394 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.260418188 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121955994 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.151280324 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112238115 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.273305799 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124071097 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120638315 seconds)
  done (took 6.537348567 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.22152455 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153162824 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.120549719 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120225225 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119523127 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149643316 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.225795458 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150760696 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118892358 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118398258 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.149891743 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.209980197 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.156574317 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116061868 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120480568 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108868988 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.25834483 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122072107 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.143298012 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.092870157 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117581535 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.148406748 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.23944119 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.146025819 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119889776 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119259206 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120853654 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155814213 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.121531159 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120568427 seconds)
  done (took 5.521161103 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125764845 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132112378 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137036257 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.217150988 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14852259 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161404975 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137038498 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132054306 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171565667 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113919823 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127933142 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179172688 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129597145 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123609066 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144101395 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130640914 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.128547789 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143054341 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122125924 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130635166 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162883372 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130960093 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134771903 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150999136 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112545696 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120165084 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152285528 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124820246 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120671236 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156128024 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115245545 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116234615 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114599362 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.178806716 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116737326 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156209335 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.135888379 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125618427 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.155361535 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.147322026 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115934099 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144598187 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141185351 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168265483 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144296819 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127387293 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125233159 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158203977 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113527301 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131568257 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184331693 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114403018 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132954244 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.141294806 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.1128285 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122070603 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112652583 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.146383198 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12888604 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11477142 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165085277 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121469863 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124606781 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.145074777 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124640289 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11235452 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.141740757 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118148365 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139184652 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151503261 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150801921 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112660427 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153620488 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127378933 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124739141 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123998204 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142436086 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125379684 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123655979 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.149376357 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126279774 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.116078374 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.146488842 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130844293 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133524176 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.157764648 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125189691 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125760412 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.146314098 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11703777 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130141855 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.144261064 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119297581 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126139926 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.142602337 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118903059 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125488323 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123066085 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.141761952 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139531172 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115985654 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.144331693 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139419106 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116236746 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.148854832 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123515101 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153785117 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.143962389 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125367554 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126662679 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.14318533 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123019684 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116909734 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.141859162 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130268791 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130251902 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119641021 seconds)
  done (took 16.945574562 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.367612692 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.356919941 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20913922 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.404930548 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.158466722 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.249029934 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.387968536 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.36265544 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113446745 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.177328268 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172889797 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.324472892 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14617411 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142207564 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.362543918 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.437326666 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.142290084 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.184565914 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.148873641 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.160159856 seconds)
  done (took 6.158983465 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134666952 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147594161 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167454213 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141649404 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123531718 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161210565 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114779342 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135072689 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156290998 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123269073 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116619938 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160090718 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128748464 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130417967 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159191242 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144606371 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122909552 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.14880651 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136641792 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117530219 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130837752 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140148903 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121786632 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166115731 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132639232 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124117087 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143521333 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119615505 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119833585 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152842451 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118462674 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131103273 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150759065 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104433641 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125982498 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128031067 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150965281 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117214113 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118241489 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146804055 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129136761 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128798051 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.151681497 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099601498 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133151302 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108228199 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157445794 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127212598 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104492824 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132143284 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157065827 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127426745 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120912523 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.166006407 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121290315 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13017567 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155024952 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128038879 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118142711 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143134301 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113086971 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117236546 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.151605303 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12901847 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125524914 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.164167974 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131319237 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113048144 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.147528414 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118453225 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117369138 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.157282772 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13671384 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12314494 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.149925011 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126978771 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121748412 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093056032 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.153383133 seconds)
  done (took 11.701504438 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140017217 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124400242 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130604102 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179606085 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127017302 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119279658 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155387285 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133640262 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127471715 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.1636115 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129236017 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126738697 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166954187 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125521576 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123191191 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16033087 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127889227 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151546049 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16380976 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141688401 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.158581592 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12053607 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126864102 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124821968 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173637214 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124803386 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.169716526 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.12851169 seconds)
  done (took 5.106093249 seconds)
done (took 53.095366833 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.293763941 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.486059151 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.261298839 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.254875358 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.291104576 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.272893951 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.259814719 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.269494947 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.727759151 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.230015503 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.257233055 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.257002805 seconds)
done (took 29.017367862 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.392948316 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.401498165 seconds)
    (2/2) benchmarking "String"...
    done (took 1.58026107 seconds)
  done (took 4.14484166 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.246167211 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.248611272 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.497017734 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.248217683 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.249554548 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.247926579 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.246950341 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.252874623 seconds)
  done (took 16.142132666 seconds)
done (took 26.077633729 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.290913777 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.600977553 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.530849953 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.228966006 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.254577159 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.279713236 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.248377084 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.322121922 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.254986333 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.233677963 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.682235422 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.551642851 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.265139155 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.690776268 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.231864743 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.253816734 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.271208217 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.642436479 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.252910501 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.282593219 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.228087944 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.232992491 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.273490221 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.25176395 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.258506588 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.255047927 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.275469107 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.251045426 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.598266581 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.256807528 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.283222188 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.249187866 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.27469932 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.256233359 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.256502118 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.265751753 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.574543501 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.262308951 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.239056788 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.253528746 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.573970756 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.283828658 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.260071143 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.25423365 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.2347641 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.232929595 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.23876163 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.369394536 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.275239734 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.255505971 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.315852633 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.70707468 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.265153914 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.264120575 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.254435328 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.650242679 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.274495621 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.360453986 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.281920431 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.263824083 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.256902367 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.265510274 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.310642374 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.261341213 seconds)
  done (took 148.03082848 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.250172959 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.250239969 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.252106003 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.253275286 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.256495205 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.251811588 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.25143553 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.251734488 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.251093412 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.280846558 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.256698701 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.25281831 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.257109243 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.214053433 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.263109132 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.270412389 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.257404583 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.253695001 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.27989305 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.253785579 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.258424176 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.256660055 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.254337794 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.253769862 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.266201833 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.33782827 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.299636384 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.273131636 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.267571005 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.253413422 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.263130108 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.262435536 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.90264093 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.126534306 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.265250419 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.294704311 seconds)
  done (took 82.100843105 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.253571314 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.254557499 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.253950228 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.288899495 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.254267579 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.847492854 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.859860846 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.316618352 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.287755412 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.753986587 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547714458 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.260674454 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.34740634 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.268177911 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.256360898 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347956765 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.280626422 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.255717313 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.254005023 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.849116122 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.27061836 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.310474726 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.439369879 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.272215925 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289443304 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.647354302 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.255076243 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288874967 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.89096256 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.593341374 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.307328614 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.25568157 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.256630038 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.649320019 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374978102 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.258266177 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2905307 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.258001255 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.541255862 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.256831338 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.257411758 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.260155351 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950049213 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.261960907 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.857495702 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.261175738 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.287071984 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.260976593 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.257790153 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.298812687 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.048303162 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.261667731 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.256648815 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.259393437 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.258343246 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.257101983 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.291858981 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.239994265 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.261981122 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.192771265 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.262305312 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.260588771 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29207518 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.257829385 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.302139577 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.261889174 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.740576883 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.316421275 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.353372367 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.859379848 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.262915561 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.355269578 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.377665148 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.257645174 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.257993402 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.258880487 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.259801509 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.257355049 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.371065734 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.259287432 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.967230759 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.439791476 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.276076697 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.773009842 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.361559722 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.25963221 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65384631 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.263398244 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.258785221 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.04147897 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.360401486 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.260088694 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.26014408 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.258659498 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.97103848 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866853966 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.57540153 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.264214382 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.260066468 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.940758027 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.263792362 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.149155403 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.848901485 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.960515923 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.266299393 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.372556908 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.441410652 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.279017728 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.262276208 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.757717678 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.265903944 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.321698748 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.261828723 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.661022675 seconds)
  done (took 385.439422814 seconds)
done (took 616.725019311 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.078269969 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.032136462 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.192078262 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.059741975 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.02474299 seconds)
  done (took 11.548751246 seconds)
done (took 12.712221484 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.460103488 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.4615639 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.325859482 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.466401166 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.301890771 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.478549384 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.445114868 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.283327462 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.375346361 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.348700165 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380392026 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.317016884 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.298942596 seconds)
  done (took 19.10768003 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549613889 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.274039167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.328254159 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.54296769 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.307833022 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.56346652 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.591367322 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.273399676 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429013366 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.306630694 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.284014503 seconds)
  done (took 18.616163126 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.554507622 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.274005201 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.349867832 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.53635918 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.309009401 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.56697406 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.588321338 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.275376355 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427665698 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.288433052 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.285250741 seconds)
  done (took 18.62093181 seconds)
done (took 57.509884535 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.308164248 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.366957009 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.302588881 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.282485209 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.281048703 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.282334505 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.28420607 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.28258786 seconds)
  done (took 11.555789193 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.280617253 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.279995121 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.280458395 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.281483358 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.280311076 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.281225672 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.279848532 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.282836394 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.279934301 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.280200347 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.281374299 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.279624362 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.280825058 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.280466247 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.281179489 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.281958559 seconds)
  done (took 21.658113416 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.283048109 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.281589697 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.280545346 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.280546043 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.280284299 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.282716198 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.282454733 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.280785144 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.280412012 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.283054442 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.282718893 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.280339724 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.280456217 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.28117745 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.282465482 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.283885384 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.28140858 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.281791615 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.287750323 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.281315186 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.281531023 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.283186402 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.283081035 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.281246338 seconds)
  done (took 31.934606631 seconds)
done (took 66.312330159 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.268731539 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.290808284 seconds)
  done (took 5.728133593 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.340911307 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.340170221 seconds)
  done (took 3.85012488 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.284038873 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.283893373 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.284646069 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.283821179 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.283299135 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.282912896 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.28218708 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.283377683 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.281302819 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.283138709 seconds)
  done (took 14.000843246 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.283738351 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.284030387 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.281153491 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.283698151 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.283767986 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.284310393 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.284511368 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.283171408 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.28365454 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.282972402 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.284222873 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.283749844 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.284048068 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.284946766 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.284193764 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.283228803 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.284351096 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.284071508 seconds)
  done (took 24.276906974 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.298370022 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.302041606 seconds)
  done (took 3.769211111 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.413697536 seconds)
    (2/7) benchmarking "second"...
    done (took 1.326117747 seconds)
    (3/7) benchmarking "month"...
    done (took 1.389201833 seconds)
    (4/7) benchmarking "year"...
    done (took 1.380288539 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.326100582 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.306269458 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.327360803 seconds)
  done (took 10.639046798 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.273787387 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.5623864 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.744343125 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.429113577 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.263867703 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.291617423 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.2502142 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.290768698 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.294608385 seconds)
  done (took 14.569991102 seconds)
done (took 78.003195235 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.271593768 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.297216805 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.300408933 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.284985377 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.624697263 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.308158121 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.276439107 seconds)
done (took 16.535192535 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.258738054 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.266719229 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.253908949 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.285355296 seconds)
  done (took 10.23537892 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.270501738 seconds)
    (2/2) benchmarking "read"...
    done (took 1.595744107 seconds)
  done (took 5.039157623 seconds)
done (took 16.446731911 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.288799835 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288560788 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.287481608 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.287520089 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.287726599 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.287896863 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.286568358 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.28707339 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.28626583 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.287336894 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.287736561 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.286690139 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.28711091 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286819391 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289036649 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287857435 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287976408 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.288341815 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289103315 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.286663871 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287609483 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288378447 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.28720166 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.288142235 seconds)
  done (took 32.077031685 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.28806734 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.288042797 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.287087556 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.288233838 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.289552477 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.28953689 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.287951274 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.289334873 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.288920396 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.289257975 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288951994 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.28835306 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.289980123 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.289599617 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288738903 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.289011413 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.28855528 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288631782 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288770339 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.289897061 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.289474669 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289343741 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.290389201 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290401731 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.289360864 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289120925 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.291542251 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.290442017 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291179887 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.288942697 seconds)
  done (took 39.850933497 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.293614618 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.296024326 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.29045991 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.291224978 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.289936 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.290629877 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.290009759 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.289949707 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.290394139 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.290755056 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.291794663 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.290269536 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.289574316 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.291509152 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.291363861 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.291008482 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.292511606 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.291589224 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.290758153 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.29073529 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.290113034 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.29041818 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.290710609 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.292561942 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.292383861 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.292258926 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.293474667 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.291662753 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.291639638 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.291185575 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.290855772 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.291576946 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.292678606 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.291435167 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.293034007 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.291384937 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.29794238 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.298622496 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.292114403 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.291780908 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.291892763 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.291166765 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.291936849 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.291227628 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.292354705 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.292960156 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.293305972 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.293364102 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.293277927 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.292938403 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.293635802 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.293093345 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.292280238 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.293236709 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.292976432 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.293572528 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.293049452 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.294312162 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.293437407 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.292114736 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.29311903 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.293764533 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.294209905 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.293946114 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.29380379 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.294241516 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.294444239 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.294857746 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.294060275 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.294812103 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.294064297 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.295274547 seconds)
  done (took 94.237011614 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.294235553 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294330402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.294700123 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.294398491 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294571479 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.295177708 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29556302 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295032451 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294811635 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.295278356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296209777 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295677644 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296185106 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294430533 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294536596 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294488045 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296003788 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294548894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.296321526 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295898836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2956523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.296357909 seconds)
  done (took 29.673569204 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295800676 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.296545077 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.295706766 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29793482 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.295927181 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296142519 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296672022 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.296441742 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295386433 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29681137 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296367381 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297243372 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.298057944 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295578076 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296201567 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298925091 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296845883 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297970964 seconds)
  done (took 24.52116316 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.297622005 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.298272683 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.296768111 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.296073996 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.296943732 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.297219556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29682115 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.297327136 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.296963173 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.297027395 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.297694162 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297797891 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.298481322 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298305929 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298601556 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.298009879 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.297929533 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297480463 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298242814 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297461931 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.298204536 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297673549 seconds)
  done (took 29.728922473 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298621348 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298512709 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.298768726 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297442013 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29864904 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.298702379 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.297746071 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.299457395 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.299933266 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.298864148 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298955605 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.299215099 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.301527252 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29887486 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.298467898 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299169158 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29938125 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299110606 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30099603 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299239834 seconds)
  done (took 27.165086612 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300716143 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302074824 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300452636 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301032332 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302033104 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.302163203 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301626874 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.300908448 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301985125 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303722868 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301637353 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301346688 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303216027 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301127217 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300901669 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302375452 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302602626 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302737139 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.302326292 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304119465 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303392678 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301476632 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303000794 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302740724 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302556781 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304067429 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302671973 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.301597928 seconds)
  done (took 37.644694879 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302200892 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.301845415 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.302093598 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.303144343 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.30123821 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.301107744 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.303674133 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.302518397 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.3022652 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.301455732 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.303927048 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.302817481 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.302560806 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.304452005 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.303078053 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.303681117 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303175664 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.304088937 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303260796 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303196043 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.305386016 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305565401 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.303317983 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303326615 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303030922 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.304932012 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305125772 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.302823548 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304133756 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304304147 seconds)
  done (took 40.283621311 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.323022746 seconds)
    (2/2) benchmarking "in"...
    done (took 1.322301492 seconds)
  done (took 3.83185949 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.304776808 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304122269 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.304662877 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.304427789 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.303305751 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.30379631 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.304748552 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.303638078 seconds)
  done (took 11.620639564 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.296467352 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.305582592 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.305437373 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.305327226 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.308034742 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.298712241 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.306218744 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.310263999 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.300508427 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.300722086 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.304618568 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.304762471 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.300349077 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.300752301 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.300740929 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30193006 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.310232867 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.307499812 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.307711861 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.308344026 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.306624157 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.302254817 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.305680318 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.310792974 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.303441872 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.310441609 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.307996723 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.310775264 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30009295 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.30576061 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.303456293 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.311290989 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.308376055 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.30759525 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.308660694 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.307499743 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.312135805 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307986729 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.31032638 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312548408 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.308496239 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.308998061 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.302761028 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.306665177 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307038453 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.3138625 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.308218643 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.309276182 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.300329025 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.30543927 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.314903857 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.302542072 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.310806088 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.306959432 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.30809143 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.314943798 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.316755435 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.305586999 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.308689754 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.31432893 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.322013221 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.319710167 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.308665575 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.314583759 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.31319518 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.325604942 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.315504475 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.317145825 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.311103548 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.31132681 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.310849446 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.322140079 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.322242302 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.315623006 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310035901 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.311587196 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.305530829 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.31591212 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.314569046 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.31551154 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.317796801 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.311084005 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.315296026 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.325249768 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.307541796 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.316257932 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.311377789 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.311859415 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.305277049 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.318758783 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.320070378 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.311820962 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.304402439 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.307863875 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.309224066 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.314208289 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.303467847 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.308235905 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.315417703 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.313054237 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.311977068 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30806365 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.315728289 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.319338354 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.313456164 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.314805552 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.320464393 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.307504298 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.318473977 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.320525083 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313978986 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.308237921 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.31228917 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.31677979 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.308410734 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.315829063 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.318844637 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.310763812 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.319125932 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.313530039 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.315992658 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.331428743 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.320960469 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.313580071 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.31093303 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.323859042 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.313944961 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.312688974 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.320841685 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.315430843 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.313169735 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.311418546 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.320612265 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.308056312 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.319328552 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.310045611 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.319321841 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.314929905 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.315745104 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.311205862 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.316421134 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.312192292 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.315760128 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.319929759 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.322028147 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.31121254 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.322528058 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.317303354 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.314343564 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.318283542 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.320347366 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.317241052 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.311014055 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.319453445 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.308847128 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.318532468 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.309909303 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.320856381 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.317423045 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.316514351 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316627556 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.30948341 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.313804399 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.321552682 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.31803399 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.31715617 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.320894262 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.318638298 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.31761635 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.308749213 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.319112762 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.310315616 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.313780332 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.324902919 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.317009374 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.318084799 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.315997105 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.325480811 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31916347 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.317807722 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.313814344 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.321072306 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.323981984 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.322361115 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.326619687 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318780996 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.318778123 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.312304533 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.314822012 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.321320089 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.313486979 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.326576062 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.328107033 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331353503 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.316766066 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.322467798 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.312666483 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.323395166 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.319150453 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.327203345 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.320220729 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.320219101 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312909158 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.324392861 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.315543072 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.322402667 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.311288774 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.323485162 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.321923945 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.321119698 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.322854598 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.314501633 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.317451735 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.32326095 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320188335 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318823938 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.312956554 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.324067159 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.312555887 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.315987542 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.324825611 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.320905432 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.32271162 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.329035335 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318902217 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.325680789 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.321992003 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.317329176 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.323773049 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.320496503 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.32117749 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.326673334 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.324745504 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.318291896 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.329769642 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.324862335 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.316075796 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.321936056 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.330737506 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.321410837 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.316847143 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.330466764 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.322324615 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.32344445 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.320464 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.316932615 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.327291824 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.325674108 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.332185312 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.316533811 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.328307795 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.317741596 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.328052219 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.320071838 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.32448689 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.323243134 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.327463505 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.333550217 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.321931585 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.317155739 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.327267789 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.323940405 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.322640591 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.317575215 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.32958159 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.325044904 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.32545755 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.323537518 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.321039264 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.328384731 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.316543072 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.325693421 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.318143878 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.336938349 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.346367294 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.326658551 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.329036778 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.329171889 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327206876 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.328560007 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.320965951 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.31962211 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3231051 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.322876586 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.320400687 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.328805257 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.319658541 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.330125466 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323762569 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.328898327 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.32884934 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.325805256 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.318841233 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.329583759 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.325803034 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.326584292 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.318224971 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.328171163 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.321905607 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.328816758 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.326333504 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.323036144 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.333483636 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.33187942 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.324222138 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.325018993 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.32252876 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.323147016 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.323696738 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.33255957 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.323220234 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.333190285 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.322248464 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.32984595 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.323843963 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.333079578 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.338030189 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.322101068 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.334410098 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.327386918 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.319583384 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.322457222 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.329694838 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.333152676 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.339619759 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.321510078 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.330247894 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.327702052 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.32858677 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.329056849 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.328528094 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.328601858 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.328500617 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334756911 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.335119878 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.327461812 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.331993416 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.339514097 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.329390451 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.32956313 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.320206154 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.332145185 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.339200534 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.325502597 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.327813817 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.324615111 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.331735701 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.329891919 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.330320456 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.330775676 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.329055033 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.334722844 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.335825943 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333368554 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.33046211 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.335526329 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.341166044 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.333471003 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.342838271 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.325332921 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.336763133 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.332369556 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.326758289 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.325962395 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.32537628 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.334923038 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.324188718 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.336043475 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.330365487 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.328219619 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.332689576 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.338161314 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.322880192 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.334894764 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.351908595 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.324278244 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.334689168 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.330623463 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.323613641 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.33562758 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.330944865 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.32153543 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.327528478 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.331843609 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.338929305 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.325892622 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.336393297 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32627078 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.336405314 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.332221783 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.331750265 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.33232123 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.332873949 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.32550994 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.334618063 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.333140614 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.344325273 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.328948399 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.333233622 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.328721153 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.34186717 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.344613918 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.328957462 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.338310723 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.334146794 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.328382359 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.332234284 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.339213079 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.327052295 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.337637441 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.326053454 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.331602614 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.33097446 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.335102067 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.338152082 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.338483417 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.327604138 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.329178536 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.336537607 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.334481349 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.335525881 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.332955095 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.343321553 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.329741018 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.328498087 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.336739548 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.329588167 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340739289 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.329106956 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.335440048 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331702302 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.339289834 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.335950764 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.335252196 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.327584716 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.328973678 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.342569508 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.342617103 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.337188556 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.334854619 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.340256695 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.329746573 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.335727197 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.336164697 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.330646892 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.331477226 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.340740786 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.330854619 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.332646643 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.33284408 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.337758756 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.340838534 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.340086658 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.330625302 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.345030769 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.3473333 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.344902463 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.329403514 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.334029488 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.332948961 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.338284028 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.338354597 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.331931465 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.346476328 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.344816627 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.340859795 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.336866897 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.340120772 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.330941421 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.340732833 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.337988026 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.334541644 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.345433063 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.334250403 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.346444751 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.33750156 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.339081752 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.330080572 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.333014086 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.334989839 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.336123076 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.33977812 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.338716373 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.344172014 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.338226627 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344872745 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.338983411 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.338909173 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.337726844 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.331435966 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.341858824 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.332803552 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.341578894 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.34251662 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.333510257 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.342823704 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.339749836 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335010836 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.34119723 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.346105366 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.339357376 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.333919928 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.339630395 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.3460776 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.352675764 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.34050144 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334362022 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.338898092 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.344151867 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340705268 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.34102047 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.335089939 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.354716176 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.356317767 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.336008923 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.338210636 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.346663083 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.352170178 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.340826721 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.341506552 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.337992034 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.341341439 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.349240618 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.341593781 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.347397569 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.349121718 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.339002624 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.345353136 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.336539121 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.340579358 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.345277519 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35472284 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.340997488 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.339225551 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.355972612 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.354559114 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.344583168 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.368673817 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.352718059 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.344381814 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.348274128 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.3346987 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.345087174 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.340290806 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.350427933 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.344766482 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.344424607 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.34345077 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.337245998 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.348063869 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.353854406 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.35516318 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.343012281 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.33703055 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.339554362 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.345497171 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.343895611 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.34575471 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.343765874 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.343955511 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.345695936 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.338852037 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.356071553 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.363508162 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.348402614 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.345782899 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.345069808 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.346326625 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.350752844 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.346220483 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.351936197 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.345750233 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.345273368 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.342289719 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.354483887 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.346245964 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.337886167 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.340921932 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.34076077 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.348394824 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.354623404 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.368287042 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.350450827 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.350518992 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.347497745 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.345660068 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.340762621 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.350466834 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.346884662 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.341086736 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.342654402 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.351229805 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.348423277 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.346165531 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.341163564 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.354402907 seconds)
  done (took 792.100525905 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.34882089 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.346864133 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.345816266 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.345996335 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347180913 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.346846627 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347112638 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.346569129 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.347987339 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.347191715 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.347540185 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34791024 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.349400487 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.346474301 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.348748778 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.34825767 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3470601 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.349872914 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.348214327 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348477147 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.348697843 seconds)
  done (took 29.524482777 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.349101748 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.348512779 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.350024513 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.347696701 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349823628 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.348930338 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.349412244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347497024 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.348820806 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349861415 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.348576597 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34961358 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.348720616 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.348418897 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349086668 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349277353 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.349274152 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348581414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.35090497 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.350023269 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.351229648 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.350066478 seconds)
  done (took 30.908273717 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.34989736 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.351282801 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.343086063 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.353678732 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.349212247 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.350429132 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.350423207 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.351304864 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.351119169 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.343107418 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.34541161 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.343540842 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.347252041 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.358662008 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.347084625 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.355790446 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.349954631 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.351277558 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.350422258 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.350170965 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.354562324 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.364019893 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.351402477 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.342993539 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.353303573 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.351099031 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.351757344 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.351974198 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.343203684 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.353475863 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.352067427 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.344747015 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.355826706 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.355872449 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.347099156 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.356404541 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.352156018 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.352813259 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.352868148 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.354580851 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.372751236 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.352429325 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.356587225 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.365650469 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.353898202 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.347476767 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.359902623 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.354356796 seconds)
  done (took 66.124864413 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.353292271 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.355070726 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.352631669 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.353400722 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.354153743 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.353119017 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.353202622 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.354308814 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.352776039 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.35339332 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.353975623 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.353708363 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.354266713 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.35414393 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.352659234 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.353854849 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.354402009 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.353445824 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.354719594 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.355571296 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.353211561 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.353533394 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.355578281 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.354876508 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.354601731 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.355468594 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.353545497 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.354988372 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.354970531 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.354955008 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.355341006 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.355790782 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.355270446 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.356404367 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.353992113 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.355801605 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.356426041 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.355684674 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.356202571 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.354820413 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.355715972 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.356539734 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.35601436 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.356695959 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.35596985 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.356426634 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.355827216 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.35681788 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.355884686 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.35642937 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.35582106 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.356525152 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.356694581 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.357487106 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.356995848 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.356670421 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.356559056 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.357636679 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.357298023 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.35775811 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.357263757 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.356440529 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.357305968 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.357068321 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.35709462 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.358711244 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.357262606 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.357152964 seconds)
  done (took 93.398017457 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.357525592 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.358601867 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358908948 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35812656 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.358934578 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.3571373 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.358500668 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.357296166 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.358205633 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.359261404 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357984502 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.359276473 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.35960789 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.35843859 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.360392723 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.360200611 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.360231293 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.359175734 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.359771721 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357809468 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.360291771 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.360083608 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.359868725 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.36003659 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.360684978 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.359359916 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.360185862 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.360037687 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.359812163 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.359990188 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.360137259 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.358685346 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.35945967 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.361109898 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.361315831 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.359755954 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.360416836 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359696719 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.359518084 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.36037013 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.360323133 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.361556891 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.360370808 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.360885053 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.361262891 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.360133091 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.361655128 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.361123166 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.361885486 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.361817533 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.360863708 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.362989427 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.361394583 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.361523647 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.36139142 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.361973025 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362096016 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.362719086 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.362147911 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.362799063 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.361429357 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.363008675 seconds)
  done (took 85.566263841 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.362258975 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.361812209 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.362616924 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.360942497 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.364118936 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.362293297 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.363495628 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.363059432 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.363359946 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.363618997 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363599474 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363944829 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364905456 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363725558 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.364596535 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365007123 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363569664 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.364556201 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365230813 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.36317438 seconds)
  done (took 28.506158051 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.362018304 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.362426659 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.363410037 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.364226512 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.364336776 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.363448218 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.363776213 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363505189 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363921809 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36421409 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.364725104 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.366542214 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364599196 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.364319246 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.365546175 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.364388802 seconds)
  done (took 23.062433484 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.365149043 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.36607793 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.364787039 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.364808901 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.364421172 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.36500488 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.365251297 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.364675959 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.36479508 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.365217439 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.365141553 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.365847741 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.365561895 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.366183751 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.36500441 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.365162093 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.365388142 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.365292673 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.364931054 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.36575719 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.366054534 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.365533903 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.365612004 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.365148071 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.365247995 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.366965516 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.367198699 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.365722925 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.366875378 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.367484323 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.366146065 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.367234654 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.367022158 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.367266979 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.367093146 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.366602361 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.366719776 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.366320166 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.367511054 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.367085941 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.366296513 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.36722176 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.368019157 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.366718909 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.365881046 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.367054742 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.367699804 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.367324811 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.366635676 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.366305117 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.368165079 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.367712089 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.368612706 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.368950432 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.369111692 seconds)
  done (took 76.387313914 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365994065 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.368060851 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.368232864 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.366821901 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.367788872 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.368479961 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.368218633 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.370437742 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.369068539 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.368798603 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.368418875 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.370406897 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368002383 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.368798945 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.369682762 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.368847812 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.369223405 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.370940784 seconds)
  done (took 25.878398083 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.368873561 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.369154354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.369981793 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.36963168 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.368723885 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.371068209 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.369543746 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.369740986 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369388471 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.368908208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.369778871 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.370921008 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.369480496 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.371112959 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.369959927 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369682239 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.371032406 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.369745255 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.370453749 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.369367793 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.370385226 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.369867751 seconds)
  done (took 31.378644552 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.360554476 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.360692519 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.361236355 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.37918007 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.378610972 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.361122706 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.361844096 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.360823214 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.383395933 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.403338446 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.397706999 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.378338578 seconds)
  done (took 17.72907605 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372378659 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372253976 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.371559245 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369733318 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372412961 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373337736 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373048689 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372648235 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372392282 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372581721 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371247598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370448077 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371641579 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373543454 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371975658 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372776909 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372583368 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372242877 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373704617 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372485781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37218736 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374938634 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372703659 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373985791 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374078231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373420149 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374021724 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3743085 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372509355 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372486973 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373280453 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37387434 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375066241 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373061792 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373359682 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372806316 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372972656 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373918568 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374455357 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37553265 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.373823647 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373980716 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374213707 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374744235 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374437923 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375105063 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375055902 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373881035 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374499061 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375272098 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374546073 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374155919 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375581237 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374598134 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375520376 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375297854 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375614123 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376495621 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373810866 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375802825 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377216571 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37602121 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375727182 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37705652 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376206603 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376282262 seconds)
  done (took 91.917932227 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375794866 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.376803734 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376321323 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376974358 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376765423 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375719265 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375884463 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37656966 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376926514 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376907324 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375717552 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377526274 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376842366 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378206795 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375776079 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377080005 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376671183 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376243082 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377008856 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377397396 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377516174 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377074338 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377540789 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376894495 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377187423 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378083174 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377553649 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376737357 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376995728 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3776917 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377422985 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379031105 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37904972 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.378060779 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378677227 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378327074 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378733355 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37928614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379319927 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379317805 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379218697 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379888043 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378839471 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380015013 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379028602 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378004122 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380318328 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379617552 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378406593 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378486421 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378747434 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37979979 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378757826 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37909744 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378759198 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37964532 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379682553 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379977076 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380549266 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380556328 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37839617 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378878101 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380647166 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379664034 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380351939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380073393 seconds)
  done (took 92.208983561 seconds)
done (took 1856.497667535 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.535941447 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.492668295 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.369885636 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.379935303 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.369817517 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.372990104 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.382415255 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.370842711 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.371385934 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.372000804 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.37100533 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.598808713 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.406655279 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.371030781 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.370740589 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.468940146 seconds)
  done (took 27.85617256 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.399965227 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.379246347 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.504463553 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.380558766 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.401176707 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.586031834 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.440689315 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.376994666 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.571983174 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.401696374 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.37678395 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.404083826 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.376655126 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.375826012 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.401437065 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.584168387 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.668443097 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.374581313 seconds)
  done (took 30.25756381 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.906852975 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.417038701 seconds)
  done (took 5.58061866 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.397946792 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.377403649 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.379046453 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.376503297 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.367354461 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.36887108 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.374578976 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.374933761 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.371716488 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.523974075 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.383590575 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.390338309 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.377773203 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.37720252 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.385620472 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.424652183 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.528614619 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.385550917 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.383563245 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.381832366 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.376511569 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.479809749 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.423296819 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.389207649 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.518618032 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.380029548 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.386290201 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.385161147 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.50720008 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.387500867 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.377118675 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.377664319 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.380595866 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.371843113 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.945821124 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.37253394 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.404728215 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.388059835 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.387647072 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.536026917 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.378981667 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.384251967 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.388329227 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.944259415 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.496455016 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.516207891 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.383214387 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.38528026 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.380968841 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.444625121 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.38095575 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.382044787 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.439537686 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.26529622 seconds)
  done (took 88.147968645 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.388414031 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.372348027 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559440025 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.402235804 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.372679385 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.378240975 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.400816329 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.706710849 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.431649034 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.373947263 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.716284894 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.041888344 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.37898131 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.445793891 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.396483774 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.436536897 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.372493431 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.37206964 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.375679876 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.373207241 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.97306022 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.387842002 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.37891205 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.578835769 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.418431972 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.970854839 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.389326272 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.378314239 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.376766988 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.376118452 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.015842565 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.391861417 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.412872395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.375586952 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.691126592 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.831708839 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.789953135 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.378678703 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.388465255 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.378733233 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.409102294 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.963948737 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.795627413 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.375014309 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.376122036 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.970589952 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.37705552 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.386039585 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.379006797 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.646427558 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.377912159 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.37518431 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.388073058 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.381965204 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.375002442 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.411844979 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.427105378 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.967989068 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.375599821 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.378698343 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.384896484 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.375440005 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.385544212 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.376518347 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.380969759 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.809952451 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.562699436 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.377360115 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.798585484 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.004329922 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.381970942 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099152553 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.382667805 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.400747336 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.490544118 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.39473618 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.381285358 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961424407 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.412198515 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.376594139 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.778131504 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.379630518 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.706554599 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.398712054 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.380201868 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.992542406 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.393005698 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.422509224 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.377454448 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.412913406 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.38379592 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.379602017 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.690777463 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.444515423 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.377776422 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.378413098 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.380751999 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.37831992 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.378369777 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.389786743 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079885001 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.388284677 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.378696499 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.382557706 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.377971152 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.402398756 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.379263182 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.382010478 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.660836339 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.380458574 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.387675128 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.379724367 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.379924132 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.406337204 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.584580443 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.381966284 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.734715157 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.382548301 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.394303459 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.386419626 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.379749339 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.449881412 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.381137995 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.379638029 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.327334962 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.701609981 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.413674659 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.381419678 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.38256937 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.380529209 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.382158832 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.381726506 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.427815327 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.383756275 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.209555689 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.409781451 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.411836002 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.381199417 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.396155014 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.381671167 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.388662408 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.382660264 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.696560596 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.695396067 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.578898514 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.382893596 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.382360323 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.215158859 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.433835233 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.56878018 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.401574845 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.382502695 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.685896841 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.561371366 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.38242464 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.382046909 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.383212935 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.666468729 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.382561472 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729567525 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.028028129 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.383001537 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.383644088 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.197870413 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.130048947 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.384174833 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.384935345 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.706203212 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.402034064 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.383807168 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.383432097 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.384039412 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.384508042 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.386491715 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.391375902 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.389612442 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.384385379 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.456596866 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.58529839 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.403506057 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.394646237 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970329072 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.399884488 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.38513093 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.399873572 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.386079956 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.383858356 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.447800051 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.387711378 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.4241767 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.385014628 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.39533761 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007970931 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.384887921 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.40518935 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.583797044 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.16171081 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.384879411 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.38633226 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.385032897 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.441782177 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.003675611 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.387749037 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.74142127 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.395949343 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.42853566 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.387585013 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390183129 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002083334 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.386492362 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.385696188 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.161609477 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.385393381 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.168844817 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.387212334 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.391916855 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.085303358 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.387712975 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.388253085 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.38670497 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.387346968 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.69412543 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.386278623 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.416099509 seconds)
  done (took 510.778088731 seconds)
done (took 663.871702151 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.386458199 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.393694029 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.392867547 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.392281671 seconds)
  done (took 10.834146504 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.403512814 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.391845301 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.402764964 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.39412916 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.404012507 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.394266773 seconds)
  done (took 9.664598459 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.388907127 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.393499715 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.393537078 seconds)
  done (took 8.445111326 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.627188933 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.407544072 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.799028234 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.396281655 seconds)
  done (took 9.505071404 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.405714391 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.404234061 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.402874802 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.404631966 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.404866691 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.40749996 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.405890938 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.406863783 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.405782432 seconds)
  done (took 13.91937061 seconds)
done (took 53.638588226 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.656203669 seconds)
    (2/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.405809076 seconds)
    (3/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.776896777 seconds)
    (4/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.554471221 seconds)
    (5/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.371778941 seconds)
    (6/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.571921765 seconds)
    (7/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.559374141 seconds)
    (8/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.472850068 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.698623131 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.468765463 seconds)
    (11/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.380613925 seconds)
    (12/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.475183507 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.425387881 seconds)
    (14/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.862781482 seconds)
    (15/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.374534045 seconds)
    (16/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.511374444 seconds)
    (17/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.423694186 seconds)
    (18/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.626227556 seconds)
    (19/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.42844765 seconds)
    (20/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.436837126 seconds)
    (21/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.505639815 seconds)
    (22/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.428933815 seconds)
    (23/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.553376866 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.490335376 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.370514641 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.462731573 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.496807944 seconds)
    (28/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.569169922 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.475095489 seconds)
    (30/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.514641163 seconds)
    (31/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.793334789 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.397955331 seconds)
    (33/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.379459693 seconds)
    (34/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.531866865 seconds)
    (35/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.426449982 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.473484354 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.781133137 seconds)
    (38/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.42615461 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.395544207 seconds)
    (40/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.765277513 seconds)
    (41/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.610762258 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.469256441 seconds)
    (43/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.433606106 seconds)
    (44/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.390368515 seconds)
    (45/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.672914358 seconds)
    (46/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.564713616 seconds)
    (47/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.426859844 seconds)
    (48/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.478221974 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.396992093 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.704525073 seconds)
    (51/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.391919715 seconds)
    (52/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.384534563 seconds)
    (53/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.372457069 seconds)
    (54/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.728895672 seconds)
    (55/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.378105802 seconds)
    (56/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.436893612 seconds)
    (57/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.371706306 seconds)
    (58/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.602322711 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.56778581 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.73848976 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.428214111 seconds)
    (62/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.662057071 seconds)
    (63/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.462435464 seconds)
    (64/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.574638415 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.399309308 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.485099243 seconds)
    (67/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.512484402 seconds)
    (68/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.524315976 seconds)
    (69/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.464284837 seconds)
    (70/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.966489578 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.66709309 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.558525509 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.965555279 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.485469479 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.562323507 seconds)
    (76/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.484362826 seconds)
    (77/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.786814383 seconds)
    (78/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.380146221 seconds)
    (79/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.374650999 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.385127959 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.514236826 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.478446698 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.519008367 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.478718594 seconds)
    (85/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.373038169 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.374977407 seconds)
    (87/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.484281891 seconds)
    (88/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.501147478 seconds)
    (89/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.661468215 seconds)
    (90/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.483245559 seconds)
    (91/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.558127356 seconds)
    (92/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.479592307 seconds)
    (93/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.429401041 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.526044118 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.429411821 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.374497521 seconds)
    (97/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.467389862 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.623495177 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.475366302 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.554853324 seconds)
    (101/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.513180767 seconds)
    (102/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.632523617 seconds)
    (103/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.446170802 seconds)
    (104/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.37611359 seconds)
    (105/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.379914972 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.671202978 seconds)
    (107/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.625514914 seconds)
    (108/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.435846917 seconds)
    (109/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.665549359 seconds)
    (110/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.489851164 seconds)
    (111/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.445678082 seconds)
    (112/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.718979361 seconds)
    (113/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.376003977 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.581365464 seconds)
    (115/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.490249701 seconds)
    (116/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.376223015 seconds)
    (117/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.591425486 seconds)
    (118/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.632059887 seconds)
    (119/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.495627823 seconds)
    (120/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.590063867 seconds)
    (121/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.520022733 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.573850042 seconds)
    (123/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.706972176 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.509955077 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.562205443 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.376247369 seconds)
    (127/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.7930564 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.493167708 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.535866705 seconds)
    (130/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.375168499 seconds)
    (131/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.455563237 seconds)
    (132/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.378165899 seconds)
    (133/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.399898365 seconds)
    (134/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.656075472 seconds)
    (135/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.420671546 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.67199514 seconds)
    (137/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.497569225 seconds)
    (138/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.485722818 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.468144678 seconds)
    (140/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.538748518 seconds)
    (141/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.667998949 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.533835726 seconds)
    (143/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.630012398 seconds)
    (144/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.594512383 seconds)
    (145/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.397143029 seconds)
    (146/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.709607419 seconds)
    (147/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.553100842 seconds)
    (148/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.398552615 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.563299114 seconds)
    (150/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.637815936 seconds)
    (151/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.47582578 seconds)
    (152/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.411524402 seconds)
    (153/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.469753595 seconds)
    (154/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.518682979 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.431940675 seconds)
    (156/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.37933398 seconds)
    (157/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.384175308 seconds)
    (158/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.521990811 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.44053977 seconds)
    (160/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.474686469 seconds)
    (161/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.473942134 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.510550666 seconds)
    (163/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.420041412 seconds)
    (164/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.439780869 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.509773163 seconds)
    (166/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.740825962 seconds)
    (167/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.433044315 seconds)
    (168/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.380990595 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.523620298 seconds)
    (170/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.489063706 seconds)
    (171/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.405325713 seconds)
    (172/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.526386987 seconds)
    (173/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.386816397 seconds)
    (174/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.386271806 seconds)
    (175/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.475929123 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.527405184 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.609283568 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.530901883 seconds)
    (179/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.62026191 seconds)
    (180/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.394259535 seconds)
    (181/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.628725764 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.431467039 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.53915229 seconds)
    (184/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.59515973 seconds)
    (185/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.729477258 seconds)
    (186/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.609138725 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.563897046 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.510406322 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.527191827 seconds)
    (190/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.430446817 seconds)
    (191/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.398909331 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.576315289 seconds)
  done (took 340.514630962 seconds)
done (took 341.785751608 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430919249 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.502001309 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.411445846 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.410901451 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.411879244 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.418109043 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.433782507 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.412409146 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.427471269 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.428082066 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.415955319 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.419828826 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.427110664 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.423652693 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.446875147 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.411621097 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.411831317 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.42330719 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.426982968 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.428801798 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414245215 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.41367419 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.442021611 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.413609474 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.421973823 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.420251043 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.419405981 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.419681956 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.42041365 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.429508346 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.406259829 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.419616171 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.431142245 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.429983835 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.415890427 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.42420113 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.413697266 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.501233332 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.434843047 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.426840628 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.422164121 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.430570028 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.41891971 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.419106793 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.427811548 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.442385591 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.4217022 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.428778153 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.405517739 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.410780084 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.435459511 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.425982137 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.42451473 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.412179954 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.421761815 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.430723813 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.426757241 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.434786384 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.423295883 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.415185946 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.448891206 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.435225187 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.427660916 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.42366944 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.424507659 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.432410276 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.425228656 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.434006563 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.422811207 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.419126664 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.418245797 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.4239265 seconds)
done (took 111.942353323 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.539022674 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.412254277 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.574361752 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.423694164 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.584629747 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.541271895 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.424469744 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.424331602 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.423542706 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.21225259 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.423886648 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.424116888 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.412798803 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.425482751 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.537317869 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.424198618 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.423399483 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.112001332 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.425215093 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.555254491 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.415932364 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.424556978 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.424563934 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.21967336 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.413325661 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.410121744 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.556922563 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.425138265 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.119156716 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.409399317 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.412310881 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.119259096 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.557438717 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.444960979 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.434944346 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.435375489 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.587384446 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.430467489 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.542874876 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.542000656 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.580296736 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.464856941 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.412934239 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.416791248 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.429386113 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.427975744 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.426751197 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.457435985 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.41757336 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.429342361 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.117108716 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.436546651 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.437911463 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.428924823 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.428804656 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.448201586 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.428083495 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.430386091 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.561088136 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.428121985 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.544101666 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.227242793 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.216083981 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.429394813 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.416686836 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.430863311 seconds)
  done (took 114.211325385 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.488649751 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.495473206 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.539817247 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.421457919 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.468533815 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.544518793 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.421370876 seconds)
  done (took 11.673824433 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.429738249 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.43009771 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.470462556 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.469389721 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.429716008 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.596370693 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430895711 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.434321616 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.430027265 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.472469607 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.432230503 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.431780466 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.439775838 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.421404387 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.473015136 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.43424681 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.540160575 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.426120985 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.435506801 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.578655454 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.430834141 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.441461896 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.472881487 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.435184386 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.433040453 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.430592486 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.206826441 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.433102289 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.43329479 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.435161512 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.432380985 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.490022952 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.432548634 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.422407747 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.433235681 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.53898021 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.437636876 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.433319319 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.433678102 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.426617921 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.433967943 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.433328585 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.434487236 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.434481142 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.433893577 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.452740634 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.435017 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.432530685 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.433093459 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.436308441 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.477477453 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.435925128 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.436467798 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.436111591 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.48202562 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.447386436 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.436592011 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.432053555 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.436992813 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.434905038 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.584638976 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.474900386 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.437190601 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.475589962 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435942462 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.438391225 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.436455345 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.436362824 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.517989318 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.435687711 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.47601332 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.434735344 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.611518227 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.453571895 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.43948766 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.430713772 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.43571746 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44179059 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.423274829 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.434511144 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.438385928 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.431390192 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.43578856 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.439014501 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.436971628 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.587917703 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.538389191 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.434913274 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.448071756 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.442009808 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.440368062 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.480631912 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.438673532 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.441461667 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.482602036 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.551369399 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.481371044 seconds)
  done (took 147.161624707 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.443870247 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.445671919 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.439190061 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.458671944 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.428465555 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.429676494 seconds)
  done (took 9.949855394 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.433438172 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.445524852 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.439969633 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.441628271 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.442114904 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.436032925 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.440162021 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.430744547 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.442750408 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.438670563 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.441401759 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.443515795 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.442216422 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.444145494 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.439643852 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.438043774 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.441454805 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.438047217 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.441231115 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.440729905 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.4291473 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.440619627 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.442065966 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.434659236 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.447990148 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.438390873 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.452801802 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.440198485 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.440121318 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.438979229 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.442826304 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.442640172 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.43668866 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.439881883 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.443809706 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.434801995 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.442811361 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.443011071 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.442946712 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.442032113 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.440466068 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.443559938 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.442641907 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.440680354 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.43362228 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.435587943 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.445069404 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.455256156 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.443362485 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.442951066 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.444325256 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.440504551 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.44471565 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.44671466 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.436143661 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.436868804 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.444840627 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.443216312 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.441959849 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.433066019 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.44564075 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.443559892 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.434175395 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.445199345 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.441551318 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.444939431 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.438469152 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.446886306 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.446959947 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.442278415 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.443356745 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.442724975 seconds)
  done (took 106.075948213 seconds)
done (took 390.359637056 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.789551782 seconds)
  done (took 4.097533681 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.543821957 seconds)
  done (took 3.851463832 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.361227176 seconds)
  done (took 25.674603118 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.438009966 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.432435839 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.429621579 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.433528365 seconds)
  done (took 11.040428306 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.965193598 seconds)
  done (took 4.271521123 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.450884197 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.436766682 seconds)
  done (took 6.197533213 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.715710919 seconds)
  done (took 4.021339936 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.258304646 seconds)
  done (took 4.570134131 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.45401596 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.444650673 seconds)
  done (took 6.211151191 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.411697724 seconds)
  done (took 3.722431273 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.52035843 seconds)
  done (took 21.830537422 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.441575115 seconds)
  done (took 3.749493049 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.462813001 seconds)
  done (took 3.773676852 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.497588002 seconds)
  done (took 6.807021694 seconds)
done (took 111.128641635 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.432816805 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.431632078 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.431186 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.430863497 seconds)
  done (took 11.035021848 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.510962967 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.507575525 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.521571864 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.510252155 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.505619935 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.515692532 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.474269486 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.49237895 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.503681507 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.49700739 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.516231993 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.501055067 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.514547417 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.470365167 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.496049953 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.51561786 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.502573538 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.520638467 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.471737089 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.505425838 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.45101473 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.508641343 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.4987685 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.451371851 seconds)
  done (took 37.269892429 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.936393839 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.51442276 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.598854835 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.494245154 seconds)
  done (took 7.854199919 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.55651505 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.556639667 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.572882137 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.618607847 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.657201882 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.571411744 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.478538371 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.469394198 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.455509418 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.556221701 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.636636611 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.550822567 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.768618856 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.449777531 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.765787794 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.448749896 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.452796781 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.55291768 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.603547276 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.628328771 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.449269437 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.554024948 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.568361502 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.554104429 seconds)
  done (took 38.790752343 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.463916075 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.467987781 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.455050567 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.468863691 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.455268906 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.454818174 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.456897674 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.459772577 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.4539063 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.452105133 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.453676962 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.462797645 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.453499055 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.455912078 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.459076503 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.452080874 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.455729635 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.461487638 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.458015836 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.450362061 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.451442939 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.458142444 seconds)
  done (took 33.37485647 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.4374718 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.43548921 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.792010942 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.690546649 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.435055698 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.439851163 seconds)
  done (took 14.544162429 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.525627642 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.681531313 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.443744319 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.859979443 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.939720235 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.444106315 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.443574928 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.72021714 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.08323824 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.094465377 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.513236765 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.522837738 seconds)
  done (took 21.588587885 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529582689 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446789129 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.451419168 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499454646 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451812087 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.447911539 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505032725 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.95427009 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.452169736 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719477599 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465985648 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53450596 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.697685664 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452878642 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.452450706 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.414817079 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70365325 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006729078 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448149759 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447114604 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482962075 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.457504754 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45094465 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.694060689 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453034345 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446636055 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.706204027 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.445891193 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779740482 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758241882 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758814007 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452745259 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722253657 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932050237 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558880379 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6851955 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450686186 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.452356474 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.427659301 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.452426641 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454935541 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.455181636 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752568888 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457021687 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.447443867 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455206807 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994914059 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.461004753 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.445607433 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450095251 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757398905 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535851385 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.452270647 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.446614744 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452600934 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453191875 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.452330792 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579260198 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087898501 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464971076 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454723311 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.452896661 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.437670426 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49216132 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16984738 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.45510343 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.454775532 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.452735596 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447228878 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.452864079 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474883715 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449924072 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.468103073 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447160222 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314376641 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448593953 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455872837 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041929887 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456466473 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.453989632 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676437998 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448538418 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448527912 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.448366063 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448106374 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.300076306 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462877698 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.418286016 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515551303 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964395827 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.691802057 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477089403 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477377803 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.672028947 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.419172998 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4482305 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.449215326 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45801265 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471440955 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.993291788 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454560516 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.456342259 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700367906 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.661188311 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448815193 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.444384117 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99738889 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463558488 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.479708117 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46657383 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.696000878 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.18029972 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772240739 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460937394 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491727559 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.452124473 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362714421 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465208566 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.461904555 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.450636629 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775503277 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.384800722 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456582557 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525622528 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450262802 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.451377468 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455838753 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458304312 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.451234453 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.670167345 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473435171 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.762981619 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.459745435 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45163239 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.455264768 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457118761 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.457274775 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.674218158 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461036494 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732145137 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451866038 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452940507 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453261499 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.674226252 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.471873799 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.460134079 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.79518276 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465028493 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.470336795 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766385162 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494499435 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567200722 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48718401 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.46353349 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.707143165 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.459689691 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.46134588 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457346041 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460496838 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459821275 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.461314281 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457592909 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162599006 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425122366 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461767904 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453809598 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.469878707 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528397686 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.462332941 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.692553074 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.469123184 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459144177 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.461079736 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.457480692 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683640633 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7632365 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.461840896 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633603496 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.990583466 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.160959996 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472094649 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.454387851 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.456122948 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.454793141 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458081128 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457897128 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456955357 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696196697 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776452414 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.477160237 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.161908071 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459280462 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.463057982 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.469574417 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764784752 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.469086895 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45762948 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.455644529 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46578005 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476876668 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.772621211 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684941076 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.472339366 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.456975455 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.975753729 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.464255674 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.459096383 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.457789079 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484713266 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.466029734 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053449032 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797006064 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472403475 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768998794 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473981484 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.480708522 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.458382767 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4606043 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470857905 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.488149945 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466632621 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.699011974 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472097447 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465123012 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098579961 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330929243 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096322686 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467568496 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.467667169 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463739488 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000857047 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463727869 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458531122 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.743075147 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003104966 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463053242 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996346196 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.463481973 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.357489164 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77564526 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693525586 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46249802 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.466404115 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781072093 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.677635158 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486598619 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475761812 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46534329 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.430091361 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049299246 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465041718 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642264203 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973363624 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466388943 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468222629 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.492291913 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.466795496 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92774539 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.465858414 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460443327 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463598204 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468903286 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060130432 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.46969369 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460547206 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183314484 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464357745 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.011483544 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466940944 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.705256584 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.78142676 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.756225011 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.467972429 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.470680478 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.712652161 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773478093 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4684665 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463293715 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106217018 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.333034802 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.470105976 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463740219 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376306842 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479705968 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806404479 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.481701794 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.467424279 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478498142 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463028138 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463833434 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.464007971 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473679088 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43767251 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011271506 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.481939239 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466512892 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500407263 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468679773 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.711477526 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.481284497 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.17132478 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697137164 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458110734 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51793761 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.470130717 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47322144 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.441312124 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463962237 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463789864 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537070679 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.692187755 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.485406658 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.438660002 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503548278 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.681190204 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.464177231 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.479259022 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722820157 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.470315456 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.471632304 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3456357 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497249184 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.471125243 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471234795 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.455404662 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533325552 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540296581 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709088535 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.783355154 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.784567447 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93916207 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485067048 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47260551 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.482980396 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548657363 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46550856 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.473112522 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.471539984 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172250262 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344916521 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182619505 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784826771 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.474617919 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466921729 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466611359 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.7077898 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468467785 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745227254 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467091453 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.466644103 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489873331 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478891241 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483162005 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686723586 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.742347767 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467950311 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477515187 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472316967 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.467903167 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784938053 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.687998598 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021975159 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07073387 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46923868 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479375383 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025705127 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750277052 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470324553 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470218745 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469194767 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.482942008 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.472535316 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.480877918 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480327924 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698793429 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782719651 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96993808 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.786084314 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.499856594 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.346754675 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470043654 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.722875263 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30762712 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.713075842 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191854679 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297477838 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.726319927 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545941013 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715783014 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.477947203 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709494492 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.486972288 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.475565422 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472519807 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471236045 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.471190391 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.783802735 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189403633 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.727343943 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.477881344 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.484371704 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505328601 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.716417056 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.699757765 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.33027708 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.698941311 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791089739 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484794126 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473110152 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188945748 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.791034653 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478159311 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.478717966 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727043792 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479518659 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508780293 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.347166333 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.472390698 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078772643 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.686429458 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494240918 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471681888 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310153043 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187893892 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.476888497 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031271884 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476239907 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492218854 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754829387 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.481030371 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.472853166 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767174418 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.480506326 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473085513 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727544677 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.188418029 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.380704233 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.499177766 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485867874 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.481989743 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476353209 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534536373 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479718808 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484417408 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.924640472 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481073529 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475858165 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489210068 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.492181808 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48161414 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.484364889 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477503126 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.484429479 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.446409393 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.451625461 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482540299 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616038556 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090778358 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479319405 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.092228951 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.814664894 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.726421965 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492880346 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.45236877 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.483113915 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476314622 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478292661 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479564649 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485379307 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087206795 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.479314197 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.799044124 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.48926949 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.691264684 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691186206 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.49500815 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730196139 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492714376 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504125459 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.446231249 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476954306 seconds)
  done (took 1027.90584716 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.481206568 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.521437893 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.520026466 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.54618368 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.49708226 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.614113065 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.573400022 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.587448061 seconds)
  done (took 21.679232831 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.473382314 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.478412221 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.478524601 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.484413138 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.474975509 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.040500198 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.491936372 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.47989041 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.494178328 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.480151625 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.493573793 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.185809254 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.480473964 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.479305519 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.476767587 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.48678509 seconds)
  done (took 34.330813757 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.662826735 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.646010398 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.92483472 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.538706228 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.488117371 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.490161769 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.832250256 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.496019568 seconds)
  done (took 28.42481277 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.485499162 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.485956351 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.490453788 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.485831342 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.48800184 seconds)
  done (took 8.779848651 seconds)
done (took 1286.889656226 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.485627 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.486609403 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.486748723 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.485381346 seconds)
  done (took 7.287262646 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.450334444 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.450241169 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.455003044 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.472366773 seconds)
  done (took 10.169285081 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.906596888 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.111858734 seconds)
  done (took 5.365065712 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.487703864 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.511739357 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.50621301 seconds)
  done (took 8.850541724 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.78956749 seconds)
  done (took 3.136621594 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.469724174 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.478222154 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.507083979 seconds)
  done (took 8.80066734 seconds)
done (took 44.949680285 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.474124325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.238871806 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.629087426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.473109885 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.634810713 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.629987102 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.750015121 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.486252004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.473008639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.473332408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.474058348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.636067117 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.735518857 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.240530387 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.740872897 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.242234122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.637608127 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.483117744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.484641183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.474051872 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.753389942 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.487583296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.473094474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.489153536 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.637146035 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.62013631 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.472429881 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.243749459 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.479303395 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.472996285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.625510707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.488235961 seconds)
  done (took 85.998019545 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.473287109 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.481765751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.473378875 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.493183588 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.492812051 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.476690414 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.493966574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.474705511 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.481285473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.473502212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.475035002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.509526091 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.476479591 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.493474868 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.47466867 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.494232887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.475744901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.475391009 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.487546927 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.475704349 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.479377221 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.475011344 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.482965154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.475009867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.476611449 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.49628017 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.494815945 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.49777132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.476904906 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.496547177 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.478567009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.497127064 seconds)
  done (took 80.824716148 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.475368023 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.476534677 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.477609856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.496939357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.478846169 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.483260221 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.496053657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.476101858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.499560465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.493434143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.478356817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.476423629 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.47900383 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.477631449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.477946776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.477112715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.483050028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.481515856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.49788391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.493062187 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.481814807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.47781026 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.478021282 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.478297256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.482827504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.477350335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.479444309 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.479033616 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.478437213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.478415402 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.486337383 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.481411184 seconds)
  done (took 80.781241658 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.722488087 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.493862835 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.497367986 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.488396591 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.498943349 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.493945698 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.487378366 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.730439935 seconds)
  done (took 15.760461202 seconds)
done (took 264.712486145 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.489392347 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.497041901 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.522301988 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.502507816 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.510996409 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.517884068 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.717852369 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.515498059 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.705616576 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.491085883 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.525168926 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.489741877 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.446030163 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.639772377 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.482993847 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.503180984 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.487846137 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.498096743 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.491371371 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.74457071 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.516407094 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.492859331 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.49183286 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.497546777 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.468190268 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.567595093 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.5665838 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.659509859 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.619994665 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.562536592 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.486075642 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.50662826 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.509575727 seconds)
  done (took 70.074737216 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.489113422 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.49673257 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.499956786 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.499191025 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.498007383 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.498294602 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.487932759 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.497827322 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.498013099 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.498904919 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.497365102 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.500426575 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.498759306 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.500191427 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.49786821 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.471089707 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.488930522 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.497151221 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.488531822 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.472342113 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.500302255 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.49829798 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.500968393 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.499518768 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.499033901 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.498219746 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.49869039 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.500438968 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.500176674 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.499184991 seconds)
  done (took 46.229146307 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.500272532 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.501860278 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.496049003 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.501603464 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.491564535 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.494967318 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.846984725 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.506288734 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.494528813 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.49484172 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.485225028 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.507618848 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.546886972 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.49884289 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.497695788 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.500041808 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.499301108 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.492577755 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.485452884 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.512705842 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.855143621 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.505366777 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.836546749 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.50761098 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.495720224 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.493177226 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.498169078 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.484429113 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.500872278 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.486742158 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.445729757 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.846505766 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.49047626 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.487651215 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.453249256 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.508331187 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.502401627 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.491191417 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.501897542 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.494968276 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.849808576 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.500882516 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.504883727 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.491513096 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.503714281 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.503803402 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.488498864 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.493871311 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.802744546 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.505322085 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.493986237 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.501916992 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.505718389 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.495662765 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.787239166 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.50275742 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.49805631 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.488265789 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.499904517 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.850403182 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.509254043 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.496398023 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.488585075 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.502524673 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.489930266 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.504785385 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.510555211 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.498254129 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.488576565 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.526825875 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.490316551 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.504489338 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.504174756 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.491693061 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.49629313 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.514673817 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.504408508 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.491389517 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.494060074 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.848390813 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.504531427 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.49708346 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.86448419 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.505860817 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.508238156 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.508832776 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.507273252 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.573062352 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.849687914 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.475087128 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.515652457 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.514031133 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.858026328 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.512334004 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.501150956 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.492448829 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.535026294 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.507178671 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.509733432 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.498636149 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.504715869 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.514752011 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.493973776 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.508781948 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.857168239 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.509670924 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.508899792 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.504568379 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.576046962 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.50990962 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.513874918 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.503056744 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.864064601 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.509847254 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.509564318 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.493653219 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.516009234 seconds)
  done (took 219.860222261 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.512627954 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.496597763 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.498015367 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.515387781 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.493456345 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.501399699 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.495001143 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.496590942 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.500934765 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.495863857 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.497056982 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.504061465 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.504147715 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.493187875 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.496661647 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.495054866 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.493469494 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.502455773 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.494817387 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.493696639 seconds)
  done (took 47.346048915 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.512659009 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.193257927 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.156772131 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.516091635 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.510876896 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.502706453 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.566155139 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.509791303 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.510889088 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.880494035 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.719175436 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.515555562 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.511722403 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.511346703 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.157794784 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.496978803 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.878566433 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.211933679 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.51535419 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.204915103 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.488937065 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.512723993 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.500553124 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.203493662 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.891815614 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.863482793 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.576088704 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.207842466 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.516128856 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.509538482 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.204017526 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.51983604 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.503170923 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.190909913 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.517369134 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.52623093 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.513458668 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.570726432 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.574325958 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.859165181 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.185081377 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.865649295 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.532856893 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.677193775 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.516243888 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.485643164 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.222599825 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.52220722 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.4856034 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.518672735 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.522907172 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.177379128 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.514845625 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.179725167 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.521793109 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.515847858 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.215487466 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.182245924 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.170735634 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.717068578 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.507393985 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.860340224 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.521896927 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.220205443 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.523192766 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.519747408 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.516213452 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.715421133 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.209479675 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.872831583 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.886670649 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.891930727 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.522786795 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.582897418 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.5169473 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.888716333 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.588670793 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.926646133 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.892552331 seconds)
  done (took 139.093903359 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.83227923 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.640769864 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.968788858 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.157662612 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.09679977 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.665447132 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.644911123 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.783912104 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.519004266 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.624553715 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.32015276 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.618589058 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.379627984 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.590976123 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.626790533 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.645402438 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.988164547 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.526806508 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.288789222 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.287284545 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.519602926 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.631817915 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.336273277 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.923706704 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.522279837 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.321930082 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.522422285 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.110783158 seconds)
  done (took 58.468969644 seconds)
done (took 582.420644561 seconds)
SAVING RESULT...
DONE!
