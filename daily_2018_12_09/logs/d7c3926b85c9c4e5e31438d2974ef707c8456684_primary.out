cset: moving following pidspec: 22063
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.307468833 seconds)
loading group "string"... done (took 0.557523549 seconds)
loading group "linalg"... done (took 7.586385124 seconds)
loading group "parallel"... done (took 0.168143172 seconds)
loading group "find"... done (took 1.170107032 seconds)
loading group "tuple"... done (took 2.072330118 seconds)
loading group "dates"... done (took 1.314654137 seconds)
loading group "micro"... done (took 0.242740293 seconds)
loading group "io"... done (took 0.969258025 seconds)
loading group "scalar"... done (took 40.911215899 seconds)
loading group "sparse"... done (took 13.489719567 seconds)
loading group "broadcast"... done (took 1.036500823 seconds)
loading group "union"... done (took 14.225705748 seconds)
loading group "simd"... done (took 4.769145661 seconds)
loading group "random"... done (took 9.671077394 seconds)
loading group "problem"... done (took 2.004804582 seconds)
loading group "array"... done (took 22.647187832 seconds)
loading group "misc"... done (took 2.035516361 seconds)
loading group "sort"... done (took 3.452049152 seconds)
loading group "collection"... done (took 19.593942774 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580043324 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14213255 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14965582 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131281599 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205782556 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157142402 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157131126 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098861932 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.987282316 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175255891 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153515161 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52899295 seconds)
done (took 5.206347438 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.219573576 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094882833 seconds)
    (2/2) benchmarking "String"...
    done (took 0.1041476 seconds)
  done (took 0.878332293 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077922916 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145492447 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094953216 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078229574 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095233693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078584547 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09663831 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079011174 seconds)
  done (took 1.353037924 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087157079 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097328452 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081638052 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.09656554 seconds)
  done (took 1.053883824 seconds)
done (took 4.278195935 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.741128578 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274188657 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205587956 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.470119377 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.1963376 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218409577 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679965228 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344593109 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254029081 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100055926 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14431671 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387685498 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137491905 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.730185725 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089652449 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123647703 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17815085 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450276963 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083294171 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110474072 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117237219 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141896746 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129278499 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091835526 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18549732 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082339059 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194068893 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109170587 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080152417 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275667711 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200464234 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698072261 seconds)
  done (took 10.950793114 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111263673 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13418223 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098219691 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138196385 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135307739 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099870918 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0855259 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098344469 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124924859 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182565375 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114177203 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136951691 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09537287 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08303338 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11829508 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246693832 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119731785 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09926946 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10114958 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089305285 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137313368 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112725746 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108994306 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09392681 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166490563 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221737781 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111041611 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12554783 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096772053 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112145517 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14451354 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143447479 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0942472 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080111113 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175062605 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12530476 seconds)
  done (took 5.166629145 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.09346194 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189595282 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121228395 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169928913 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080631895 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143035942 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095171367 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113538143 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258705159 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.113328377 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178391261 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140469679 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100218008 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097637005 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081707466 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098416906 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.579705414 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15771364 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135802054 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096386246 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104509936 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099458605 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373037947 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087132342 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096116677 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085805684 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084088846 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163430869 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083081846 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.15420593 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12352759 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100554908 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131257656 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198965326 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124107401 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11779032 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096621439 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07775211 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192133729 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.110684036 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105542089 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097002973 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103365408 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137947903 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134632137 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096726457 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081874459 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20808219 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09685374 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11518336 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.940051498 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18300289 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088797288 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096184181 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324058967 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098646032 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097484161 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082647 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281522163 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191132005 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096927404 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082151007 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100452483 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080242908 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101566591 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383914746 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100011656 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.732238885 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08402809 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108715979 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08453712 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098404179 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.12465507 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089142287 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106150595 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098038609 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098333352 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081493404 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096811961 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096363914 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082424037 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107267334 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086029306 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09797794 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162028492 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078833715 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11553924 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12555226 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084785396 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097485384 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116213043 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101780803 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100105698 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118696865 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101242297 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109480475 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083286606 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144928643 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096035661 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.144596816 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096665478 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079095199 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127473657 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103379281 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133170422 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111746706 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083151718 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104633656 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078193397 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097427073 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151049064 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09445285 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082333404 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100705876 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111198023 seconds)
  done (took 22.510273016 seconds)
done (took 40.405126608 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.319087054 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104376451 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106546881 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106594743 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104043283 seconds)
  done (took 1.494045271 seconds)
done (took 2.225025382 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.32365253 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193910818 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077093754 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165831393 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093921072 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170584825 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161838001 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111494225 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219759103 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077618554 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179714991 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077973748 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095161661 seconds)
  done (took 2.713974136 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09647326 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116822578 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08424653 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112872089 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077756682 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112606832 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094591954 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119104429 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111560668 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086487424 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095726721 seconds)
  done (took 1.843874892 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094247639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114311205 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084097997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11283709 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078619111 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112935732 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094100473 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118685547 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112429218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087493463 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096190316 seconds)
  done (took 1.831827059 seconds)
done (took 7.114517668 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093272347 seconds)
  done (took 0.816303885 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.928487463 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.844158807 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112406699 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150618102 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316711197 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191439973 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.479493313 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128142268 seconds)
  done (took 11.068391327 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.113704942 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.112513743 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10291127 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085540023 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103325845 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083306497 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099309616 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100204853 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085476178 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099903767 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082663118 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104221489 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100968016 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086937954 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104678 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084805359 seconds)
  done (took 2.355632361 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118260291 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116619959 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105898924 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108748712 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08765578 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104719158 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10667404 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089966491 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103277007 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105356141 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092223813 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107784719 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104866309 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080824196 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107896128 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109483606 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086777088 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108136704 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107974314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091531771 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109392547 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097293673 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087671679 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109406643 seconds)
  done (took 3.291083732 seconds)
done (took 18.25450022 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160931327 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112284333 seconds)
  done (took 1.01459127 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097557097 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116020397 seconds)
  done (took 0.954943856 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09932814 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097084666 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124426581 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111692006 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081684725 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099034497 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.1219622 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082109256 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099696978 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082264038 seconds)
  done (took 1.743991975 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083761052 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112440866 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103616644 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.0963845 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107619045 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097241656 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08988711 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102611359 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113416658 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078556973 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104598724 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11637697 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087001292 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117995088 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106978779 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084932853 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103893892 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100702167 seconds)
  done (took 2.558828639 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081485656 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099619286 seconds)
  done (took 0.932554363 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083973786 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096384583 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082993675 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099572995 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09578815 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077703052 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095887859 seconds)
  done (took 1.38297329 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486364032 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13626462 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260606072 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086592498 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122072071 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.306690536 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099764705 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085802036 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106290266 seconds)
  done (took 2.502741992 seconds)
done (took 11.833188237 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094702005 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118444939 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114691421 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.473065644 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109870941 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09993447 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.150324041 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253310256 seconds)
done (took 2.160476765 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.146329192 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608509781 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.426243404 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.230097767 seconds)
  done (took 2.014492723 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.406961383 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097841857 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082630077 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083027068 seconds)
  done (took 1.425760117 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081496224 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101796025 seconds)
  done (took 0.941271335 seconds)
done (took 5.2902857 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082308022 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098928539 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.115197262 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098752085 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082515882 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098931473 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079441356 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099139369 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079252394 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099476559 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098700513 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082050312 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098856624 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081834034 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0972298 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080038235 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099181844 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079779835 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097501937 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079529047 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.100571957 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082199239 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097146834 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079767254 seconds)
  done (took 2.983137822 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101885082 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099682482 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106279893 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08828693 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105229983 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088140308 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105696795 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101152566 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087712189 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102567485 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087205247 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.104405317 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102817057 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087439116 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102351768 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104392513 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088649048 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100830069 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084737252 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105634351 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105685496 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082811531 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104449196 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088135719 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104712535 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104118715 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084167983 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101071748 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105010941 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086937357 seconds)
  done (took 3.6824916 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087903059 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097641 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080482282 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10501799 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079695363 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100525159 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079430811 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098921797 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08111187 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09853639 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081176603 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099013879 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080000894 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099270783 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080509926 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101360501 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110279256 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080682021 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096687409 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079946728 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101159113 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07997816 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098784378 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079321265 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097809446 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079314738 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09806062 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079036526 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098641645 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079388878 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101180639 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083359061 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098885243 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085247727 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101422679 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078920637 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101638632 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078927152 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098129451 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079453058 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097170303 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097114913 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079580115 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104744131 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080081797 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100936884 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07978511 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099301372 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080566615 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101286733 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079520326 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097896543 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081782864 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099428516 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083364541 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097084522 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080640041 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.09869762 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09931564 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079474073 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097257819 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079901499 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100752886 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080809771 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.115065756 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086433116 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098108134 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081646778 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099177312 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083001668 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101293998 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094100798 seconds)
  done (took 7.316796648 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083557163 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108831563 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082029446 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100464793 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078101958 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099226184 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102457894 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080524803 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100245434 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087329537 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09895083 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081877421 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099972245 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110715106 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08107593 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100068492 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087274955 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097074698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080615011 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102909639 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080504224 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102725396 seconds)
  done (took 2.812247196 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213448656 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108719153 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145171485 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11026088 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085241921 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110081918 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105503938 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08875768 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105458487 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086516039 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103321136 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105649854 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084778825 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103714402 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102859862 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086321774 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105734037 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086438814 seconds)
  done (took 2.709848164 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.205074308 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100351776 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103476078 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100120451 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10060374 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085396488 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10769734 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111647168 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085525276 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102132613 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092890634 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103561083 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104114014 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083067674 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10453964 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082901197 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104579493 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082980162 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11093685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10710661 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089739988 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110862068 seconds)
  done (took 3.048304987 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097610994 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102714226 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120861853 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085633212 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098341074 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081778319 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108903801 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084013593 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109835701 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103076186 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083224352 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100571848 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089748281 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102155385 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107078859 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083026669 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10341673 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083085848 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103276095 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079551018 seconds)
  done (took 2.702066162 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105147091 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103228517 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10179716 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094382525 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103910245 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084371279 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112571343 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103053847 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084050533 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128957925 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103351556 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084602365 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111248936 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108143266 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10187274 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093395583 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112054061 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112167181 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084677192 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103522032 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12785716 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084410754 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111972335 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103117262 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084175512 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103693653 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102977434 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090665411 seconds)
  done (took 3.619612232 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082800035 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101406294 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084035317 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099923551 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080879666 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099491631 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080091604 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.100157768 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083640725 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099534619 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082995106 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102280298 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082774543 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101491026 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08311239 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102362144 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082711115 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099391847 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080563157 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098787814 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083027371 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102316261 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083106134 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099740881 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08007154 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102164236 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080443419 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099477904 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083292941 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09986652 seconds)
  done (took 3.517854005 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093664672 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109819568 seconds)
  done (took 0.978848384 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081145942 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118253398 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080916983 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106402835 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088888831 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102854475 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112586607 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088573053 seconds)
  done (took 1.558450469 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098649091 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114305222 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086281108 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116695688 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113779359 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099301138 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175345298 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10449019 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089436927 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101292638 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116823264 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08340554 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109891774 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083558414 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108929429 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090026486 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101522829 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109449932 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087744673 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10288578 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086179027 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113620748 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089511916 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099469606 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104778862 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094068229 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116341484 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085363005 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106157782 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110556863 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08986624 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096880554 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084321577 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10390639 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082119688 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112508636 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121142328 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086631217 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11367247 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085288259 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115035382 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098609362 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088462122 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109316925 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094882329 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104196051 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104516444 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079120064 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100758332 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086383913 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098210166 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083918436 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097621251 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092397579 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106256088 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114426762 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08324508 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104823904 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087070064 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107006635 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090610805 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105184028 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104777096 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084374877 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110646623 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089119344 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11410496 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079688237 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097693474 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082174613 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113189943 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127748191 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091854691 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104011413 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105438602 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082836924 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107411163 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085956217 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110307526 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090942245 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103665825 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109651059 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091428782 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101747187 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084405954 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110157647 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098375317 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084172569 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098239771 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118234602 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081262585 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098237225 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079075907 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113397724 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086432096 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101186044 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080076308 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109550458 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075910907 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101242083 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102360616 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082755013 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112760072 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105944112 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087816559 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110356809 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.0893516 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101255048 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103412268 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078457508 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102469926 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084182063 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109211907 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076558507 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104424143 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083300438 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102342168 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10965621 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080599353 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101261166 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09296466 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109806218 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083024661 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09999149 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087225185 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102969509 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108032632 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093467795 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103182479 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080008239 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099307724 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088817252 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104693683 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10827099 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091057762 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106046637 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078961694 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102590486 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108516557 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095878139 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10537429 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085957775 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112163177 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085344946 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102899399 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111146825 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087665151 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103022162 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092241314 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104961267 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079349291 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107654049 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107267812 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084024475 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107681963 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088395813 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106770181 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086321568 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102951167 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111085327 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086535447 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10265554 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084009166 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102861361 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096020793 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106130359 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080129022 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101463875 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.112543182 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082223359 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103898353 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084008009 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107285722 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086139901 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102115017 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084775842 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106123625 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117002651 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089851965 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105128877 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110045825 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096666993 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102622411 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087673769 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102245347 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085766541 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103703681 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112329127 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090131961 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110051268 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086943286 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100429652 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110109295 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09285934 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103120974 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083646886 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103242372 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088765366 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109760631 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.108987699 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085811748 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102726064 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085632393 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108877061 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08781715 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104507418 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084476963 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.110021408 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103583761 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092746819 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106577958 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115598009 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089146512 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099445527 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089543655 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103380057 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091320415 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099838006 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082950631 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103392116 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105469658 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083774568 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107576837 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079656253 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112398553 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094038729 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104617512 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084587887 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104167257 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112120507 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087208956 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108624429 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089218546 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111545999 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114820706 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084219297 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108660701 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097117387 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105242219 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078563087 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110870516 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083253289 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103948113 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103405285 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083002678 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1082713 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095756243 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113269103 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099273924 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08842725 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103837281 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084318534 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100715015 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090892217 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108428182 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086220603 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111280169 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105909281 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089171983 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108691744 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084966129 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107054867 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087096585 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1084274 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104968245 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08832347 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104443191 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089011817 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104081327 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083289631 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106850817 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085798158 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104782037 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091925278 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104741712 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105319849 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088243 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105948198 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085872425 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105595042 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084650501 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1082656 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086307121 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105071784 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107928084 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080590592 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113167174 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085086988 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114248876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085886607 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.10196111 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111091179 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087969974 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111303245 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086636997 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10691478 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086652503 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104792144 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108485966 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092886712 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102141743 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097451141 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115051594 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106244078 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088875504 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.105338359 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088363217 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10484334 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08679276 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107259875 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085737369 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105229141 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110405617 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088468115 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103668189 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087611454 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104259641 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085721073 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10665942 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080038515 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104633626 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085383271 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105162171 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116249298 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086707822 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106551966 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084398947 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106425972 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085043572 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103324681 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113894603 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096753305 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107386832 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113556082 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084713428 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106845426 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097131583 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098779795 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083837773 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103828982 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083670944 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113475758 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106863217 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.104166096 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104808922 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085298091 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102953742 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087173544 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104554942 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080093295 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104024384 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109875192 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088081299 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103329451 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085865379 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108554074 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08747897 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116365009 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105694444 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086693524 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106081181 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083294607 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104028098 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084442498 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109064908 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087513718 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104433739 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083468394 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106351165 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087150623 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107821276 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105742748 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087629222 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113576217 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085853632 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110002539 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089839119 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.10078881 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109772591 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085431424 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103662587 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084504576 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.1083107 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08862053 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107785523 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.116206777 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086327764 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106513542 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086814973 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.104764293 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086068633 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106942977 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086095251 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104334643 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10519603 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094576281 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102049077 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089611623 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106098292 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086653622 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114778 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108284146 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089186262 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115160221 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089278592 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107878654 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114301677 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091491102 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110961382 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088516436 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108778982 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092936294 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10530461 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113494111 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086530789 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105414221 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087359156 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101151669 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083720275 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102463769 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082734914 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109248848 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104684169 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082357952 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102010018 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082106865 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103833112 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087380325 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110755893 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087401577 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105906427 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097598408 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080591203 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104450104 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081157332 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105169353 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087423311 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108785686 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08639006 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103368097 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102914256 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093917641 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109759582 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087220342 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101652297 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088107311 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104013967 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105901207 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085476421 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102857486 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085752233 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107501664 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085842155 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102999257 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110525934 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087658308 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104568728 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084684072 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104504312 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084399768 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100146364 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085004873 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107305082 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110295059 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088678738 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106156525 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098138858 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106896928 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086180023 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111366304 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106633801 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091863722 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.102037765 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088173192 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109201008 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088525604 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10251207 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085687716 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105034928 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10955873 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086678661 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102692991 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099169976 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.117368037 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089981261 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106848074 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10591104 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082326981 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102200643 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087270918 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10830999 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089921542 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118597571 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086144029 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106508488 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101747726 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087744051 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110037698 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090879907 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.104478288 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081924307 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106001033 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090655749 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113561757 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085399182 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107980107 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110727111 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089035075 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10564303 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091304217 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104438358 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091153348 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121337937 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109643506 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08760298 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114628963 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09547142 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.109835889 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102795899 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08864439 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110148056 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087187087 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10614116 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085775484 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121042086 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10651029 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082748433 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102453483 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086175975 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103185644 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112393956 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085946215 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104945182 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.08906256 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106135814 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093530719 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108517538 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115444196 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091609387 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111497717 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086191882 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107642755 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084810954 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106616524 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109812305 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089075657 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113004742 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096639614 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.10665544 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119301178 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097257778 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111205891 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083923087 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107193453 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086953834 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102929688 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091205686 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106426145 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106345895 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085499653 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10628529 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088903495 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114479198 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088887701 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109489042 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086966384 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102117964 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089697368 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110978873 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108784895 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084568041 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10843618 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089092505 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112162319 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091457822 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.109347465 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088978433 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110563391 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108653256 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083050782 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115366714 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086168366 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111362539 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086905794 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1089659 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089230583 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112023 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11397485 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089460562 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110515144 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100099667 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110738245 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105725407 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084683865 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113326429 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08540575 seconds)
  done (took 59.643323741 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153203882 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084043508 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103330088 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083002049 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117172261 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104254261 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083036492 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104324839 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084161292 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106718531 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083156569 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104009423 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114416595 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12918538 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097814215 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109729514 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08302031 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106003735 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103489891 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084801983 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115148305 seconds)
  done (took 2.987918394 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109580339 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123274264 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120532828 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125011738 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094245741 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12063715 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120510353 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120330549 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103158972 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116128956 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124405851 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120163407 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095759758 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117581003 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11579541 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098010704 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.124408982 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114379138 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121112614 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099684442 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118546185 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120326039 seconds)
  done (took 3.352333279 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088611446 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108228836 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089234276 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.103093125 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087410374 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.10411609 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.09231499 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.106491145 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091981545 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.107199267 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086289485 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.107428815 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110309346 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083954137 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.108513023 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085549409 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158057432 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113302577 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087575887 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110124359 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.082316099 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111790327 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.104093778 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083453439 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107634676 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091946934 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110010524 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085358684 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108240084 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086708698 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108339477 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085259935 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109994596 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108656582 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086291735 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.107433213 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08813097 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108203083 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082497024 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.107137383 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088450424 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103949489 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088056577 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109833528 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085832529 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.106180526 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089161249 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108410833 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.079294085 seconds)
  done (took 5.68499199 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108081894 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162802074 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085740533 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144417192 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122723284 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.116297711 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09062528 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143676202 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103072492 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083450174 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123575934 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124277145 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10806804 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093066865 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.116255134 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109506002 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089756456 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108097727 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093312423 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10905453 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114684873 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09479613 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125262326 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123713831 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11332455 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086859955 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108831298 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.1135679 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103895746 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114379171 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114496557 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09530048 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125821256 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115412842 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087703417 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11247903 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127595199 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109461903 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09089801 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.107528139 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090642132 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114976871 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116534104 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107043927 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10976632 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115531203 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089030368 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106662554 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124182556 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091103705 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117587881 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125586813 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092627679 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110035265 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114958007 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126721949 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088681974 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107441546 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092362686 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122589038 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107713787 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092316744 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125054416 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11217656 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096660478 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126304684 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11535837 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114340327 seconds)
  done (took 8.457630497 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096045676 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112766579 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121331911 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12297366 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091367166 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112759968 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11299165 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095618902 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113218189 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121140479 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116779581 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140494594 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090174803 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120319125 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116296421 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095786751 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117196607 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116898077 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095976792 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116920603 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116952711 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125987377 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095429426 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126071603 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147164931 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111937822 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0951081 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116693406 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12662133 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116454606 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129364512 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095795162 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116519287 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126804282 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129184842 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095548869 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108736698 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116101515 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09568721 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117317484 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111318704 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106049346 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116302656 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111344888 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09550338 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116239474 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126462003 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128563889 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120463799 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101658216 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117349253 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126553288 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116597441 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095436206 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126091601 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153743874 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127092572 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12669007 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116179297 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10577085 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12632314 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135220718 seconds)
  done (took 7.986398435 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1105692 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119458118 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124811679 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106003062 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086808414 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115010035 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086334914 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107667362 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11977007 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09868193 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12262062 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114981546 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096871271 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12364334 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115078598 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118884414 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093591188 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115906462 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12075792 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093657712 seconds)
  done (took 3.035843176 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098016148 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126756889 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089839686 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11794357 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114032045 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095239181 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113020805 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113122772 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090469978 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113333019 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100888294 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122572564 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111017259 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096985942 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121802676 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117243697 seconds)
  done (took 2.593443094 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.103326641 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119640743 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121715792 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08525413 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105236611 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080997976 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106126302 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10200905 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081226612 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12140863 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085903719 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111415591 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108869907 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08654827 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107359977 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091907347 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.107011412 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087389091 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110638705 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126157683 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100545784 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110371288 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089674447 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.113458509 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111361458 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095200264 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111820671 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108453187 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087856175 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111035254 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090479257 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11865172 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107525304 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088434309 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108895535 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087176537 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110173933 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090074432 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113357955 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110865419 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087789534 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111602974 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089058822 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112242351 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084853808 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.11150069 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08572117 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.118770856 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108905931 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089698124 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110754996 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090933006 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112135632 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.122024301 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09378636 seconds)
  done (took 6.488252318 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103887017 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112117165 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084904727 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108269805 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092215216 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113660253 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114523758 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093055162 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112589224 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086627096 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113823095 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093961619 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112774985 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115058868 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092625619 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11199562 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085104908 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112513808 seconds)
  done (took 2.714471088 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094218745 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106418083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092713824 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106434605 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086136265 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112098553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085374883 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109768191 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108943241 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089740015 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112132521 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092425334 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109657373 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092127707 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111412261 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089311802 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.114233279 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10938879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089632201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107189592 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092030816 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110311358 seconds)
  done (took 3.073331195 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123485149 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127755157 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09352858 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232500105 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104590504 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133315989 seconds)
  done (took 1.671007179 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112186659 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12148675 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108423793 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10711457 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116791152 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087047361 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108804637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108477539 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118615436 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102517858 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109102765 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118689203 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118403358 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097707065 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11567205 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115309483 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107952986 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087619465 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107289846 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129542382 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088250183 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118578398 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108636543 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087927924 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109105432 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118673053 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118608229 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101372094 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108168656 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118868519 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115374228 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087925611 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118741791 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124345605 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089720629 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118000168 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108500727 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129091234 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114559653 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0979981 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10943425 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11698627 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098696632 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114679918 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119694208 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109354034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094236472 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108831087 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108743873 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136494089 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094831378 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11836545 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115883147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118807874 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098143571 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135736119 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12310425 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118228733 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116606214 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123590564 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118281091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094946902 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117504271 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12440849 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115310338 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097326111 seconds)
  done (took 8.181376064 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105150903 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126704411 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109587846 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123742332 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097582789 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109525729 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109196362 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088355171 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109103129 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1084526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153121094 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088608267 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119480686 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121547926 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091358354 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1104336 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109533378 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11936907 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087339273 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136507318 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110119254 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11839751 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097467196 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118658203 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123877408 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115847376 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108888204 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088097075 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109800078 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088267658 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114853696 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109584817 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119135908 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088793138 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118837527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111534533 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090156956 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116453183 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111097334 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116609096 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097201248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130038022 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10942967 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110098312 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102716148 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109857064 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109538865 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087630065 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110153817 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108884677 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102738789 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125085718 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123367281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119383221 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109198251 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08857562 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109012743 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109470592 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088805954 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115689627 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118344817 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088464443 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136775736 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109179069 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109490161 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119414841 seconds)
  done (took 8.114333498 seconds)
done (took 159.669234407 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.220626909 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200161357 seconds)
  done (took 1.279495075 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099743575 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138127106 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096731121 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169966488 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107622957 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118740609 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138961189 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097199698 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107328957 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086441818 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108068214 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088063308 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172928718 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086292638 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107674607 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10952946 seconds)
  done (took 2.690738059 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118853719 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.232493432 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124587178 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106445268 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089985319 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110969682 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084071606 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112493909 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089906415 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106976459 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089161029 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107197057 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08586785 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108014052 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110741848 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088373081 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10739716 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088688526 seconds)
  done (took 2.821965079 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115912083 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147490849 seconds)
  done (took 1.125984394 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243022753 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162454472 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.23042059 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.469294042 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.274070615 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.365354327 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.200139186 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.211410502 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167201936 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209058916 seconds)
  done (took 3.386023635 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122104244 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180974426 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318406929 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156749647 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107456558 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130261966 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156903237 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132190875 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123047466 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102221977 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123267827 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119236796 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140779412 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094821702 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116741646 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118550909 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120575627 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114459239 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116025443 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09554569 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138687023 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085875084 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11639265 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114325681 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098131604 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119798652 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106664184 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085269963 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118514644 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095393966 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114632466 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12699216 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119727565 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156319184 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124488954 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157496785 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119668318 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090957518 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115800067 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09153517 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119446354 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119773468 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125330189 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098232642 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10690012 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09789038 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107450706 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085651268 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115891506 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11993133 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094429614 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11461976 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155650468 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120196552 seconds)
  done (took 7.437379259 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789726917 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156171251 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090803326 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.878532535 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136043162 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104103677 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.772501461 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110762207 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256395568 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.753821576 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133560102 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120871951 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206152559 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258106623 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925275935 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28714693 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.66567853 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123822484 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150258297 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153199638 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118158174 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136378983 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109291343 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430233954 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116128505 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112437359 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096754947 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120078026 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160400413 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125692882 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114219149 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178648749 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246033266 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204297746 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094138242 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111211279 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11059756 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17029736 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263308738 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193557202 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180733782 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108795254 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0894559 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121882831 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132952359 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085928451 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185984512 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174672391 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168952082 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114243064 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119361948 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098306664 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120987828 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16477997 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122114127 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311042562 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321381305 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089916814 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122589909 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125599022 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259843169 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103085148 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226697117 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139116489 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212915608 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089696648 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778393969 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169495346 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112234765 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095370756 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119509683 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116606206 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099166583 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167835299 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.410021396 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124399405 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11453798 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090139297 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226793472 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10296596 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112384123 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161882691 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118261169 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121499174 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102424327 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123171172 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168737866 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251584462 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100586556 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119863211 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115543504 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103334422 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11688517 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211192496 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220686136 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162104969 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229401282 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100337678 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184752381 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168175799 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120626273 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172470064 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119593602 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101834148 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122298774 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219176557 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145510172 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123632935 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094298922 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119122117 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148011994 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128544625 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09770265 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192269595 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46006538 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168522042 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109528568 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128387847 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098331617 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161096148 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118328988 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262578718 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122293837 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170525829 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120220203 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087972472 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121516629 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164188171 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123088223 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099808572 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123312485 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118934309 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236195629 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215727586 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121449262 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221310763 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183999253 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118265849 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172339523 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121900647 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169135609 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119432318 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098524377 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117467206 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770548999 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10136598 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120004442 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115682675 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187642327 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09031977 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125675415 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124620184 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086709242 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80605752 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127173984 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099387052 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124478495 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117986019 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120344988 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095703413 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115531199 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161783517 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230083766 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119423585 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097690667 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125626315 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161887968 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117590155 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125514073 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103095815 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126175054 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122160971 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09184693 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126019034 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167611978 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.183209969 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218120883 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575071895 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112804544 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101962973 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228814101 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112780833 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29045495 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098489062 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22451842 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16287646 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121391542 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316851054 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165640624 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187263478 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127452104 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172171103 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109896944 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118736622 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165338123 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089595504 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117029215 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163160069 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125906785 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123989329 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955086989 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090706739 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224904209 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110497973 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171062289 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118082737 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120052294 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.269795392 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112310325 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127443066 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165570615 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1147747 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103103824 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.872109337 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125635593 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100504658 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118352948 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221222953 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164197116 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120947731 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097555963 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120445225 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161941679 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229657223 seconds)
  done (took 44.061762373 seconds)
done (took 63.662305691 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.291412441 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217785577 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269630355 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170948756 seconds)
  done (took 1.922687351 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179569779 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153534063 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124343293 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111042977 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.156945848 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09024447 seconds)
  done (took 1.709293372 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.373351519 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277386495 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.246271161 seconds)
  done (took 1.798496814 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.328904709 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251966397 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477061659 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.330390983 seconds)
  done (took 2.387695667 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.217154225 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141498003 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118347699 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109356559 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.210353691 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.258595392 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.152209701 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.212801953 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.1048351 seconds)
  done (took 2.473993562 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.207178951 seconds)
done (took 11.392091713 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.27097511 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.130274541 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.180658494 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.107215903 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.1700005 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.218344501 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.19592238 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.177162282 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124657915 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104960117 seconds)
    (11/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.224789432 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104378858 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.126532897 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097097162 seconds)
    (15/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.122531448 seconds)
    (16/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.231953498 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.126967599 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.227223784 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.224535345 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11422697 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.205026058 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.234236748 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195077174 seconds)
    (24/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184191138 seconds)
    (25/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.124003278 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.148227059 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.206510309 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.147026488 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.153298814 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.108786823 seconds)
    (31/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.174968222 seconds)
    (32/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.184819047 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.213897506 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112790705 seconds)
    (35/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124694539 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11845233 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096991837 seconds)
    (38/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.183892451 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099071941 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.14425015 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.220334827 seconds)
    (42/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.108192169 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06639731 seconds)
    (44/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.240599494 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110042576 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.182219407 seconds)
    (47/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.17524468 seconds)
    (48/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.123265113 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.09259466 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116607628 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094718977 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134624027 seconds)
    (53/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.087027945 seconds)
    (54/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11370891 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.203478654 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095986981 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.218235183 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.09281129 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088257449 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138381649 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128386093 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.170115355 seconds)
    (63/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170646916 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.151311612 seconds)
    (65/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086161436 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.18592897 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111296343 seconds)
    (68/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.127657378 seconds)
    (69/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.173194597 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119042158 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.097880421 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.172143494 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.155375974 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.09168288 seconds)
    (75/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116707457 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.190901509 seconds)
    (77/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.1697791 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.088645497 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111792366 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111438192 seconds)
    (81/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.147725262 seconds)
    (82/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.077471955 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213916608 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.191201258 seconds)
    (85/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217306298 seconds)
    (86/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092997542 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.123550172 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094350324 seconds)
    (89/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.097664391 seconds)
    (90/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07565838 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.184262384 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112515725 seconds)
    (93/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111878612 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143699123 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098466738 seconds)
    (96/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117814191 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137116904 seconds)
    (98/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091919887 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114345518 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088702764 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118391421 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.13154877 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.09076012 seconds)
    (104/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.194333534 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082567136 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195408321 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092720237 seconds)
    (108/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175835369 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067461762 seconds)
    (110/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.148814876 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110248127 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087043616 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117881582 seconds)
    (114/309) benchmarking ("sort", Bool, false)...
    done (took 0.183247823 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099768085 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112436882 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.132861795 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.099489491 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099702314 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.122229136 seconds)
    (121/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.099899473 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.130242832 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.131353413 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116879477 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.121727101 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.224112145 seconds)
    (127/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099077233 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.133299137 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.408768655 seconds)
    (130/309) benchmarking ("sort", BigInt, false)...
    done (took 0.222059621 seconds)
    (131/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.195442979 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087906941 seconds)
    (133/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.12218144 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098597937 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.136762504 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.238175078 seconds)
    (137/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.11953894 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086077704 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110104064 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150091673 seconds)
    (141/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119158845 seconds)
    (142/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094969207 seconds)
    (143/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.092074151 seconds)
    (144/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.115989911 seconds)
    (145/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11393641 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086919875 seconds)
    (147/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.101323147 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098208377 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109292627 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111732537 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169105727 seconds)
    (152/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06649303 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.150637314 seconds)
    (154/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118280423 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.124784022 seconds)
    (156/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.146736329 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.199596067 seconds)
    (158/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09754652 seconds)
    (159/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135326505 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067588 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118813617 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067619876 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.141674254 seconds)
    (164/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087048633 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109893092 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117074345 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085862579 seconds)
    (168/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.0681028 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122673771 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066869377 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118985988 seconds)
    (172/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093277367 seconds)
    (173/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.090440145 seconds)
    (174/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.115659947 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111292576 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09536014 seconds)
    (177/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11806822 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066170879 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183991939 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110589127 seconds)
    (181/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.076761818 seconds)
    (182/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110174436 seconds)
    (183/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075648172 seconds)
    (184/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068832759 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111014492 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096943734 seconds)
    (187/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111691043 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17395425 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08586659 seconds)
    (190/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06734666 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.18433894 seconds)
    (192/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113791443 seconds)
    (193/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.14864364 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.228020753 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115286657 seconds)
    (196/309) benchmarking ("sort", Int8, false)...
    done (took 0.189856391 seconds)
    (197/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.193609201 seconds)
    (198/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066668921 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112622262 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.130089888 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225472237 seconds)
    (202/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113135773 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137895967 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094662262 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119859225 seconds)
    (206/309) benchmarking ("sort", Float32, false)...
    done (took 0.14937478 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093189356 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078078451 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132122479 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.175343832 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101071815 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066862734 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091849062 seconds)
    (214/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087291862 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090756335 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092125383 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137835175 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086052674 seconds)
    (219/309) benchmarking ("sort", Float64, false)...
    done (took 0.172851792 seconds)
    (220/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.091162215 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.072628498 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084687203 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13054438 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109901767 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066539502 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.219543821 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.185679912 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113259331 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.092515251 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.119634201 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119473711 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08611073 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190949521 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067449925 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113512942 seconds)
    (236/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078837827 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163032287 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116649517 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094678134 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067695663 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.15477933 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.103243176 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111031712 seconds)
    (244/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067980206 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112154009 seconds)
    (246/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136393302 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.167463323 seconds)
    (248/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13640927 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092545485 seconds)
    (250/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06835718 seconds)
    (251/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127640899 seconds)
    (252/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067783502 seconds)
    (253/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093310561 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.091847815 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090193171 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110824826 seconds)
    (257/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08930149 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.11589823 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112527402 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111566808 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095436735 seconds)
    (262/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.091370119 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067235069 seconds)
    (264/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137410823 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.11506138 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.191004882 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091846004 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095284846 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110379022 seconds)
    (270/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085610659 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.094704795 seconds)
    (272/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100805433 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.164514647 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093088073 seconds)
    (275/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092400017 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068026127 seconds)
    (277/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06764657 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111965074 seconds)
    (279/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067051557 seconds)
    (280/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.093194161 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155593558 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119196719 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06853904 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.093404069 seconds)
    (285/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067869019 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085346809 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109482286 seconds)
    (288/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094540578 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110928564 seconds)
    (290/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067301548 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.1196026 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124070744 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068157644 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067710797 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110089089 seconds)
    (296/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068938617 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111438877 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130092563 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116871348 seconds)
    (300/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06746172 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068665138 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140889624 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111605378 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119549015 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126015519 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138107656 seconds)
    (307/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.0686761 seconds)
    (308/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.07790775 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118051531 seconds)
  done (took 39.998098554 seconds)
done (took 40.902765497 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105165521 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149647445 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096520009 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137438119 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125174764 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091613294 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118640433 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098382702 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123860126 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126187656 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098619113 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094589216 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097426684 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.1209378 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097648164 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139734841 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123995015 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094566704 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119629281 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086793414 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11980346 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087323321 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113252717 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070023954 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122765952 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094452432 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11716424 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120382611 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087395756 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111402874 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091333338 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119190641 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08762704 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125040683 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09331566 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.1197455 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097785383 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12095207 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088860115 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110504065 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118408717 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087200344 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118047173 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094471102 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117728182 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092422931 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119566105 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099018401 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140407357 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117076967 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095971227 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121703653 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096947264 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118866602 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091278267 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121240376 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092325041 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140573646 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121211148 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092626273 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119722324 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094411429 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116959857 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095428209 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119996543 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097895165 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125015968 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119053655 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097305945 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119407254 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086637181 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120338875 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091210688 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111758249 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097440629 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122963175 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08694628 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117921696 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.094752932 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115957902 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.1105904 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089591864 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113697647 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093028639 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114064892 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070640518 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091298835 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117304954 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08721991 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119795697 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118009041 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0935376 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113306612 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.0993963 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11111487 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092510029 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111605758 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087596307 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113205667 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090855691 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112156843 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090212202 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120250793 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089430724 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117412774 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.10051138 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11200629 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.093755797 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.110824326 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110798455 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101916275 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122562953 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087317874 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117212125 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086150045 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119288886 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086180061 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11122345 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087011587 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111684894 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094092107 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111650058 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090672922 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118983362 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101015426 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111943006 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114705936 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09015517 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111472081 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0933871 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112095112 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088070171 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114909874 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078266657 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090152015 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.112380827 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118971911 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0902324 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120627915 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088967587 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121051323 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092686764 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118184676 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093497274 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111300009 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074334653 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11732476 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089475567 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113542979 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087391206 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113837175 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08762809 seconds)
done (took 17.046582572 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092659467 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186249005 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153479232 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143807691 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108213622 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112159684 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123333927 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120124207 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115030744 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143773757 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111280098 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13367779 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149450491 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087393889 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113791076 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091568225 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113620664 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10354708 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147540868 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133748632 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165576529 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087473287 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148241972 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136387129 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122504438 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115017445 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113125312 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091711887 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116360786 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104314326 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132982107 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091590311 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113360131 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135151438 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106229157 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121304525 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087618851 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120326694 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087665373 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113337879 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14180354 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109536297 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117885463 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119763137 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091144734 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115052621 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089086841 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122428662 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099253765 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11744873 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127411588 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158093882 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091200404 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123391886 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087375912 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123635597 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122179775 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090070368 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11328505 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090485199 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112309555 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091466771 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127933788 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142728435 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092708753 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12302779 seconds)
  done (took 8.688534627 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110658957 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141339115 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106345617 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.148201586 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112605319 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087956316 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114150526 seconds)
  done (took 1.788342115 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092362271 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135210488 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111310039 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137527677 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133419419 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109152012 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124069806 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088834153 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132509071 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089583091 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135156492 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15397648 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090549312 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121638476 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139415848 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089572361 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138372885 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088759556 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117942921 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112778487 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117572183 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136689505 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091157807 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114115121 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103139446 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115612972 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162806986 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09384076 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115571987 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092247169 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113270472 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16791495 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105136996 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125289844 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088689586 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128876323 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12939184 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086505399 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130789202 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094198025 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129441557 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08997759 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115403681 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087288432 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119495633 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125013912 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090661111 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115150164 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09215773 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134899992 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089835969 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129383912 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090826884 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118892522 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090280851 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120656972 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124731404 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089773321 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135526559 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090683586 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132590227 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105730613 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129712129 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131219441 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091593021 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128791218 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103401777 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118245112 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090849656 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118434142 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132064197 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086789472 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116344346 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100709761 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116954139 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113325196 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139251463 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090858487 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125425814 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115127888 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089182939 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115303972 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113397297 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119068095 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088937582 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11940584 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092516178 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113613747 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088220524 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11838155 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087307596 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116016653 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092621846 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115778944 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117685828 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105934225 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116002883 seconds)
  done (took 11.902393895 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096745667 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116472933 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09261171 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115608178 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090116017 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116285754 seconds)
  done (took 1.60551937 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119955631 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118568106 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10439306 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122424171 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157870523 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130635395 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105761156 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125982832 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108343138 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128477255 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13095109 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105689718 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136697131 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122161929 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105138076 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121425799 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130842307 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100685946 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12789941 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097040838 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138157853 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122085304 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097207959 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13350041 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119762485 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096243856 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126314335 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102664107 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128739374 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123598744 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096794579 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119385008 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095827957 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124024706 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131166323 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096029777 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122712222 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12072285 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100692758 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118831511 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105130382 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12259394 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12839752 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094776605 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125211032 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122579182 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094786787 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126742131 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104692563 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121015961 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12032054 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094877459 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119088279 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094389565 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123408035 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123895422 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094259694 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131187964 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095783513 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12299309 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118784288 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093248488 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125700557 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119504329 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105262561 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120632599 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09684466 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121786391 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123230515 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095469336 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120571529 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09276061 seconds)
  done (took 9.294833748 seconds)
done (took 34.242061975 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.698116412 seconds)
  done (took 1.6761761 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.715437671 seconds)
  done (took 1.694404009 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.322586202 seconds)
  done (took 18.298092184 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50706176 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585735833 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.885728745 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.183895628 seconds)
  done (took 3.137293237 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.970561996 seconds)
  done (took 1.968240579 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.302598418 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259628418 seconds)
  done (took 1.547041932 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.782017562 seconds)
  done (took 1.768889988 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.363900988 seconds)
  done (took 2.345971346 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336493923 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186406986 seconds)
  done (took 1.518196412 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550527785 seconds)
  done (took 1.542652547 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.809583732 seconds)
  done (took 7.808298966 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.275862342 seconds)
  done (took 1.283426351 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.312238213 seconds)
  done (took 1.306054917 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.555627296 seconds)
  done (took 4.550198313 seconds)
done (took 51.43156367 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105032365 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127695403 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103156581 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12558577 seconds)
  done (took 1.450703274 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106273683 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121584396 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101019957 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121847203 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127010005 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096462345 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123585693 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101112034 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121570886 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096981266 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122290879 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120535541 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099823602 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123993811 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093777241 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124356597 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099756562 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12182999 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124924776 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096508509 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119646214 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097934843 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126670183 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093829299 seconds)
  done (took 3.680747673 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106323457 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120113444 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097511619 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118872236 seconds)
  done (took 1.44716872 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105572348 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142832979 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139397118 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101215759 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143942581 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137169253 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093435999 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118129393 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095119694 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126726155 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091676772 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151420512 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138356858 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099881346 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12853047 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088559473 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118039026 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138037483 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100148804 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12648623 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095359294 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126241208 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090995087 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141392871 seconds)
  done (took 3.837576844 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.1768889 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128118413 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139204717 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096032559 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161987762 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14225292 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088635546 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142199912 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08919773 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132644014 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118271611 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133342934 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130391141 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088773381 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115042928 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08836046 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130564898 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129625071 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092468757 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128700717 seconds)
  done (took 3.456056393 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104780743 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119082125 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088792136 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11740864 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099918302 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121755808 seconds)
  done (took 1.657143242 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096647516 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11576351 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0905892 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115589511 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094239314 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115326562 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088698023 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115680163 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090371302 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115323377 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089638645 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114099649 seconds)
  done (took 2.248237735 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.499976006 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117444389 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.117544882 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089674211 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122680237 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09000323 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129321816 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092805367 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143031779 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089068232 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117465693 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090938941 seconds)
  done (took 2.705578672 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243527913 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126025896 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287522384 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368898413 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15498235 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178691761 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280990477 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162222643 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225799536 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167737884 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205481862 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225309769 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152122356 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190129093 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139343071 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119295578 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233063284 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248545242 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155955184 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209558693 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229950619 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167271136 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17956405 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151291828 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139298706 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173305895 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095039219 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13149134 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234291081 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176697839 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216270298 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161788017 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147740787 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21095707 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255324916 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223105858 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288409359 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109182154 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176823627 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167956989 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263233428 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137133053 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20392288 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156456603 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132001895 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190810328 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191858337 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176460299 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153320544 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113785511 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220921596 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238983052 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192797818 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137953262 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304406164 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149780201 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175869514 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222434318 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22405758 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225531608 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187887907 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119642683 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189417885 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215857697 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185382009 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174876567 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181462719 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149031007 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228571852 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189020506 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165362177 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220901629 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187206694 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140137418 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171781382 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173938853 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17405907 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260254993 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183808431 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12201993 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171139898 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15048634 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133729839 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167411725 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12595501 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239704324 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118175933 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164259532 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24705237 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159860201 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160432897 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205762566 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230902458 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122221545 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112873157 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156065798 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156272048 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194983201 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141316535 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159840182 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164608286 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131364633 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186772382 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097096241 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211240109 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091717875 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174077602 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21037573 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099858789 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161779311 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151680316 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152411421 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174764477 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225154564 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114863136 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135453034 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208250731 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204175523 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150360175 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178415245 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202136507 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145960415 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150471058 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20084287 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245420401 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140836287 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204570381 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157716473 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135537473 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105348785 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210177438 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155298939 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161683815 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10818529 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.2110311 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208007226 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12548871 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112633202 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222694926 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135516865 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105049902 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164431214 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149321735 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140655064 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152931354 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154166917 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184142985 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177950085 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155499591 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16417443 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154553564 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254723364 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143991236 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1513278 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149327189 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094401904 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220756648 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200269522 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131690241 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208042258 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171989513 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233236355 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171562631 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135421475 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177931911 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104263606 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120942877 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19575825 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16960605 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161325548 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.225426794 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202116745 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.20736676 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185263208 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17584601 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174663755 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166771252 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158601989 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140022041 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161888856 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172794947 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096144477 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.147041194 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136281114 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15004683 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144096102 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107133125 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226603104 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171455148 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191588733 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159761063 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150445047 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183730238 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12933185 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174279142 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206069242 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121060029 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.228205873 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197068117 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188118341 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144560872 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230823082 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093738921 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126074571 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143171076 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172527728 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106650248 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136778401 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165612554 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181641994 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209433046 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179694798 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240075434 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174318355 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193022652 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094969577 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169786829 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186017231 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20439747 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.169376055 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139860039 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151682686 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178577701 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159048102 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257453545 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170168848 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175495293 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23613947 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150757179 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105320053 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154006698 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223442755 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155006242 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179566978 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149196393 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114204777 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162915552 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134534749 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160843689 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211538577 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163802344 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189739949 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150942963 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186314325 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128772278 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165379878 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16115103 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167289136 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082066863 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174989386 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23328429 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149717231 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170469064 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19070753 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132503297 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307178643 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243568077 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19631483 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139245211 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157665759 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162155963 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164931179 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173022472 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179717496 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161518812 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18746366 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159947855 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137335708 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141392228 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12135653 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150711062 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132529003 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148903084 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177831672 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140150704 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186230254 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164091272 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160128366 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173046006 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151405885 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145503859 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151157328 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216426853 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184331149 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239882205 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151208246 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181560701 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23459897 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09900329 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13260717 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134238868 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178621688 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1090936 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222724911 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189151029 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231188611 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183398072 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1956458 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141432903 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120203811 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130227179 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202329264 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210084284 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153327107 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160711538 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232705317 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120171618 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133712177 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18034154 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294157202 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143292524 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224885518 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081106862 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288387566 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12571215 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104916157 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16525194 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236557449 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136216954 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188545225 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173283511 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17196142 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166025723 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150646648 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19298556 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243753358 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202695864 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180477982 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134199925 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156890079 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17844031 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220599981 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131206826 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141194781 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231814668 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196109583 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195706557 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144039425 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173120877 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169844657 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158744505 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213428673 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109108556 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23562608 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107990084 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224328959 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154898131 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144758164 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176890339 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190599719 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142887497 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189520687 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211681892 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108049277 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134904317 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171594089 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205724516 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129698964 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128689495 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181407832 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126291765 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19540887 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260362958 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135889206 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154835883 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148298122 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108841497 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156454822 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159180269 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142150799 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162684072 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205839438 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13654874 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192827198 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231895496 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17073604 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175794292 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146179963 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694628297 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131216763 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196528872 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160873636 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2069852 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150171996 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173443494 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159826977 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169876231 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226075245 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161595956 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231886175 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19491328 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.206730146 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105735192 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159758846 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165456528 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145985276 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153370379 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170213694 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161005346 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155559881 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180568616 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171742971 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136444656 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14075298 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202645812 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160802896 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182960535 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18006652 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14054555 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174841504 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216400903 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106765611 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207925076 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209994546 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143371715 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152195187 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134254598 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157643681 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235901944 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124465489 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235167705 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187021048 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159259689 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171606538 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148652481 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195056873 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159348999 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21547415 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148587605 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160405542 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129415318 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139152631 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130963254 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155242705 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168626642 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149593725 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160564703 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.14018692 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192677819 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124264739 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145768857 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292128257 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219140365 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218254301 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136921599 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107675142 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163260879 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152469951 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.206904766 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180298297 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108567508 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138232412 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138530442 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133553226 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136817447 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156587458 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200070815 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168224432 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233924422 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110012924 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280811507 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140040139 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157603804 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08943459 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131989168 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152449003 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147265937 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159233399 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194150236 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264790976 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14706157 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107706366 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151589752 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125598225 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110121893 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166132559 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163244134 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17744229 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14544249 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109333198 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157743255 seconds)
  done (took 83.77828364 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169243513 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13181511 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147280604 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201807902 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176731933 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27027138 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210015313 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254567506 seconds)
  done (took 2.65773393 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.097530645 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146097566 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157817505 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133471326 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09188845 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11993777 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346004021 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132952035 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116207858 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.12081939 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174068488 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092739998 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.549874058 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091764946 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119430688 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108072076 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091451491 seconds)
  done (took 3.776808144 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.48314479 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.713743965 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.510286575 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097801714 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.111021141 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112827682 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.728833612 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194999521 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114008669 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.48140476 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.774982484 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.15915773 seconds)
  done (took 18.57858517 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.10458369 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121608704 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108333555 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135867524 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096590644 seconds)
  done (took 1.671253049 seconds)
done (took 131.934044692 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.110133845 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404766942 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072248592 seconds)
  done (took 1.60959336 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.11333584 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136915987 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109688521 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135920089 seconds)
  done (took 1.601023516 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101156791 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127145 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109895841 seconds)
  done (took 1.435300625 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322610797 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191912013 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164217586 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109633312 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130221547 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102735583 seconds)
  done (took 1.44539954 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100806831 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12757341 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09808866 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129851459 seconds)
  done (took 1.562200767 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099962675 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071587971 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103283532 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074893857 seconds)
  done (took 1.450478111 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120212905 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131644899 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104909339 seconds)
  done (took 1.462635663 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.136423494 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140062514 seconds)
  done (took 1.382961442 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111296183 seconds)
  done (took 1.213353275 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.123809614 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169982428 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190836545 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165066268 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.235342591 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165635841 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142682292 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115098389 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131625856 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143417434 seconds)
  done (took 2.691225083 seconds)
done (took 17.743613672 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.106228819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422910514 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413730143 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117212867 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721372226 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380546694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035341531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146086996 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166379633 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093720834 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139279626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673213584 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060454624 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373950692 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019491576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370748245 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677340879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120810608 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119650622 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095534276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015738861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092408495 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122202962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093921098 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702512424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427310725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09583145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375331101 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093000971 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126608666 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384991097 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123273328 seconds)
  done (took 17.003349411 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100961312 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173922792 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099955291 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137715911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123789357 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094985526 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124506183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094428173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179692552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12336858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111796423 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121239237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126705378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095593144 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142052983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093742216 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125143403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093252117 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121392802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121830199 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112683417 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120394471 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095431203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121609615 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093977027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135711115 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095646317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.1211721 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120995725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098902593 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128047218 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095068298 seconds)
  done (took 4.850687121 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14450128 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182465004 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127966037 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127500472 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169200253 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123044754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199871117 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119202584 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182948851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122816564 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1397151 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093275768 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15672692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09536673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142520368 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120866958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097775228 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121713872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092965042 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122864155 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140264438 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092994305 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121857437 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093420102 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122966413 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109351516 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123748192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121242545 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09386043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127267044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10027123 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123846957 seconds)
  done (took 5.168319425 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100990117 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126639888 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109762516 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138524745 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095770289 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125900313 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098457157 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124804968 seconds)
  done (took 2.029601399 seconds)
done (took 30.152262002 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117004753 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128197015 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107738109 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134668598 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103219631 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132250919 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091489843 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133538614 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134854291 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102092318 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138867641 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093187234 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122821171 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092008307 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134548817 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097671317 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132454523 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101802535 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133901611 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131877202 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094726203 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133220138 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103050468 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132660718 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105266316 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133628133 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137150467 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099017379 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123181038 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094969784 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124259516 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10359391 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123837716 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10550757 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126191205 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097668994 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123137181 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093958239 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132983353 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132739154 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099484975 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132905103 seconds)
  done (took 6.019714126 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.111023277 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140268556 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105084373 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081176255 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11714498 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081110835 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137633016 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079696852 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110482387 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107993813 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074698867 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106747423 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079205741 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101379464 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077094828 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076577267 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108593779 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075580638 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076375336 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106022037 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079898901 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072855016 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10826793 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078937323 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075552643 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110410545 seconds)
  done (took 3.595438567 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103483193 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134980349 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113282215 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184223802 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160768303 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099913451 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132192835 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.111418385 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138009761 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12064251 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096591378 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149702696 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111501879 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129222398 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092032424 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136709973 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136179117 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094246107 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127680899 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113813226 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138159408 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103478906 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14300821 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133671593 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091855152 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122987323 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096342393 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135138254 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097380989 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130522863 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09774616 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125121533 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123540196 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104929327 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125528829 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094798361 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14102078 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103514898 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130621915 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09268735 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12580258 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121629936 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114058722 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167766981 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09274633 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130977908 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099396009 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132517359 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121328296 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11141281 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131207877 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092003447 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124366015 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091536634 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121362061 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107213532 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124225687 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095808103 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131178492 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124763948 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105935527 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124718595 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108844814 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121509181 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100383024 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121392392 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093069121 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121229661 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115437626 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124079648 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164076054 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093053789 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124017766 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102163157 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129966459 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127849396 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09303521 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137521866 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103472199 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125129871 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102771629 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125780218 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095709571 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139947987 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095661455 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124377495 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093926906 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128342156 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123963862 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093857992 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135513241 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093272422 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124723371 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110639022 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122111564 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093853559 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128405667 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127017714 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09339036 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135154272 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098560171 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123317941 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103560776 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122949211 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.096340956 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131781499 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127531334 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091962565 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127595897 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099716685 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123616864 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094673985 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125150745 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.096006235 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.140273803 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10065668 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127437516 seconds)
  done (took 14.860363676 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231233779 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215655753 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208506646 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264338766 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134232913 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114677738 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21256207 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155564863 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123623836 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160977408 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174743959 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182631637 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170215857 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181780376 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170798416 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093184211 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142240781 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134234665 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.244539186 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259569506 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142919006 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101480081 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161656786 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160603562 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136910897 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133056875 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110203184 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134334825 seconds)
  done (took 5.822092841 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114370794 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155928527 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099162616 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14470387 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148545549 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093105863 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.1280297 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094994165 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135362932 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136627538 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093491444 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129347752 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100989823 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132223781 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123604754 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10309934 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131698746 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095398586 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126842126 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096978972 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130233924 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102262408 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12709162 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092669956 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13263081 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12162291 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086779336 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14185985 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093631992 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145222024 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12090808 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099618271 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133504361 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093558869 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123123198 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095262413 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125031388 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095024427 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124660985 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091687536 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121777318 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077828158 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121461503 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107481848 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128312948 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079635818 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129032228 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128177033 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093741826 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120650546 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096111498 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125054844 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097222684 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130666547 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097684807 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123122083 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096255119 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115197514 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099966328 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125262631 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084717041 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092850186 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127639271 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118631371 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102434217 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128399275 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092298357 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126170165 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098583484 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129347758 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096215731 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126438084 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091734358 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125831151 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096462335 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128598121 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096949466 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122305048 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093291202 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123742126 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075890939 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122968711 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074530299 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12620495 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09238044 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122350598 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095766118 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130344447 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137424596 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094800707 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131449724 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095108876 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122780797 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097483256 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112936048 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096525984 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138821219 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141202776 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093390593 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121763786 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107598139 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125498278 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093289872 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10595712 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101280619 seconds)
  done (took 12.975578811 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132168329 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153011561 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095718349 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142859612 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156502473 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158149449 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101834362 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131215941 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095830807 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141732786 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093528217 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132008987 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097580424 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138303532 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157592408 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104355609 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126189763 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108389378 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131836964 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171120769 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112651106 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14241525 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10823557 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124337495 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099755008 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140347461 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161018092 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108239969 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138086735 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141945177 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107999926 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161369124 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113286255 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128161151 seconds)
  done (took 5.509450798 seconds)
done (took 49.890461025 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.212432962 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.443963903 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.207571671 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.13120222 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.220199141 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.228464362 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.217765079 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.213122091 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.786349049 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.209128683 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.460880534 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.849399902 seconds)
done (took 60.321264253 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.229970434 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347996842 seconds)
    (2/2) benchmarking "String"...
    done (took 1.47485154 seconds)
  done (took 3.969779244 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.564526745 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.153480463 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.473965917 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.213147044 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.214602654 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.503288033 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.871780066 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.577777781 seconds)
  done (took 28.147061215 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.223609367 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.601686178 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.879295014 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.87404852 seconds)
  done (took 18.717415854 seconds)
done (took 60.772766236 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.238509576 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.260826291 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229729231 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.19343117 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.319424312 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.244665383 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.598570714 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.251509553 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.238358029 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.196513188 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.227899195 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.215988112 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.218368164 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.349082629 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.214603992 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.21209477 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.297686271 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.941214946 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.625219159 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.219317753 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.210701182 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.215281508 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.234387316 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.213106206 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.222172741 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.207911766 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.209458697 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.237633272 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.663400459 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.213181357 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.217842504 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.574552016 seconds)
  done (took 190.852594413 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.215053927 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.219865768 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.361920952 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.257359541 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.797614763 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.409833964 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.35043585 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.879891441 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.223304663 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.236251264 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.508289274 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.208620903 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.517005982 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.182859114 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.221273249 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.296381044 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.391191182 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.527753959 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230973795 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.490875684 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.240363219 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.487468848 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.41152466 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.440805073 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.217156031 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.250588718 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.220532991 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.212044236 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.413716671 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.335438073 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.253491421 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.211896669 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.816911308 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.075314256 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.216417608 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.21726304 seconds)
  done (took 150.686792988 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.484178014 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.218800902 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.217832371 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216787473 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.249212943 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213148869 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78346537 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782479577 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.734468174 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.453275678 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.5305867 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.526490333 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.217002819 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310421872 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.225350607 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.212671588 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.233282382 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260755699 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211866025 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215347843 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788830688 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.231594737 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.454264951 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.38362992 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.227786505 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250691189 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.605352328 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211242245 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24999599 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.546498552 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.258705239 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213671224 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.566472147 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.048077409 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325406649 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214728619 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249216502 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.216080406 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.495382656 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.213642272 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.217037094 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.217344075 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.21715281 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.850441328 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.21423063 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788364457 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.217044248 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170723015 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.211151631 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216214925 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.909787197 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.86130077 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.223705513 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.217820326 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.222698758 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.217589088 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218183763 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.25162203 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.920611099 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.30923807 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.231819546 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216463457 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.223925319 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250922529 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.216459145 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.438271879 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220109515 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.379868238 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.288184006 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.331397405 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788325931 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.220330856 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.217868531 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312789507 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334409947 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214656753 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.218956675 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217006502 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.218391346 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.329475193 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.215651363 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.635099067 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.389606192 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.230710686 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.536693909 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.312924295 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214183028 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.615945919 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.21631781 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.220645426 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995772438 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312885349 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215868997 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.221117313 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.222488437 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.63967597 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785253155 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.467978438 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.217928435 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.100708884 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.225523913 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.220623167 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.661085628 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.761273693 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.882049331 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.217474622 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33484732 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.38843699 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.230753417 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.2206445 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.547696736 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217635979 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.277270237 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.219221421 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.616660637 seconds)
  done (took 369.044699701 seconds)
done (took 713.214133386 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.876358666 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.85566135 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.975649431 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.861874997 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.815272399 seconds)
  done (took 10.530000856 seconds)
done (took 11.678113281 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.414874828 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.411253188 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283322479 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.413409642 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250183889 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.433607462 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392125464 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.243696518 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.326205282 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.303454386 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.326329231 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273602822 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251737589 seconds)
  done (took 18.468891496 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531285372 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.544400306 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285669775 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529500665 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263243413 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542175559 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422612768 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.43506434 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434983807 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25086603 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235320918 seconds)
  done (took 16.623407238 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549122885 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.550246621 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291681748 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.558755814 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.264721194 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.561656919 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426225394 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.449499148 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.442404322 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251142602 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23609672 seconds)
  done (took 16.72987656 seconds)
done (took 52.973709946 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.232158794 seconds)
  done (took 2.379586416 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265886035 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.431627702 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.248011837 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.236681367 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.235725538 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.234642442 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.238760936 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.235882445 seconds)
  done (took 11.277080709 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.230386722 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.232440261 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.231477505 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.231329084 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.230884596 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.232381747 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.231030824 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.231861846 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.234751535 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.23041052 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.229903628 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.232231949 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.229321063 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.231938387 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.229277644 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.230930574 seconds)
  done (took 20.84937793 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.232230092 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.230259809 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.229155088 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.23391616 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.229509435 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.231396336 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.233170763 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.230371994 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.229120406 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.231330761 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.232789013 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.22999517 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.23152268 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.228800076 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.229412443 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.231098465 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22824657 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.228352738 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.236316293 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.231783496 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.232121519 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.230151518 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.234822708 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.231863628 seconds)
  done (took 30.699853341 seconds)
done (took 66.358151413 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.328713332 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.930808389 seconds)
  done (took 9.410965248 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.235627657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.233371936 seconds)
  done (took 3.62043636 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.235547638 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.235537474 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.234203606 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.23482283 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.233693112 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.232567842 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.234532675 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.235818208 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.234069708 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.231617577 seconds)
  done (took 13.494432804 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.231992903 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.232967309 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.231487023 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.235637678 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231832021 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.229971949 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.233472726 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.234626526 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.233720636 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.232356715 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235267443 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.233104806 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.23430342 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.234363326 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.237468888 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.231819299 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.231174982 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.231156471 seconds)
  done (took 23.348596564 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.235514616 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234550828 seconds)
  done (took 3.620850746 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.229680128 seconds)
    (2/7) benchmarking "second"...
    done (took 1.230129997 seconds)
    (3/7) benchmarking "month"...
    done (took 1.232077765 seconds)
    (4/7) benchmarking "year"...
    done (took 1.232010166 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.233268443 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.233218879 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.232031896 seconds)
  done (took 9.776928496 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233945304 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.418022798 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.494250948 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813141513 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.235811154 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.240109592 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.123974739 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.242710253 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.242788015 seconds)
  done (took 14.197744147 seconds)
done (took 78.626198191 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.248831859 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.243085692 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.438449498 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.247528004 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.244993821 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.573066417 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.232555874 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.352831886 seconds)
done (took 37.741831943 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.252232327 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.970757453 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.984985845 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.231577523 seconds)
  done (took 11.344432778 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.216944593 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.170572037 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.211179792 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.243337664 seconds)
  done (took 17.995624701 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.253524271 seconds)
    (2/2) benchmarking "read"...
    done (took 1.564552877 seconds)
  done (took 4.974914861 seconds)
done (took 41.726267696 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237255616 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.238228634 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.235162308 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.232238374 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.235295257 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.232803316 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.234294603 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.23217397 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.232392911 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.234388989 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.236066934 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.236696525 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.237192587 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236062123 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23518198 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23392386 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234978088 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.233332069 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233869298 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232240086 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.235744659 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235627992 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.232827743 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.233151164 seconds)
  done (took 30.787114751 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.238275874 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.232204633 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.233741614 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.240625734 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.235681432 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.237689273 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.235553683 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.233622732 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.2382584 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.236164273 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233963749 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.235024013 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.236526649 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.236000655 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239303817 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.23777484 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.24172283 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231502245 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239489543 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.235581391 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.236692779 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235501652 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.234966328 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240837734 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.236998244 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233819785 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.238035106 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.237736739 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237346645 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.237663746 seconds)
  done (took 38.255583443 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.244342694 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244991406 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.239572536 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.238294644 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.238519851 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.237932697 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.237623958 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.239401685 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.239991356 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.239202974 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.241972935 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.241526455 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.240853867 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.235209822 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.24152276 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.23950144 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.239515328 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.238925617 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.241831584 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.237108135 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.23788908 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24269109 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.240931931 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.240094514 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.242270939 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.243627324 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.24228273 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.239444701 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239059063 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.240900708 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239595488 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.240332785 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.240120002 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.239706344 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.242531151 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.240538418 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.247760129 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.249022455 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.243103083 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.241906231 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.242934616 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.24435335 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.243681609 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.241477389 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.242527107 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.239082901 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.240908948 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.241161077 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.241146748 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.241850988 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.237666043 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.238561164 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.243048064 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.241746429 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.242528305 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.240010192 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.240796236 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.244106543 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.245567451 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.241578995 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.241310824 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.241243789 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.241295321 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.244801681 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.242959688 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.241816819 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.245526378 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.24497769 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.241891842 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.244162969 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.24713955 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.245177419 seconds)
  done (took 90.550541096 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.24616802 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245342745 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.241997837 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242542168 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243662783 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241491371 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241808171 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242888103 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239705998 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.244739808 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244523357 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.243686135 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241730686 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247016641 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244942819 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.243478679 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.244025345 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242648531 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.241965398 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244365532 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242883066 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239987407 seconds)
  done (took 28.515663656 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246639959 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249315883 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.243890376 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245134345 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240316667 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247380234 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.244407847 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247633233 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246625584 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242928112 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242521383 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245185378 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242345945 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239722628 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243929751 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245017071 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249892195 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243845344 seconds)
  done (took 23.571957816 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.243939893 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.241172971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.241659473 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242796941 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.24305461 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.246346537 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241396607 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.246981042 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.246289346 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.244937024 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.244975478 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241934037 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245607053 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243976366 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243396386 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239141388 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.241951437 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239442361 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247267437 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245032804 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.244425797 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247499847 seconds)
  done (took 28.527001866 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24955519 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245806695 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243906148 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.241267735 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247814036 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.244352726 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.246588961 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.244618186 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.250591732 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.246394289 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241294304 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.245522194 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.242805262 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245677278 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.243768275 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242887179 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246769283 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245132295 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244414637 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.242072577 seconds)
  done (took 26.068698826 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24824098 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242209558 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243363282 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243753111 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244735798 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248211187 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247374354 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.247759955 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246553037 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244946699 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249448836 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.24613222 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246930678 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245579704 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244381247 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247058938 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247851893 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246329161 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245910999 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247754388 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244476861 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245368818 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245634821 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247476074 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249466049 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249886492 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251446538 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24567741 seconds)
  done (took 36.070470352 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24465366 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244871989 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.241451144 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.244483392 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.245099071 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.24361055 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.241177767 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.244047484 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24779002 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246003702 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.245492539 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.251702854 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248782833 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.247364884 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2463434 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.245338936 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250162068 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.247760663 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246849046 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246272994 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.254393382 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249631368 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.250496718 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246084996 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247084337 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.248268911 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25023965 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.24783041 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249957424 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252606926 seconds)
  done (took 38.58657409 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.271715262 seconds)
    (2/2) benchmarking "in"...
    done (took 1.268312293 seconds)
  done (took 3.711702952 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.249310864 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250758333 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.24707282 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.251271434 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247339907 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24790959 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253140016 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246205818 seconds)
  done (took 11.165106504 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.252719624 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.253932954 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.248155397 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.252064962 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.251427567 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.250294979 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259629215 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.270379675 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252117884 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.254093855 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.261696086 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.257712486 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.256136699 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252803578 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.250033335 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252146378 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.252131871 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.25119896 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.253669058 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.253929718 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251853543 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25610365 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253882383 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.251906908 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.253818908 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.261008129 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.27856407 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.255120764 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253428604 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.259263452 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.25243252 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.254128402 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.259102399 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.256256036 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.256339329 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.259134838 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263553146 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272142829 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.261353564 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270805553 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254939293 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.254374858 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.255738976 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.253974109 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258382515 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.255659749 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.257160893 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.250391233 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.252683805 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.258290825 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.262853762 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25609132 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.254549823 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260270985 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.256953107 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263495707 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.278806624 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.258829085 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.269941181 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270622671 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.284920575 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.280547197 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263035589 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.26033561 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270984081 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280536351 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264469114 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.274687689 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.256742631 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.25943307 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.26384669 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285945283 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.281487448 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.260343055 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261170435 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.258571096 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259411797 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261117859 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265928628 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.279166821 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.258854945 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260088341 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268098421 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283604193 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.26076095 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.260473164 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.256767322 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.258565016 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.262783946 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272670403 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.281204946 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262658545 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.259648616 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.26057203 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.262841119 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262443775 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.260722651 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261128541 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.256782663 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.263710756 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258158755 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263445416 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.269806227 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259848775 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262507635 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.266358223 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.278414689 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259417552 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.265075073 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.261006666 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258765808 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.263866492 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.267698538 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.259289275 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26390364 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.269758079 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.261599597 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.262238177 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.261186384 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.263466001 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274902337 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.286482703 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.261732828 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.26101385 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.2652887 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.276850008 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264027985 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.265000359 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.260205646 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.260365855 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258638429 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.263432447 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264869239 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.263909629 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265672728 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265136707 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.260896853 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.264416848 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.262726849 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.266042222 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.266255157 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.265376552 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.264655791 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.26841756 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.264748773 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.266898238 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.269032285 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.282638036 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.266123031 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265297262 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.26257342 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263731322 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.265112151 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.264913228 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.263620894 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265201016 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.264797994 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.264309473 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267330527 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.267165179 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266460384 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.265212093 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271196815 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.265268829 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270113776 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.264985666 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.263840457 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.267709482 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.2668712 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.26676319 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.268016284 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.265175804 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.267834153 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274468418 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.267255724 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.265695965 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.269059547 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267764631 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266129139 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266501057 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.266438126 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.275476856 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.26706715 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273732521 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.277814795 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267580811 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.266753833 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.26596432 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.266818172 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26702724 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.270237448 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.275995036 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279853052 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289837801 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.271095676 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.274701989 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.268669312 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.27055668 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271674415 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.268487289 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269154637 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265387358 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2650352 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267182026 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268780967 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.266815425 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.266425995 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.272765191 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.267253019 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.268979305 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270273767 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.267798418 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268092731 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.268081449 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268787828 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267668214 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.269560437 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.266297059 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.269818031 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270420042 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.271604195 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268936077 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.27437005 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267220346 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272604126 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27396951 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.26983913 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.270299047 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.27142474 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271657916 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.270737672 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276714283 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.285599015 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.272138726 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275233751 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.286750575 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.27202211 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.277365459 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.272326674 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.268673692 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.27376169 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.282860035 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.27051076 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.2726485 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.271654465 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272651192 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274935557 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.277831454 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.286360611 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.27157359 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.274154481 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.273498493 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.270178126 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.274909949 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.274390798 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.271009932 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273694263 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271827541 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.272624482 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269965778 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.271488241 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.273100144 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.275358994 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276562884 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.282630733 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.279360697 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.27370748 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.278422599 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.275912077 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.281445551 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.274845087 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.275672842 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.271119118 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286723477 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.293191952 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278391561 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.29064937 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.273986559 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280287183 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.291121544 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.277046994 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275028348 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275794211 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.276669419 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.27600743 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.273315932 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274345728 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.276615354 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277702797 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.27628128 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.277976718 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.275870748 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.274236793 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.276780655 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.274794469 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.273800812 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.275765063 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.276839594 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.277833947 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275638005 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.272369093 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.275501592 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282526702 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291599359 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275806144 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.276153603 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.27145969 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274831159 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.279030018 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.276298605 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276927078 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.284611935 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.278565245 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.285135848 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.276781935 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287321943 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.275849547 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.280965903 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.28256856 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.273777554 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.277378295 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.276848538 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.275322451 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28398186 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291817389 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.277084385 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281886061 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277704583 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276111587 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.279490486 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.277446049 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277255251 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.27347234 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.285057348 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.293154388 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.281283782 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278388158 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.276371234 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.277181762 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.2791802 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275525505 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280640659 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274533159 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.280959375 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.277372154 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.27865799 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.280372416 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.278432085 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.280446068 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.278307412 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.277962945 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284778867 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.298025296 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281221499 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.276881705 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.284868434 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.293093171 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286883597 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294850359 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.278950314 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.277364048 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.278819957 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.281353412 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.280102863 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.278804754 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279745198 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.279341642 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.283500159 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.278068376 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.28189741 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.284487619 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280445353 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.282083618 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288950224 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301920565 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.280931529 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285082224 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.280201745 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.28318658 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.282374662 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.280271134 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.281369716 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.283668611 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290774072 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287877942 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.280401828 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.27960085 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27827526 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281578329 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.279433666 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281626021 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280185367 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.280911107 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.282296293 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.275645985 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280166845 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.27771845 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.279222282 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280012431 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.279843379 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.28709888 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.297895118 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.280598804 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280323476 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.281065185 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.278525197 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.280945346 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.278436076 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280226221 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280894551 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.282250242 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286538309 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.284320334 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.2797508 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277969243 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.280473422 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.281362845 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.278591086 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280782469 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.283082562 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282758423 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.279304781 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.280924639 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.276951953 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.281870341 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283220885 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.2859711 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279950839 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283499978 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.288220729 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283126837 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.279314992 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.281093109 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280844534 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.282273848 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.281150035 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.288538836 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302011143 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.290580552 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.293506933 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288348659 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.285199272 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284122 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.287246437 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.283854103 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.283700263 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282527281 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.2828601 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.283511019 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.285135285 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283426936 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.291805539 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.298756216 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.286438246 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291784261 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.303759494 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285721598 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.284942761 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.28486148 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.286763789 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.285940395 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.285870511 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.285927659 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29450238 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.303883516 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283616924 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286873472 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.283961112 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.284321528 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286561203 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280898211 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.282813452 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.2807211 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.285985914 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284592545 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285497127 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.286124869 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.283632165 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.285595833 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.288800062 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.291969583 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.28275037 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288839879 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.284556783 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.285182626 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28370083 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28416159 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.283153504 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.283039439 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.28549624 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285751827 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.286632714 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.287950748 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.285679864 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.289083769 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.288649021 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28856264 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.289530564 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.298406817 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.290367861 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.283535299 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.285555254 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.290126979 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.289614212 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286051996 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.287246142 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286242571 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.29059705 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.289116368 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286959403 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.288833713 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.289952312 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303980783 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.304544357 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290136433 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.288502921 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289523398 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287008637 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.285530379 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.291482598 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.291914943 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.294447616 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.29467428 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.28695887 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291753653 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303225121 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.289387055 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.291782481 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.292829818 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.297236186 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.290588502 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288710664 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.286157736 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.291591481 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.304647698 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2908838 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301034291 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319458386 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.309253387 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.293233774 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.287734362 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288928084 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.286668265 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.291955412 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.293182025 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.288385917 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291468857 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.292779447 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.291314259 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296864526 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.289771068 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.289705249 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.292740383 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290933639 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.292178101 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285135058 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.287434143 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.292114248 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.286694769 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.290050841 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.294669932 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.289336245 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302631518 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.315656062 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.29133023 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.288078991 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.284002103 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.295059412 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.296444566 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301820097 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.300315688 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.294935365 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.290513331 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.290599375 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287641571 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.288421321 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.290897706 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.289225731 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291712033 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.292017617 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.304385389 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.318603002 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.296826668 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.28782633 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294193226 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.292845151 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289738237 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289743635 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291785467 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.290480851 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.28940867 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295634925 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.292451081 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.29099312 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.296876778 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300823124 seconds)
  done (took 762.141510961 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290870365 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292324442 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290660567 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286329738 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288175275 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290310626 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28976774 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290072217 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288227193 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29066783 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290919675 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291926992 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29128345 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289489485 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288550924 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290213131 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287185782 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288211547 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290359912 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292577971 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.294078451 seconds)
  done (took 28.299447587 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.295558205 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.293638764 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294122429 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291820035 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290349523 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291440087 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.293628598 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2948677 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292284368 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293625044 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.296833295 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299306339 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.292570582 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.291829698 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294164103 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295382559 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.290735911 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293092291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.298258288 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294003277 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293271108 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.294574535 seconds)
  done (took 29.674593096 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.295959354 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.296752468 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.296087023 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.291389587 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.29498131 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.29596162 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.290327945 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.29682144 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297005585 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.295663279 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.295404966 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.294729234 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.302110966 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.300955995 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.296933537 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.29304929 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.443628222 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.295038418 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295963122 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.294607397 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.295221389 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.301847613 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.313095283 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.294247609 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.297880284 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.29599137 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.29604393 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.296128128 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.296466664 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.295080544 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.302826031 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.296321545 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.296618537 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.299869696 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.29257941 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.299608753 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.300274166 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.29646014 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.292588374 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.297899225 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.307700842 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.321114318 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.295829118 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.302926271 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.315573335 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.294086944 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.302451317 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.304107069 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.295200713 seconds)
  done (took 64.972649576 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.294992673 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.295616176 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.293460896 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297592816 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.295342753 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.299409542 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.297216397 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296325525 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.294086202 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.295638598 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.294807693 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.29322554 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.297986191 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299276722 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.295890731 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296784279 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295435553 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.293667728 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.295625235 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.293302588 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.295100547 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.297742686 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.296349701 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.299675835 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29607801 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297844448 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29561271 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.299773234 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.292003303 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.294212173 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.296395078 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297515209 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.302234131 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.297203952 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296383142 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.299008187 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.30216053 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.296505825 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300643241 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.296940917 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.298219823 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301676782 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.298476687 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.300403783 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.294026596 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.297195137 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296374271 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.298527568 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.293755256 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.299585176 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.300301354 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.298482856 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302560207 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.29795982 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299506417 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.301045407 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.299781111 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297238736 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.303837454 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.300409775 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.295366606 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300442831 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.297748622 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.296924775 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.297462495 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.295782958 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.297147584 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.296065708 seconds)
  done (took 89.436359556 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29824043 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.297785193 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300196548 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299562176 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298193089 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.300858362 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.302643064 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.298016757 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.298928446 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303132349 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300265745 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301157513 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.299211847 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302043579 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302009654 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.298822235 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.303821941 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.300786501 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30011989 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302507692 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.300358065 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.300141827 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.300462493 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303234393 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303651728 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.301299241 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302276629 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.300811121 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30109416 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302710603 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.304406721 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.299835724 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297169931 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.300626888 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.302312881 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.304451298 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306257944 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300867104 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.298428815 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.299082859 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.298806794 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302835249 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30170952 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.304449811 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300385475 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302173576 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306229669 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.306348324 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302092578 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.301200707 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.299041663 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305123935 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302533709 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303960647 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302552227 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.307037275 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303132819 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301952752 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303102681 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.30585843 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301535446 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.300732571 seconds)
  done (took 81.919891875 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302744607 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.300543108 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.30388059 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.298934625 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304778762 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.304292503 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.305399542 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.304468234 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.304422017 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.301780019 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304270094 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30303449 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299325249 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305275228 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.300719867 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301033412 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304253659 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.304196951 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306987024 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304094118 seconds)
  done (took 27.284470285 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.302879806 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310550941 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.305115055 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303446431 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.309182372 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306725112 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.303984876 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305960844 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306582215 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30390453 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305567024 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307554915 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303945926 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305359678 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.308978169 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303839015 seconds)
  done (took 22.11515212 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.301394848 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306223929 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307551331 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.305617887 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307701827 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.307438481 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.310633814 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.306403329 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.308673528 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.30678577 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.309053822 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.307394172 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.310857977 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311141821 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.306939608 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.309404108 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.306791632 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.301459202 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.306197028 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.308731411 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.305765124 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.302150143 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.309441376 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.310915363 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.309334661 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.307281783 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.305181591 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.309020595 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.309263681 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.308341507 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.304290174 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.309630986 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.303963778 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.304085419 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.307951521 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.304117148 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.311937723 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.309313873 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.311736321 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.308578676 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.308012553 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.305987046 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.311588354 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.311947028 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.308279578 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.30886207 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.308659364 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.309494006 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.309668091 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.312543052 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.309632263 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.309080186 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.304647555 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.312850233 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.31418257 seconds)
  done (took 73.16948682 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308296611 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308451124 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.311778423 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.312500949 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311374057 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.30906234 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.31298276 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314097673 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309936277 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.309219232 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.31108814 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311734319 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314495489 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310524802 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308802049 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312954082 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.30912917 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.310656257 seconds)
  done (took 24.823422626 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.312263356 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312096159 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.313341071 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312060065 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.316207464 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314273295 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310605812 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.317178992 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313728919 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.310075198 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309990088 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.310237575 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314003195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.315278022 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314073014 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310429674 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.314225209 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314985387 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313801847 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308597248 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310905762 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312305837 seconds)
  done (took 30.107657563 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.313936613 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.3134652 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.312042035 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.332451304 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.334342373 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.335262993 seconds)
  done (took 9.169707199 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323559797 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313980753 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315176369 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314139311 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314274767 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312313062 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314042667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311703159 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315567007 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31223119 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311631325 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31859477 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318309016 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312405703 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316603675 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31530775 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312725783 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315986592 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312596604 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315327446 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311127269 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313506351 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311457329 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312409341 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315780378 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315637723 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317291873 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315320223 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311703111 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318156338 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315305303 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31424157 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316256158 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313906811 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314112911 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315799213 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315463204 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315645054 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317629609 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314825619 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.316820227 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320287692 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319388225 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316034361 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314041205 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315432318 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316867737 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317107782 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317084482 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314528346 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315974733 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31626091 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31377939 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318060505 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318431853 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315306512 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316312609 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318642155 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318441822 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318956346 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314959936 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317817453 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317733637 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311515347 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319006784 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311155208 seconds)
  done (took 88.078932299 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316028825 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315677022 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318565741 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316765126 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313366927 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315128611 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315626424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315070929 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316818249 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314515435 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318739178 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317086938 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316903719 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315240479 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313441334 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315859882 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314208842 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317996901 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316187986 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32109236 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316000058 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315600946 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317966426 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31294445 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320311671 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325097328 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318789335 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314227759 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315920084 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315970069 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314392302 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3154423 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315589829 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315814729 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319132831 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316929671 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319526125 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316712877 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314602797 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322394599 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320525313 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32210604 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314935228 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315159339 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316621145 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316459018 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319113171 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319677125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318138387 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319116614 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317445055 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323442097 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318032675 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317327906 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315598885 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31847265 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319356808 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316521187 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319870229 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319971241 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320631467 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320835167 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323053824 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317842531 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319493875 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320704539 seconds)
  done (took 88.19066639 seconds)
done (took 1776.355452049 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.42336985 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.403074139 seconds)
  done (took 14.063484187 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.485725359 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.437666554 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.318401012 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.350328442 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.317802069 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.342452872 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.324522865 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.318309302 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.323694957 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.319695825 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.318384351 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.507617752 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.372850968 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316212697 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.31944493 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.417709852 seconds)
  done (took 43.033752125 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.350651669 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.33496722 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.444867703 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.348223788 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.351139158 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.518750613 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.38034287 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.329313873 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.514527153 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.374881976 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.966367173 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.347898142 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.330120001 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.490470487 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.342663149 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.519068325 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.589205856 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.95977185 seconds)
  done (took 30.730494179 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.804817457 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.345914939 seconds)
  done (took 9.388523944 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.360130686 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.38174432 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.352016559 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.348560562 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.358509931 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.342447512 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.364052332 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.384961057 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.351847035 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.375112995 seconds)
  done (took 64.865827909 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.348069444 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.329947287 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.329921346 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.323479457 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.314157677 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.336178313 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.324478473 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.322311824 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.229094402 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.464206122 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332628683 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.337461121 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.350313766 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.329419213 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.326896523 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.366466383 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.489258293 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.331988638 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.326251609 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.333747384 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.325710783 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.420904948 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.367328986 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.327898123 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.462383238 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.235518425 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.333392696 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.335413039 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.464176308 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.329453582 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.327161138 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.330412412 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329540456 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.947819564 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.824315249 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.341957786 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.353587812 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.342627695 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.324946691 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.493657258 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.331302278 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.332618694 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.320563424 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.821971257 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.469670568 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.449401281 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.682830084 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.352853894 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.3371905 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.394906238 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.334256594 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.331286029 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.360693741 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.112663293 seconds)
  done (took 111.940433692 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.355671444 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.706840899 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495343877 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.340321548 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.972879729 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.028201108 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.343665998 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.63767326 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.391802352 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321187114 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.664103349 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.852812894 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.347158045 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.364069488 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.953104697 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.368526715 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.324647734 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.107100544 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.344949018 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.321137744 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836028502 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318430416 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.339904212 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.501209449 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358899989 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.81749528 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.847241639 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.788092055 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.345999273 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.321998141 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.813429737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.351024941 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.348071026 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.322752601 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.601037185 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.705405152 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.700556692 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.343917407 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.348723163 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326834662 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.346997867 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814506158 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.722465961 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.340492171 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.348329992 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818994425 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.341617947 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.3343017 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.329613768 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533231084 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.967880835 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.331246942 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.836411309 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.330743663 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.603241349 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.367977183 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.374083312 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830444191 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343058693 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.398613898 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.372005515 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.324713477 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.33350727 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330674227 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.330087549 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.690978876 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.499287184 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.32501721 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.691756386 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827555128 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.362178003 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.872352943 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.199344209 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.343968666 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.442487247 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.326805296 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.910135131 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.842652906 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.375892048 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323840913 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.678645257 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.343242565 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.66339548 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.342257612 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.347511221 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850577635 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.334251666 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.372043364 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.332386106 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.333966479 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.972595296 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333330251 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.627540021 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.36211206 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.326550211 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.329410866 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.365412117 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323048453 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.324621518 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.328754158 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.872699204 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.359178504 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.316133831 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.352484915 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334182121 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.330655378 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.327582742 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.328533096 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.552907186 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.735065716 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.357100825 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330308374 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.327616162 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.337784249 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.527162779 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.338045679 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.65496701 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.34611422 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327965941 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.353105515 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.059798932 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367429789 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323311795 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.331671412 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.256117321 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.540145232 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.354529108 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.333963353 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332381258 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.347120238 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.640922863 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.348382492 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.402379704 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332132792 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05887589 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.375836195 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.339420237 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.61814552 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.342405496 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.3333501 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.334882247 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33016617 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.642168333 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.617190901 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.379320333 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.330720526 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.349463772 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.025123288 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.375089472 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476409689 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.358979087 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.371163263 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535525632 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70830706 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.329704774 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.922411304 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.331604492 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.548933113 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.344342481 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.642469853 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841698339 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.348174167 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.336228882 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.050963974 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.04176362 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.977307246 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.338287923 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.675012507 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.316561229 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.804812731 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.333727448 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.337289434 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.75436398 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.33872314 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.339900639 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.328044942 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.336550817 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.469964981 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.508617223 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.662172561 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33487021 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.801365766 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.396856666 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330491251 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.363528846 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.334245511 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.680006204 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.413144815 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.332268233 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.35045807 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.338335966 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.34161199 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.825556631 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.23544586 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.337737803 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490521867 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997730251 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.358774425 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.33435772 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.897094052 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.59988113 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.862414544 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.352505081 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.657933562 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.359995027 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.378041002 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.933534144 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.421578431 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82388863 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.350488066 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.3392484 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950192164 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.352805226 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.690929634 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.33314354 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.339822731 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90309496 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.351026719 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.340231174 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.628373803 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.356669568 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.589915689 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.340113056 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.384081239 seconds)
  done (took 1111.437356653 seconds)
done (took 1386.701506021 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.341948064 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.335841797 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.324026744 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.345120799 seconds)
  done (took 26.602581432 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.351983457 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.346245863 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.347479313 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.345162576 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.350060818 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.345110298 seconds)
  done (took 9.343954122 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.375563741 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.342454225 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.344181401 seconds)
  done (took 19.317196922 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.560130289 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.701055212 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.722599815 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.70538817 seconds)
  done (took 10.945315278 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.346006271 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.348971609 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.344097647 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.35148046 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.34850622 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.353275002 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.348735249 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.348447237 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.34916178 seconds)
  done (took 13.395755322 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.563078341 seconds)
done (took 86.429708575 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.321660293 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.371005711 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.777502537 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.450973771 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.381399474 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.344995057 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.014967653 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.31887421 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419648896 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.605978573 seconds)
    (11/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.014883543 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.384168063 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.36920364 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.172300656 seconds)
    (15/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.361799504 seconds)
    (16/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.232612435 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.470021994 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.345242067 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.315731437 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.321724227 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.32062221 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.319571709 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.343988634 seconds)
    (24/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.838549345 seconds)
    (25/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.767246005 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.262675732 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.877362355 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.026192281 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.64874555 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.32172838 seconds)
    (31/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.721203995 seconds)
    (32/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.266662035 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.823838192 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.762095971 seconds)
    (35/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.371671004 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.445821558 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.369111737 seconds)
    (38/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.749271176 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.353708221 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.375178564 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.343168819 seconds)
    (42/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.04609842 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.319694509 seconds)
    (44/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.491853615 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.030120625 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.15133977 seconds)
    (47/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.015880967 seconds)
    (48/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.40422628 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.210762548 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.846550275 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.450442652 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.602304828 seconds)
    (53/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.77498676 seconds)
    (54/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.402601776 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.321204954 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.770933242 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.338020786 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.330370383 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.398408926 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.312367385 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.934166178 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.355342952 seconds)
    (63/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.597873424 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.226003668 seconds)
    (65/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.364304156 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.320375582 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.396294696 seconds)
    (68/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.326796771 seconds)
    (69/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.343957011 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.386943232 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.346479322 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.441894736 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.413585495 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.573686821 seconds)
    (75/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.389592187 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.440428148 seconds)
    (77/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.350712464 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.617129785 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.413195212 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.384534204 seconds)
    (81/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.729989402 seconds)
    (82/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.56080482 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.533980166 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.362287937 seconds)
    (85/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.341654144 seconds)
    (86/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.842682356 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.449971114 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.39494237 seconds)
    (89/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.32492688 seconds)
    (90/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.940455874 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.376273622 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.992086189 seconds)
    (93/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.400969559 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.34619628 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.36620806 seconds)
    (96/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.463703679 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.719780206 seconds)
    (98/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.489946239 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.41133487 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.432530641 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.56366449 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.301458941 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.330441289 seconds)
    (104/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.559611863 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.335602185 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.345444228 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.269378194 seconds)
    (108/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.34676499 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.325910389 seconds)
    (110/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.833110755 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.971908773 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.346593524 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.362485693 seconds)
    (114/309) benchmarking ("sort", Bool, false)...
    done (took 1.861789582 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.388024201 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.283559909 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.222921204 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.339963539 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.600323537 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.191491037 seconds)
    (121/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.602358963 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.753569283 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.45719168 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.483233382 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.366029306 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.350873802 seconds)
    (127/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.476776863 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.490086268 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.358668831 seconds)
    (130/309) benchmarking ("sort", BigInt, false)...
    done (took 6.349049022 seconds)
    (131/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.903593374 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.212398126 seconds)
    (133/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.365938001 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.370006012 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.615594964 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.514794305 seconds)
    (137/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.432209426 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.17494576 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.267050852 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.332126758 seconds)
    (141/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.374853616 seconds)
    (142/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.371609767 seconds)
    (143/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.34166385 seconds)
    (144/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.754373848 seconds)
    (145/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.427592115 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.777256588 seconds)
    (147/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.209247828 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.363108805 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.727771253 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.370284013 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.134262506 seconds)
    (152/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.859921215 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.328937074 seconds)
    (154/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.410988382 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.957676325 seconds)
    (156/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.749656899 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.124231781 seconds)
    (158/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.437519428 seconds)
    (159/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.434960005 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.318844639 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.381050351 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.370704113 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.12761833 seconds)
    (164/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.347307144 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.367039775 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.392673602 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.13700264 seconds)
    (168/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.116266941 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.356614802 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.327148553 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.422129087 seconds)
    (172/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.383158817 seconds)
    (173/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.331175232 seconds)
    (174/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.75830356 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.38253777 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.392449164 seconds)
    (177/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.362042874 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.139994295 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.329297351 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.209983684 seconds)
    (181/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.243534166 seconds)
    (182/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.358241183 seconds)
    (183/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.727608938 seconds)
    (184/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.336518214 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.404147398 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.431776039 seconds)
    (187/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.413242557 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.642628429 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.385585406 seconds)
    (190/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.102366767 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.61098178 seconds)
    (192/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.398554035 seconds)
    (193/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.613678128 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.358027643 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.461917712 seconds)
    (196/309) benchmarking ("sort", Int8, false)...
    done (took 4.381541367 seconds)
    (197/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.367247917 seconds)
    (198/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.42677806 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.488033933 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.348307662 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.350820681 seconds)
    (202/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.432651599 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.373040758 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.559928697 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.986911494 seconds)
    (206/309) benchmarking ("sort", Float32, false)...
    done (took 5.378704685 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.330814225 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.942766665 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.0767927 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.448463433 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.481990008 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.380987064 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.647565281 seconds)
    (214/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.359841968 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.280818298 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.398752187 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.942960943 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.651852563 seconds)
    (219/309) benchmarking ("sort", Float64, false)...
    done (took 5.731384468 seconds)
    (220/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.331840363 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.344044814 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.393847683 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.910270513 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.854605179 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.322204319 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.368011221 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.457202053 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.077449133 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.998381823 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.635264248 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.376688806 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.819390271 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.374481897 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.35684123 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.510750379 seconds)
    (236/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.335268957 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.356099665 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.478969452 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.459141589 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.336328924 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.376874775 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.031688258 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.413852151 seconds)
    (244/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.255086666 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.437671996 seconds)
    (246/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.375651797 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.96341737 seconds)
    (248/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.375740523 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.684685211 seconds)
    (250/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.333914319 seconds)
    (251/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.09033325 seconds)
    (252/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.567979472 seconds)
    (253/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.395799715 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.337317346 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.446131582 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.590632343 seconds)
    (257/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.464434049 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.383216425 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.232121123 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.083880398 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.378343482 seconds)
    (262/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.548644932 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.350339378 seconds)
    (264/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.388163132 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.970107265 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.568971018 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.360805247 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.761380269 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.792571821 seconds)
    (270/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.459311482 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.369563897 seconds)
    (272/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.769267786 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.372240528 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.486131596 seconds)
    (275/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.932349503 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.346092211 seconds)
    (277/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.016094161 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.362632522 seconds)
    (279/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.181371449 seconds)
    (280/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.52882717 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.363209083 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.438869324 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.342816663 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.981084273 seconds)
    (285/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.342202736 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.443388574 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.479390523 seconds)
    (288/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.367623248 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.369460698 seconds)
    (290/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.336547148 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.180183081 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.808857019 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.336671689 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.333478698 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.504024825 seconds)
    (296/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.379610834 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.967562936 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.426461211 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.404876453 seconds)
    (300/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.043670221 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.513310731 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.970532935 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.361579314 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.426133406 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.102832583 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.918155425 seconds)
    (307/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.653114992 seconds)
    (308/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.861700992 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.387517085 seconds)
  done (took 1052.860068017 seconds)
done (took 1054.125723586 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.396643186 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389086319 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.375226723 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.395687409 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.481410772 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.394211351 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.388263013 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.377484929 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.423811434 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.421846981 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.369401775 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.393018833 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.373249023 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.373221001 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.371745206 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39031645 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.484841577 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.371425444 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.390969329 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.384447499 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.394493009 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.370226956 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.425372121 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.395846995 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.381411731 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.379316015 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.37831495 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.395754687 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.486314361 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.381417018 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.379141715 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.388636162 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.492100654 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.367611281 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.3720281 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.398125884 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.38702674 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.386220726 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.379344041 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.403252338 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.989671987 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.394927873 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.380469338 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.379162348 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.377935609 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.383691707 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.377380559 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.384798818 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391328566 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390396069 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.002354759 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.412278666 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.379879092 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.378038323 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.389850481 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.378841258 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.382611278 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394813546 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.396990779 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38982005 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.492043314 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.382662013 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.38013004 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.394788528 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.384529861 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.947430153 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.389197792 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.383299485 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.992340677 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.405836682 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.956616143 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.405286949 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.379514065 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.393309516 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.40847704 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.516510818 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.370518808 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.376257072 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.381528405 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.375504098 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.388236228 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390714466 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.383085078 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.380103411 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396487989 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.401755148 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.388363 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.381036901 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.386858775 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.397787555 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.389117859 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.393185494 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.385700854 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.373537807 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.389506065 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.379861503 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.383531686 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.382458424 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.384008895 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.392119001 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.923089318 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412514868 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.376882088 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.379032238 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.379208608 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.395679944 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.924350163 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.399385493 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.404062204 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.430668674 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.38203543 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.526272138 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.386286395 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395133361 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.390759743 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.385394561 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.380028226 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.528210975 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.009539098 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.41490433 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.386103947 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.377442732 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396630846 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.38312238 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.375379997 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.542181329 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.384540396 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397026731 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.498951416 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.38774853 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.410848008 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.37768033 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.38656138 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.402447242 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400810975 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.41026024 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.384205722 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398005494 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.396384407 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.380291502 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.394007803 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.397418569 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.386561555 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.390116191 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.378316547 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.404635185 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399525214 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396219016 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.405301726 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.50545968 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.378632394 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.476870695 seconds)
done (took 234.409927196 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440399432 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.380203878 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.473297319 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.380017605 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.484016794 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.480053371 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.378231645 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.378644975 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.378830986 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.763250662 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.375726789 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.379050207 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.372446724 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.376616341 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.464332126 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.379683412 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.381038828 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.725318618 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.381639341 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.446579269 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.376801481 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.377147531 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.380962235 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.790715181 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.377853505 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.375269825 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.448138351 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.381586168 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.764559742 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.376791233 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.382249311 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.727633699 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.472667353 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.400825396 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.392654997 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.38987311 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.485434795 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.402470548 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.465198708 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.465551766 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.478177581 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.420510797 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.381328445 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.376054487 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.382894556 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.385362151 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.380465062 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.409678675 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.381119247 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.380925052 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.723910579 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.389786074 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.388748997 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.380306585 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.381383465 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.404131215 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.379543518 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.382085991 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.475774286 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.382593096 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.443203878 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.7648467 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.762894265 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.380002219 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.375976305 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.379451664 seconds)
  done (took 151.713180021 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.450747679 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.453857254 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.500965028 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.397528916 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.433866613 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.505676305 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.396825194 seconds)
  done (took 11.427256981 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.384991918 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.387424256 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.433782979 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.431946607 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.382555639 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.533044452 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.382514669 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.394160015 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.382769489 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.436628508 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.386170339 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380660169 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.388932274 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.377972076 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.426390507 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.39256171 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.500390422 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.384221116 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.382283796 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.540151496 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381308842 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.390636678 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.43330531 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.399547578 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.384097851 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.390280606 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.955517216 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381176019 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378145235 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.384758018 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383968158 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.422892999 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.38612512 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.377059755 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378908636 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.500067377 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.384812263 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382073304 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.387454625 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.382289443 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.386869898 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.384646623 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.388090142 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.381972016 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.379819776 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.409035299 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.385380501 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.386007474 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.386575576 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.387084285 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.439279276 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38578645 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.383046668 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.384624503 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.439707194 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.39304361 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.389243158 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.380728097 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.390091556 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.382426467 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.54355999 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.436481457 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.388911977 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.433546732 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389078302 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.382455806 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.388507023 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.386897092 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438725593 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.388355887 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.434590078 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.385421573 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.544008288 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.411407483 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.389136438 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.393456996 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.391636187 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387942055 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.382231905 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.395052857 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.385298792 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.390105396 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.395903679 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.387888104 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.391508309 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.493620798 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.498096911 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.389552162 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.402818075 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.394648275 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.386847585 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.439392322 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.387150089 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.385360189 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439933503 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.503003481 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.43728346 seconds)
  done (took 158.309849346 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.391629203 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.390655545 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.387522661 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.402888871 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.387496404 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.392398963 seconds)
  done (took 9.647043415 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.392065513 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.393648261 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.391384885 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.39036285 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.39333915 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.389389909 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.387133947 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394855386 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.396509821 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.391636099 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.39340949 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.394212917 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.390993092 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.390751296 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.393733138 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.388411104 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.387993106 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387014495 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.391005053 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391917636 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.48477935 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.394268518 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387033428 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.390551004 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.39689869 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.385808584 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39507719 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.388131502 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.390321388 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.394336728 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.412225939 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.390330817 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.391462818 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.394912127 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.395979757 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.388176133 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394636454 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.389858811 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.384124978 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.391516409 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.390880105 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392282762 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.392778026 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.390345864 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.394419581 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.396284275 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.400480858 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.401426541 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.389839472 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.39171211 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.393826455 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.395571113 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.391549325 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.392215186 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.396481914 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410995132 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.394997537 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.395184231 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.390831721 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.393930511 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.394429633 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.399116922 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394964409 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.397515024 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.402492179 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.391495473 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.394354991 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.398081659 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394153963 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390959756 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.394287282 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.395210767 seconds)
  done (took 102.711114782 seconds)
done (took 435.09901138 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.404140786 seconds)
  done (took 7.701942651 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.606924812 seconds)
  done (took 7.907051173 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.34093385 seconds)
  done (took 24.648911895 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.436009592 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.473552399 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.42006241 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.403680596 seconds)
  done (took 27.036046875 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.7019897 seconds)
  done (took 8.001326888 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.399083576 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.382343131 seconds)
  done (took 14.083593064 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.574810524 seconds)
  done (took 7.874762743 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.053571634 seconds)
  done (took 8.360721002 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.416272772 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.415150835 seconds)
  done (took 14.401287492 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.369810305 seconds)
  done (took 7.672526912 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.505197476 seconds)
  done (took 8.808090689 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.858235801 seconds)
  done (took 8.159639466 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.407442284 seconds)
  done (took 7.704822661 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.191938702 seconds)
  done (took 10.494213723 seconds)
done (took 164.159670962 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.388514158 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.386999204 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.386832019 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.3823745 seconds)
  done (took 26.84622359 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.435264074 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.434828991 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.436576231 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.442833457 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.43560289 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.432549806 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.424975137 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.424532553 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.442418516 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.435515947 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.432951407 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.436957741 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.432095693 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.428320352 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.438276144 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.435465188 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.445711949 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.43501951 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.424671565 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.436539781 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.401254218 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.444672122 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.436844092 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.401325905 seconds)
  done (took 35.675772988 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.923229523 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.470800775 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.555058437 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.454292413 seconds)
  done (took 7.705929612 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.450153195 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.453339981 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.464010398 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.508940975 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.531370642 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.465122258 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.427379986 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.420646115 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.40867222 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.452377737 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.528539312 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.468087627 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.543201846 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.401214625 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.587389022 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.396276804 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.398874999 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.450795781 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.503976323 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.520856218 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.400556602 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.453313181 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.46098219 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.471260303 seconds)
  done (took 36.472886454 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.399964788 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.421470621 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.4003911 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.402887615 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.4094549 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.402152526 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.404019509 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.402199037 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.401776652 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.40790639 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.399815064 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.413499914 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.400917906 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.402170105 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.408981535 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.402155245 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.406864974 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.402745001 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.402370651 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.405730665 seconds)
  done (took 29.40099557 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.395203461 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.298418118 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.749648515 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.651173414 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.397781252 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.387728842 seconds)
  done (took 29.182953304 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.478940995 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.647170309 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.403825953 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.798219615 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.884533094 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.416266621 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.402868551 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.66986985 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.017024995 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.004199899 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.466459897 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.480206804 seconds)
  done (took 20.978226411 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.40876201 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.395714618 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.408183276 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.416017088 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.46656713 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.422622209 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.411619544 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.394896948 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.465587431 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.484641938 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.42531735 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.467875372 seconds)
  done (took 38.47791739 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487527004 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446556423 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.545140788 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463209507 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.117864005 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606647461 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.398934115 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.841323947 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.39649043 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672748909 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39886508 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492108285 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657741913 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393148237 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398389711 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.482257116 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64669893 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945154711 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402484579 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766349541 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425627788 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412959597 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.775780949 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.435959478 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612943873 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.544509533 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.662418449 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.179952394 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727216816 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413660702 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411175503 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401201182 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673570797 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10773999 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511737294 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411579063 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400237081 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.971760971 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.382356093 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.754621692 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407436222 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405801842 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414305533 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404143267 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.337052174 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41473196 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867547283 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.404519478 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.114561583 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404923942 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411387229 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498675903 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.408398827 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.395874788 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463358495 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.42282441 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.402576327 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49918678 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985733061 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.245596972 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411663444 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.341311168 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.411668247 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.677542792 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091019869 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.514256254 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.410208954 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40733623 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338778969 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.755021391 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42232862 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543641229 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.422591517 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068152912 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213789288 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.441809962 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337341566 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018623961 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408642464 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.341681903 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634584867 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.183252858 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347519336 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.354862044 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.34222415 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206293959 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415908751 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.921788665 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42791209 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.874133059 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410021935 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42075886 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431884848 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631246438 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.282414329 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406129451 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.413054747 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522391704 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421130503 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87648034 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335034163 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.401758216 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665716076 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.620527021 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412064762 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.490985626 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647551526 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4115607 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.423311534 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411023483 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.421070844 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.043608939 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436349914 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246770919 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428707797 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.187285225 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243450991 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424777878 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.509982982 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411534861 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679759459 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.265935969 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.310744644 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476426866 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413563802 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405411476 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.783423108 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00851016 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.303941304 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.404508379 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407575075 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.419677144 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.411244224 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371514286 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.410660938 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414542254 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.188946405 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.633570839 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413469664 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682685352 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343527874 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545938502 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419921051 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.626594294 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.740885134 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.425527717 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672541919 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414866907 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410469469 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424662196 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430364477 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511200477 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429484368 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.419907439 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669776896 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.414477545 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.416210867 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.812471466 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.191808631 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410183044 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.418524748 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410917805 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075543525 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407609959 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406307619 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301238945 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.423401306 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481120583 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418937638 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.42466353 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.432348563 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431642884 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.416110393 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.414030881 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634595045 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420797226 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.711339065 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491072196 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.62217968 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047622168 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443785186 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.348431164 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.125834757 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.103975558 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410024077 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.603234065 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413086293 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422089954 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424495189 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416972917 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.049958289 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432475608 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.723950268 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.419966763 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423793229 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.421164486 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413709831 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.42144411 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301940109 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418801236 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.439347374 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555343168 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.427462168 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.348873552 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.931715974 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419626781 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417226353 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.194701287 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451375074 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.719653006 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927684786 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671558215 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430443586 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431028342 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.917513192 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.454024462 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.425337065 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413911651 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427727488 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.441593218 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424989481 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.424065366 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.78296894 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.790829832 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976027815 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254698463 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030273204 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478970696 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.434305818 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.312099417 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866055022 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342057543 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074348062 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626699208 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.883733209 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366366825 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628310651 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.741814852 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284282881 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428836547 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648305243 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458632488 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.422452977 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431359368 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626352249 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44862688 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.423670696 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.348242985 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.68883138 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668567687 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429645403 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496775389 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873901505 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40835749 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.217886548 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.425681147 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.865046716 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616459429 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.966978314 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.813845683 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416573941 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418550098 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948223121 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41516573 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.947437974 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086595844 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436264394 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.635486212 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353869746 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.425377092 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.428027491 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.413361528 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.950390247 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.419345374 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.67522877 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429613647 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352251723 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417948224 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007213635 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.295728379 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.423337149 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418478078 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272318522 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421958821 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745679964 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.430772525 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.423465647 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438592358 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.358032809 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354144521 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.112808848 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.427436571 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391120128 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981639598 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.435828568 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420303263 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454505047 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272081176 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.676829512 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.433731225 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061984951 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66667782 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430315155 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445324714 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.52338959 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419801307 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.421456823 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.304777845 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656533109 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.504179813 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.660667158 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.57768085 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.322359126 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431764735 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628505858 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.300897081 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421785765 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704266435 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.148767968 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.428625203 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253752027 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466186633 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432381569 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444914594 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429956203 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443746667 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513852439 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433217548 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.434131167 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.432645449 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613205231 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422568872 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426010948 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.440156256 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517205391 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.308915816 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.437096278 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.195829444 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075307444 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284761869 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087670076 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454607094 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.424952962 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423453637 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361208061 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568144416 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.955497239 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698371698 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541440854 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.433504888 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448223859 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425020678 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448212998 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639441506 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69872008 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.40264372 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425383002 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.232423571 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.325120556 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435833516 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.636303098 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996742171 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071885167 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542069562 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425602282 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.874026344 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692586882 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.51720136 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425913139 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017356349 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.442757733 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.927044162 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.451652551 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426784109 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574495126 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437520388 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132111124 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.446763168 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.579871093 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.202372603 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.767228498 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686509413 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.995845776 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.439776884 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079393624 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.227553407 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694455206 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497473668 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437422477 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.534678963 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575754973 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.426060557 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.317435826 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428997742 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28195905 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.135059981 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.43440839 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087382166 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71059913 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.419582473 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.426643434 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451973561 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.438013309 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651298702 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230836593 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654599855 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436322365 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43478943 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.420985851 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08126204 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457506655 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364642538 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.425674046 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706244372 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.684190675 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452078221 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.882799436 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.140930076 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060576185 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.409349631 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445455068 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433650131 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.214462856 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085164306 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.467260366 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00768136 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091831661 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441903449 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704716712 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.435813245 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432789609 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705859074 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.434297991 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43294636 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443685736 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.080719065 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308782072 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.456307948 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.898043014 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.368377809 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.661660438 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43850378 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3608967 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422742763 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.623267164 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425780543 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549234846 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434177869 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.443808981 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429122825 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.187943093 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71112948 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.427380246 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.410354553 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.447182302 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436392994 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528997347 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679464044 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431408836 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.106076976 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.784144981 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.691140905 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431285888 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.409220767 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.436345616 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431114383 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15807304 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.448738325 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.445580262 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073230923 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.442111625 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.442475184 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435308757 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.647120103 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636195283 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.424685642 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.465049855 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447861297 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448268039 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.33145132 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.208641909 seconds)
  done (took 1693.384451841 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473228994 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.4762193 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.447980317 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.53152759 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.43965308 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.510366199 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.446165938 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.524902183 seconds)
  done (took 53.186106331 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.433590934 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.602451578 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.462143613 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.44501082 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.43411724 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.443486853 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.94535344 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.469714575 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.433760786 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.442088273 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.437742701 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.424203707 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.138960975 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.443275344 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.443307503 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.418206567 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.43493165 seconds)
  done (took 67.197901173 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.449118588 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.857845468 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.476449405 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.433721159 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.139058023 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.46069978 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.935883532 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.467599021 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.430353054 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.786712868 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.100197331 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.441072901 seconds)
  done (took 82.321174478 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.444789376 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.442236261 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.442824925 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.441442647 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.443373903 seconds)
  done (took 8.554301378 seconds)
done (took 2130.693924295 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.825516283 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.219982864 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.147461019 seconds)
  done (took 5.70639317 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.585217806 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.633955864 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.791866213 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.781486686 seconds)
  done (took 8.134772253 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.725683807 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.823141823 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.634942595 seconds)
  done (took 6.524804718 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.004898319 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.443675277 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.460981938 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.440901077 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.436629308 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.437542105 seconds)
  done (took 20.655058829 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.442363853 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.443316038 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.440760274 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.442136879 seconds)
  done (took 7.11293278 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.418063439 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.136644815 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.408932871 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.426762639 seconds)
  done (took 18.734304654 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.188620439 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.201885309 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.185788223 seconds)
  done (took 7.921146348 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.441839696 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.294076192 seconds)
  done (took 10.079057083 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.737210649 seconds)
  done (took 3.081509666 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.572248871 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.770461107 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.591718395 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.546747554 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.247642042 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.825501657 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.264328184 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.795111367 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.524183129 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.975063261 seconds)
  done (took 33.456236827 seconds)
done (took 140.49149922 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.592436146 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.455911052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.647659616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.565071976 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.662006271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.645520137 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.725112145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.536941859 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.29792482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.067137744 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.560671615 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.664660672 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.898602986 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.46498197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.900720557 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.462291681 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.671296385 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.633080824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.249145554 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.44712402 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.719846525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.206247346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.391160763 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.442311535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.673504634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.595199794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.778480563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.454661686 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.423816822 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.810872639 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.589642664 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.445339532 seconds)
  done (took 199.025162953 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.447798694 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.44246141 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.432355259 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.431506706 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.459100976 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.440818189 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.445663672 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.434762593 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.433050498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.449736859 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.450728184 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.454313639 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.43403635 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.45225136 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.43624899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.432937052 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.452628808 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.433673834 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.431700672 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.450813325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.435228489 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.453563961 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.434240631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.449270063 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.435680596 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.458472501 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.433609586 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.446956295 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.434152077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.43510191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.452214456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.463831383 seconds)
  done (took 207.525562923 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.442937271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.444505605 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.44436992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.433884497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.434722954 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.468039534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.433323732 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.454716352 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.435242149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.433993165 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.437227857 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.435470549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.459107124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.436415489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.439495915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.453825829 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.445417227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.434855592 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.436326224 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.44985174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.437734734 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.460345005 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.447245934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.435877124 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.460026914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.438335811 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.438391437 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.436561697 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.447294518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.436032844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.44496077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.446369661 seconds)
  done (took 207.532279495 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.643382806 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.452984896 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.450283585 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.385763436 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.452517259 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.451057461 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.449352511 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.64984983 seconds)
  done (took 15.285169998 seconds)
done (took 630.717453475 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.903295482 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.658027831 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.664651532 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.473591097 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.380288369 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.494602375 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.470532107 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.664235249 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.4258844 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.666761599 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.829657399 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.489995363 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.981526945 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.474226262 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.751643195 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.581035685 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.410142016 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.54229086 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.820325411 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.146744791 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.746111115 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.052494505 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.684413215 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.410321049 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.956206396 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.039684904 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.318477924 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.400309874 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.492512216 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.827077849 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.323196957 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.585074031 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.547655796 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.544072434 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.600005278 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.581677762 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.558169179 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.54002737 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.688493155 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.770194319 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.138281086 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.218121654 seconds)
  done (took 99.202322212 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.437115271 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.438487583 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.437333738 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.436518451 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.438226597 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.437964289 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.437966955 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.436524437 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.436432044 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.438708689 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.437270426 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.439486156 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.437034489 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.440144682 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.435555943 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.439589609 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.43887978 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.44090432 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.437603745 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.439740085 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.438967215 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.436658842 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.441007048 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.440147196 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.437900535 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.441040681 seconds)
  done (took 38.751908208 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.456443212 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.73613834 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.909352996 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.464235075 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.454242809 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.460889453 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.542289377 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.459973454 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.459148145 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.4581054 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.637599756 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.457804152 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.498651955 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.936827372 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.464461802 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.461082368 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.461566915 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.45854579 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.743420632 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.469034844 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.568168494 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.461846262 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.549417231 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.470066695 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.479226743 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.459924985 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.463744253 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.992320516 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.479356591 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.63758759 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.350604129 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.545372409 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.943477077 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.937742953 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.354096943 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.463668974 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.462175411 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.647401705 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.461368863 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.454444731 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.543935876 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.461986933 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.919586424 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.110858414 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.484299183 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.461834188 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.013383202 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.66632283 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.744172882 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46986096 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939301367 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.463983615 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.458003812 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.46285182 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.737203157 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.467775539 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.457303092 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.021227472 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.489609508 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.544351152 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.463587174 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.461689202 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.739653332 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.461836682 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.728767127 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.464226813 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.465175445 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.480191563 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.918513831 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.464968179 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.125996727 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.48505965 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.459908988 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.645236325 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.73174786 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.054416038 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.486200007 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.747419617 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.962349136 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.568467919 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.467928768 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.979254729 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.573879476 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.467797129 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.461165054 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.465077991 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.461104177 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.511355037 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.550003707 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.066289256 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.140440167 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.04490394 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.57369238 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.478217146 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.460657351 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.020474147 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.486927707 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.466429555 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.922880285 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.131047473 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.486854101 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.471643583 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.139153948 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.48646867 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.550145603 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.470176861 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.92729964 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.468063847 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.506839505 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.46626101 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.473202229 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.484760781 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.546877096 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.470974295 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.47237562 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.107151399 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.675091528 seconds)
  done (took 192.297561135 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.461477557 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.469855724 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.458888059 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.449919191 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.458569772 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.464131186 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.459152302 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.460027237 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.465153459 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.458098134 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.4604815 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.458636447 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.459988415 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.461265022 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.4621792 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.466441827 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.118175781 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.461379131 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.470392898 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.45167293 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.277823108 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.457227919 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.476782156 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.449889478 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.461162004 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.460827394 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.462132247 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.454995436 seconds)
  done (took 155.741498659 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.468106754 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.12652345 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.483529302 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.614877666 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.491499306 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.466711956 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.616246449 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.533537498 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.486926601 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.458673472 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.466874906 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.813258611 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.461788252 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.071453163 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.684098495 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.637731162 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.068764662 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.48632647 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.466797449 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.467491634 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.61635124 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.468432779 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.821427503 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.127897707 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.488394041 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.125100625 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.453376613 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.468059625 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.464453382 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.128434962 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.485670836 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.821527817 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.556963346 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.536932647 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.116964721 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.080716685 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.092450508 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.639179707 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.471428839 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.465162915 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.467329235 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.448283094 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.131523795 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.487839877 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.468883215 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.120035868 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.490833453 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.469373541 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.472850006 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.468134647 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.536546744 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.555564844 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.844174996 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.136272705 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.575588127 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.4835235 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.616836459 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.851214146 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.470892891 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.072760373 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.452123362 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.138089677 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.49098139 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.453124199 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.470107448 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.476927428 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.636327333 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.621906278 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.074200492 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.491304337 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.066333786 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.658611831 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.470581705 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.467685749 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.471039071 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.135705219 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.092755257 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.65301837 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.622256978 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.689881845 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.456042205 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.463903214 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.45787443 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.557470621 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.469520571 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.130960521 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.095056298 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.49163277 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.471749424 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.474446725 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.469760709 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.667140252 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.151488183 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.580888279 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.064755227 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.850147474 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.827790993 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.474581658 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.537347242 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.488059017 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.829482176 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.474691228 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.538473194 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.918608625 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.831384175 seconds)
  done (took 176.742935365 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.743962812 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.810892558 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.561247289 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.615896365 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.133618496 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.065429742 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.832771583 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.623409523 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.595480227 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.753427112 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.784481627 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.565263195 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.669116823 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.556324702 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.245824999 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.560324939 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.593620412 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.631078564 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.597018041 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.557496523 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.161128968 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.786923788 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.665324818 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.49237984 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.575626449 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.3369055 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.077786584 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.027783085 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.659125666 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.96807476 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.046228639 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.671945051 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.524925835 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.238490152 seconds)
  done (took 71.100729311 seconds)
done (took 735.192904079 seconds)
SAVING RESULT...
DONE!
