cset: moving following pidspec: 13195
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.313534705 seconds)
loading group "string"... done (took 0.637573099 seconds)
loading group "linalg"... done (took 7.717204476 seconds)
loading group "parallel"... done (took 0.157717803 seconds)
loading group "find"... done (took 1.228247572 seconds)
loading group "tuple"... done (took 1.845911359 seconds)
loading group "dates"... done (took 1.291440779 seconds)
loading group "micro"... done (took 0.226606604 seconds)
loading group "io"... done (took 0.912046442 seconds)
loading group "scalar"... done (took 38.661414735 seconds)
loading group "sparse"... done (took 12.016561827 seconds)
loading group "broadcast"... done (took 0.958050434 seconds)
loading group "union"... done (took 12.619620323 seconds)
loading group "simd"... done (took 4.566709174 seconds)
loading group "random"... done (took 9.140911919 seconds)
loading group "problem"... done (took 1.854572439 seconds)
loading group "array"... done (took 21.14227368 seconds)
loading group "misc"... done (took 1.737144419 seconds)
loading group "sort"... done (took 3.340456294 seconds)
loading group "collection"... done (took 17.43778803 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.530332552 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127877709 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135968598 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122479066 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150524933 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120336594 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128070057 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.089437708 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.848215168 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151165333 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118992842 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417678693 seconds)
done (took 5.380154102 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177612026 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087368616 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087700451 seconds)
  done (took 1.29085 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069492939 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129220588 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071920129 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071875147 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071577998 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071590705 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071354358 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07126941 seconds)
  done (took 1.674600951 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078162845 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073084323 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070820003 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075541674 seconds)
  done (took 1.414174764 seconds)
done (took 5.753392117 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.767419749 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214767794 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192521002 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396399693 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135397879 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.177906588 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6525823 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.308022842 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193908288 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080318749 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11264503 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.348697332 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124973384 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641274505 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078698454 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094702541 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141882153 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442734992 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071723125 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086714361 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093663826 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133449983 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092797394 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080089813 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150213712 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07228519 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136518107 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084113614 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071089196 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220011703 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176350653 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.670409447 seconds)
  done (took 10.395299291 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103152314 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103803463 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073340279 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130344409 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103421604 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074097125 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079688224 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071738918 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09405947 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134722049 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09625832 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110729013 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070500352 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072371567 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088917052 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212342794 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084816312 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08575736 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074636882 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083095289 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11227494 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081997944 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085252014 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08451556 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134019524 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.187406014 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103703001 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10138099 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070518814 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087571417 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119632021 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131346753 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070318798 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070110057 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130880889 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098740971 seconds)
  done (took 4.774034081 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.989841144 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145964922 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093374778 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136902838 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069390776 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110765747 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070671862 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084920015 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211465541 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.375697752 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.600658765 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114983809 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10840258 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072144925 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07307656 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071090924 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.481059033 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102536298 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109876507 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084830275 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074548213 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073319494 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36376704 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071653535 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068408293 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07181621 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06154158 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123253744 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07202206 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.94164121 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169610463 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070402132 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104981524 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165828663 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.22359846 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090562287 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143276945 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074009403 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069417415 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162309469 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074141796 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070470673 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088653053 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107715794 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123587028 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06973169 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071209314 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168647968 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070094291 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082584477 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.139716288 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158018118 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082201165 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069934292 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.270680457 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093684733 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074316161 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069974534 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.171414969 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12729218 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072429424 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071732709 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072825653 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073226247 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36832827 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070325636 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.882705956 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074794572 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082125786 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074094366 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073282635 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095525098 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076948991 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077042157 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091422592 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069074846 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070414821 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078892126 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070762035 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071070691 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071010809 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085997723 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.368937451 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070894582 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071424254 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068478512 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.200424656 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103225637 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07491999 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073150821 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106469466 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072322154 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07136323 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113467679 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071621311 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085943997 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074112388 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11742667 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073624579 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092451783 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0724465 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099089959 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069693141 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073460675 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103407808 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083475085 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072654989 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.4110154 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07098012 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074277799 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07261032 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06995779 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07243373 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070598121 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083697915 seconds)
  done (took 21.968072497 seconds)
done (took 39.24378431 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254792627 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078776351 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078490457 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078453025 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078713603 seconds)
  done (took 1.779183449 seconds)
done (took 2.975564427 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124965776 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102719975 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069972455 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103678475 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06927314 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104019793 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10279157 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081186789 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103339965 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069456612 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100086587 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069643343 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069639251 seconds)
  done (took 2.377813311 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090732347 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088290065 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073860139 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086898771 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068154189 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087922075 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087352629 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096358069 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086525707 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077546987 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068515393 seconds)
  done (took 2.095983708 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086716383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089000533 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074137054 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086841569 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068225631 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086669758 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08681581 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091601082 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087520715 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079274827 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070564669 seconds)
  done (took 2.088145539 seconds)
done (took 7.741206875 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082708416 seconds)
  done (took 1.255380293 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.550291099 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.741982266 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08588905 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111148764 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19377479 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11917413 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.262350422 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090314023 seconds)
  done (took 8.500343718 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095421247 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087018861 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076354853 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075402095 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074017802 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076970286 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073241348 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076346427 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076105801 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076591504 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073323324 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076381314 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073978475 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07368212 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072707156 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074425858 seconds)
  done (took 2.479341543 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096362126 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095306285 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078432926 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079467415 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077004949 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076239812 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078285703 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078107437 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075515741 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076534787 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079625601 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077588966 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075916101 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068754781 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078367146 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080725659 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074991997 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078182691 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078626522 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07990505 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079654685 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071001579 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07840739 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080437062 seconds)
  done (took 3.167258833 seconds)
done (took 16.58541977 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109069207 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072115686 seconds)
  done (took 1.358932837 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085470161 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08658034 seconds)
  done (took 1.358080143 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085664369 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069166155 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092713299 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082381193 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070275853 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069996744 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091550731 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070177359 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070161513 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070105381 seconds)
  done (took 1.958812444 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072504239 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079930306 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074677373 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085588073 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077803153 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06909254 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075933381 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071412824 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080977526 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067627786 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075718016 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087931587 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075954326 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088152229 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075758956 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073170775 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075574826 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072291319 seconds)
  done (took 2.570305955 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069271835 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071278716 seconds)
  done (took 1.333632798 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071275572 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068186164 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07165263 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071301218 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068149357 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067284125 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068347491 seconds)
  done (took 1.67559862 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.370905888 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121225516 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.323145258 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078448688 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089256133 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259627413 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071105103 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07585014 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076081451 seconds)
  done (took 2.697153938 seconds)
done (took 14.148137057 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084225823 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091022718 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099043071 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382096636 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09696688 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.071327199 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118061709 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187802337 seconds)
done (took 2.33445126 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209897578 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.658996993 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.425720037 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215270351 seconds)
  done (took 2.494070231 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338725427 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093280053 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.064244465 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071926779 seconds)
  done (took 1.773148171 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070940645 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07322114 seconds)
  done (took 1.346160694 seconds)
done (took 7.025104415 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071318275 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071025531 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.068954596 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071468225 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06752246 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068640052 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070885514 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07088087 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.070472213 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.071167284 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070653643 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067955707 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0679093 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070721399 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087610834 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067938849 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068173844 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070455318 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.183138544 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068712771 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071111288 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071438946 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070266901 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07052682 seconds)
  done (took 3.042657658 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089753548 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070985509 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.078003585 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075452157 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074029854 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07555712 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076137685 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.07021145 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075771074 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072917787 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073417788 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073515345 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072626885 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073223814 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073049717 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074128623 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075456509 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070923538 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073269077 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073871809 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.076213385 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07124137 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074038915 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07575114 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07395408 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074247809 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072873785 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071349312 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076143531 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073683285 seconds)
  done (took 3.442560829 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074732373 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068394342 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06918484 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07639128 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068340128 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069245447 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068059451 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068426354 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069130114 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.069051443 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069964821 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067634709 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067646766 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069009484 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06860976 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072052025 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083759272 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068699619 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068384187 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068146542 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070953507 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070496382 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068049917 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067959483 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068159348 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0678378 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06823356 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068451372 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069310179 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069390008 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072695775 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072524945 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067945283 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074996683 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07182332 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067887783 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072261442 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06744688 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068584554 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067428838 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06816275 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068288133 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068067058 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074372645 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068609065 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069191119 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068521545 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069615942 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068375382 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070750513 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067495825 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068483175 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069911603 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069544647 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072472482 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067628117 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069317082 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067356123 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069157547 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067668463 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067645995 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068093939 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071005545 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068839279 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083382448 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075168574 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068283638 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069161455 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068328882 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070920785 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069665495 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082020556 seconds)
  done (took 6.256591712 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093661381 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091793145 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07002985 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069395724 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066159078 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068902657 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073768244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068668056 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0701489 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086926549 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068677643 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070629397 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070291156 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072428005 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068899327 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069882369 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07669497 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066090238 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069014883 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071965392 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069024407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074038838 seconds)
  done (took 2.833627537 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154839839 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075658393 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108813319 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079822193 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074843806 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079880401 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07458023 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07427519 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074154384 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072359216 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072559444 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07497853 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074045758 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072340121 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071899659 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072115895 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074837429 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071928663 seconds)
  done (took 2.672409337 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081623693 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070076883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090869622 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070784319 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070318027 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07279371 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075086988 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078821456 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073759238 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.07068732 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07825837 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07290096 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073389688 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070489633 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073230935 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070899464 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072934221 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070826758 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078314309 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075109274 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074982997 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078473232 seconds)
  done (took 2.865568924 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083453333 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072598929 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084698755 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072115127 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066399333 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069200853 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074449874 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070311752 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074629214 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072438162 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07046227 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068732199 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072976426 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070502792 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072989071 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071206813 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074205406 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072665966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074475982 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068156681 seconds)
  done (took 2.679774582 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090411284 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072894205 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072500871 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079440798 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072826217 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072154896 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078638025 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072031675 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071547016 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093343352 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07214411 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072936356 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079963177 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077764151 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075323374 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079449602 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078961004 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0790542 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072077014 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072055008 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092739204 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072356236 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078991442 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071914478 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072096363 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072110657 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072455966 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076621497 seconds)
  done (took 3.369186285 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071720633 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070844682 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068445856 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06805257 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067989544 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068180228 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068815479 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068372747 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070513823 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068705209 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070904213 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070660356 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069840193 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070406555 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070324655 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070467627 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070599051 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068112553 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068403198 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068472852 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070420225 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070624239 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070615729 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068209055 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06783376 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070909116 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067865321 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068126944 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070628304 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068373401 seconds)
  done (took 3.311918672 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07971699 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077233133 seconds)
  done (took 1.38618633 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067762189 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084960039 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068449744 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074733198 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07389988 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071776485 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07811873 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074474736 seconds)
  done (took 1.819394787 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086205053 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080451923 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.07107435 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082042294 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080912774 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087873511 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138095432 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071165151 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076666333 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068882036 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084147523 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070100013 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077069937 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071449685 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076089218 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076622832 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068148913 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075576978 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072578265 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069014196 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071681013 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081520327 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075950235 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068083584 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.074459302 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096461769 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08497129 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071990651 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076096646 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0812439 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.078496566 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067737721 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.072767047 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073266995 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070919558 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080613267 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086106346 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073524562 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080059217 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071329166 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080509657 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066727772 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075745673 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078232606 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08134203 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070657336 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071455116 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065853157 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069314408 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073239279 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066440646 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071589771 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065526849 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07817757 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075068441 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081514623 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069673044 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072759878 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073955649 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073988521 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077454885 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073281138 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074081557 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070588335 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081604095 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075409402 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07887622 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06633395 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065736681 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068667652 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080324506 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094551409 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077330869 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070710996 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070670738 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069146761 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073851142 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071492803 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077045841 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077283939 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.071195015 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07568927 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078307727 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071426702 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073934532 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077945721 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068702108 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07266971 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068956648 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086137795 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069424552 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068622936 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068775821 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082842936 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074849558 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069660599 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06856774 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076855591 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064646367 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069683724 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06970084 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070044936 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07921721 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073034492 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073669862 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078154413 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077077622 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070096034 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07244907 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066751691 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.19992456 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.074281671 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082233797 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.068486146 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077855708 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073453985 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071515838 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079504123 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06940634 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.072053163 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079013389 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077346064 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069606135 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068064402 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074923747 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070892188 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073243859 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078575563 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070215223 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06617383 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066580502 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075377184 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070871694 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075035805 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075751757 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07464486 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066161387 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069490167 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075121283 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079359127 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07118005 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072855884 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076861924 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071706691 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069046904 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077836444 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074005917 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070030392 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077072401 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072002245 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066083535 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072980677 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07376269 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069529224 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075019519 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072958779 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073295889 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071250135 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069223009 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077418466 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071513229 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070352772 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070738099 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069998667 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080772204 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073164216 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065687687 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068391644 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078250178 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069846615 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.07001184 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070389321 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073633045 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071227679 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06905145 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070703715 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073642935 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079399084 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074594922 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073121253 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07809968 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083628321 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070716677 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074899016 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.07256779 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072923019 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072078861 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079492247 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076482 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075011703 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073047886 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067690703 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076997318 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078357801 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070530177 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068529439 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070784313 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074899535 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077111672 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074437769 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070488252 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068160717 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071423998 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072904862 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072800801 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070108527 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069863343 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075251306 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068206912 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075497021 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070181558 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080339983 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073583887 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064396942 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071408907 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067856857 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075587232 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065124768 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068234237 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069484553 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069664448 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068625214 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071978244 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064414577 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.209760981 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082173239 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.074580646 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.074469146 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.073471345 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081741561 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.075061263 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077249161 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.077638626 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.079921832 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085261183 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073656964 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07706057 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084135993 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.072530414 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06693957 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082169457 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.071860879 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071974126 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.07245843 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071875761 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077613311 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080712571 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080036081 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066774008 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076162031 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.07140238 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072741986 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068306601 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07766538 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076054028 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.074595393 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080660279 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073736632 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.073463152 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077731405 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.072321279 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.074132068 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073737197 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076491433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.073339184 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072724099 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071588604 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.075704737 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070372567 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068072094 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07315426 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.071079646 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.07319092 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078371962 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072921065 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073473064 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.075895474 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073501553 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073686415 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.073965426 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.072511266 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076508891 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074129521 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.073718618 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.075336314 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.067544083 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08052711 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072811461 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081091613 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.073936448 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.069967499 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.079326235 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.075901513 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078154021 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.072922687 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.072977323 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.074514939 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072393066 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07565 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080471108 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.071864819 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084112947 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079868379 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072289815 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073697417 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071802497 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072878475 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070652225 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072720887 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071599574 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071881061 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070121165 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076894333 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073980016 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072101326 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073441878 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.072690849 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072383935 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072336517 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065384755 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070663236 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070978909 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07038499 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079781316 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070646222 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070736615 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069595472 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071473484 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068589405 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066888577 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076817735 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076550284 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069845979 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076398617 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069057631 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070780201 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080779676 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063579737 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068097126 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.201004951 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.072390838 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081938635 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.074142691 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084498068 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.074618975 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07328912 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069824085 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071945449 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.07055965 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066139728 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069943069 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075539466 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071350323 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070733395 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071338726 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074517074 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071811323 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079973271 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070055547 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073106285 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071534729 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068135273 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070118534 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0706803 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073604267 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071522774 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069314275 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068468485 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069840292 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072336774 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072521584 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070024972 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072203627 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077593258 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070797071 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074478726 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074055463 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065599031 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073400998 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.07059292 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070957036 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070093326 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074230367 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073791669 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071208911 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079072445 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070561076 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074338954 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070620301 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068545236 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070338638 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070938743 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070082626 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070563599 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071073456 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078636509 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068660768 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074243557 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071261629 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071639268 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077040057 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071119363 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074324621 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075992556 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071327338 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072851325 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.0793296 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075332231 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074261373 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071203878 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072104595 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077226669 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070761579 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078056844 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071155623 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071492041 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073142951 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069907387 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070681375 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070138813 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070234273 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07740873 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071230141 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070649056 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070449303 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069086566 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.07222603 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072948035 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079039113 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073087768 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074170911 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066247789 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068469562 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071486457 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069427959 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072106915 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072601384 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075964333 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072336533 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071765524 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06890122 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079028725 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076293745 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073871077 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06842181 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073942298 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07009238 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072003842 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071280062 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070157043 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070698763 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072977531 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071527302 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06954345 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07643164 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073240553 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.203815596 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074018018 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072640736 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072561266 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066201425 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072366619 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072699141 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077426571 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074580072 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071196312 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081793724 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06923811 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072386666 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074375317 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070346132 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075675616 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066581056 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072758585 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071242927 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072079143 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066157753 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.07077136 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069670777 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073231195 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07031263 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066276118 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081914983 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080354388 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073725517 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070249552 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069843857 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066794239 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066294797 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070227825 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072621686 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07344209 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081252851 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07061282 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07041935 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06566687 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070153956 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073559379 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073887492 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067984969 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065637328 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.07162501 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074240408 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075822235 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069499088 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070155636 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074615196 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073736715 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068956941 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073434426 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068110928 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074202745 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082847214 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071556997 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072165098 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076585019 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078349276 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071214369 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066042363 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071107541 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074265438 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071287995 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071024238 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071392093 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085440872 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073745386 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070131285 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069947571 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073628755 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070720491 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078761368 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071406818 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071572447 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077745685 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072515396 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078891034 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073861042 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078280833 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.0737129 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07446799 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069833434 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071818118 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069417026 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.07078027 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071532047 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071075015 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075409651 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078227976 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071000302 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080950436 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07916566 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071812348 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067528684 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069811179 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069692823 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065572982 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070953675 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068618156 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068666362 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068306303 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069353535 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071369486 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075410847 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071506568 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069704906 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070134296 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06457311 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072348194 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071905584 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070977885 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066359445 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069355388 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.20307756 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077894285 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074569846 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069998276 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073898472 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073339078 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071869249 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066375397 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077175918 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069505576 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072908863 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070524145 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070750525 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071602553 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074785921 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075563861 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071748999 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072737917 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075101849 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073266281 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.0685988 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.069394402 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076132883 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068822815 seconds)
  done (took 45.559376603 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104438955 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067018525 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066345802 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066839911 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076598797 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067367551 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066250861 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06709086 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067456398 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069475336 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065839799 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066646579 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074254063 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08139883 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077706901 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071032366 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066702509 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067598145 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066770946 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067142334 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074727901 seconds)
  done (took 2.812769731 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076766425 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080587654 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079413605 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085982241 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075078863 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074368547 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079090705 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074843562 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081923156 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076344717 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082234836 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074436372 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076735423 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076396589 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077008551 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074041234 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081719737 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075078427 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07410857 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078494686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074358676 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078865812 seconds)
  done (took 3.013245083 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071593701 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070231603 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071669899 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065597196 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069894169 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065936914 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073146002 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068628078 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072791649 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069618368 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069982922 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069381589 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072244883 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065295798 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070326692 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068804401 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110987939 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073840987 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06960247 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071422566 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065865776 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.0719733 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065459536 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066104052 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069994573 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073142978 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071023716 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06827971 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070504348 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070090294 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06982531 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067496935 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071916846 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071026447 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069247977 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06992742 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069866919 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069973682 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065802116 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068000769 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070301746 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068200198 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071024146 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071949039 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069378081 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068517512 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071856432 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069994015 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065961814 seconds)
  done (took 4.761742122 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082178488 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113925595 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.07104672 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093407699 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08421177 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07730597 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073780588 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094072411 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067759616 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068915446 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085642973 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083303668 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070262985 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074191232 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074183924 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069657019 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070304646 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068834313 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073438806 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069560433 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073369812 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076546808 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084274421 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082250904 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073526308 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068681858 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069698009 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073900564 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081534155 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073705085 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.0746058 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075277084 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084414891 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07518656 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069371389 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071936395 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085737867 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070020186 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072690998 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067351368 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072277959 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073822073 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077177648 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086213207 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069914769 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074380851 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069761586 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067024292 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082285185 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072379718 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077589527 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083027827 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073719261 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070053126 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074175244 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084808802 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069694648 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068611765 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073075658 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081782392 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06764596 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074246546 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084041202 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.073489129 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079333164 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085590983 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07758158 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075449235 seconds)
  done (took 6.629121392 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079487366 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099503801 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087042242 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087803219 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079981661 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079409519 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079948783 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079903247 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079402887 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083934768 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079667778 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120081487 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075603692 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082391724 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088254239 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079893522 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07992206 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079865825 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079809786 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080211101 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079662647 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086717922 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080152708 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086974938 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083912522 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075284794 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079910626 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08004673 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087435507 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080433573 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08593937 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080490405 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079789359 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087008795 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083724985 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079067106 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06983067 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079701721 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079449158 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080198767 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075227648 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087273591 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079232571 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075177364 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080434815 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079430227 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086902315 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083517968 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08177873 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083790928 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079925936 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086216229 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080249994 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07966444 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08631493 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089941563 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086627611 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087265329 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080068569 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086351784 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086507087 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089996403 seconds)
  done (took 6.473851194 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086419246 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077737217 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086708548 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065610304 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069094006 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076058664 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068893183 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069457168 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07824378 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080711449 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080599264 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076618343 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079202928 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080719139 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076120314 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079453832 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076197313 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076113842 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078095146 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076607931 seconds)
  done (took 2.873522929 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078867373 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08710432 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07116769 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075310418 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073183685 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076269811 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073384365 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073620231 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071657902 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073394974 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079889566 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080487699 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07114004 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076210066 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080025685 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075567133 seconds)
  done (took 2.540875009 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087555624 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077405498 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083653207 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070634213 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071000857 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067217123 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070802816 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065868376 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066776654 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082070761 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069741531 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080567188 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070494952 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0686841 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.068148293 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075540332 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066706708 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068523205 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069826929 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.083129566 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073880991 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069080338 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074066298 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070155591 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072638849 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074062936 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06944457 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070457523 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067344858 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071782588 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07361146 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074189261 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067656517 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068029218 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069344172 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067818206 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070024353 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.07049123 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075445518 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070518943 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068745585 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072371057 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070636878 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071904825 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066203542 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070823644 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06702408 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072345341 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068133427 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07250478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070048852 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072674984 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071133929 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077725094 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072697039 seconds)
  done (took 5.273569683 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084309776 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073878469 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065976519 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068637385 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073777285 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071874361 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073838518 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071335801 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072176376 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068595288 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071975059 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073245647 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071471961 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073439452 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071940489 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074115417 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066274262 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071998832 seconds)
  done (took 2.636752407 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076816685 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070257772 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07768272 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069675298 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070270097 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07349793 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066172594 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068972883 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068636967 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070511004 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070961771 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073355249 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069472473 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073097045 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070341185 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070470618 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07243408 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069609495 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070922606 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066704308 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073261465 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06868986 seconds)
  done (took 2.890203136 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096817792 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086300498 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143976226 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083462636 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089098196 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07603867 seconds)
  done (took 1.906617418 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095105153 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104786743 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071501033 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073594191 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080386347 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074439958 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07471917 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074498039 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08188444 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079640703 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074549532 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084887883 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082296191 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0819245 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079743109 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079848486 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074112607 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07720502 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071040736 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086811781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075176723 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082436486 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075105778 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074856843 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075050065 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081979879 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081936799 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08030987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074516846 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082027822 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080134223 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074853014 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08222727 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080339359 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07359375 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082550128 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074663062 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086846233 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080282896 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081868861 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073222672 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080370881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082731007 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07885326 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082480907 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075018441 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078870423 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075000629 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074879826 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088994265 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08022543 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081959995 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080064735 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081935101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082180781 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089283847 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080535216 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081651404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079587226 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080228767 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081867265 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079498874 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081477304 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080023647 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080181214 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08172169 seconds)
  done (took 6.61149805 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107502803 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071461045 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074320503 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079996026 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081105052 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074831103 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074877765 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075075391 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074963675 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07110403 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111598733 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07476764 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081444398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082152142 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074771098 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074743863 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074930948 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081829169 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071500947 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089025539 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07494256 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082067749 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083218542 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084057969 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083086932 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082918549 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076710843 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076787292 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077082287 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077253018 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081848204 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077911963 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084858908 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073696717 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083930508 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075583981 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074923232 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078921832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074994524 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080139619 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081563632 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087822793 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0742368 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07446491 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08069905 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07414368 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074854002 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071615916 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074540229 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071652227 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080392573 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080509392 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080326647 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081847719 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074996034 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074695555 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075093502 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074824355 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074820704 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079503162 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081268173 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075047122 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088911974 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074843382 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074601503 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08151218 seconds)
  done (took 6.560052839 seconds)
done (took 135.428607223 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197483185 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174065269 seconds)
  done (took 1.698807636 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074019356 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102317403 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081290464 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132354894 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07057314 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104604731 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103313565 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082285232 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07050889 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070563849 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070988792 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07343596 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135419721 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070577346 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070141025 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073209632 seconds)
  done (took 2.727267456 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101653143 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163726324 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105046378 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06973191 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101766459 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07680747 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069096282 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079399579 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075359687 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069659961 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076678205 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075457283 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06981359 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074920313 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077041246 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076493418 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069265618 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077165702 seconds)
  done (took 2.852614143 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101034589 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09489284 seconds)
  done (took 1.542381415 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154759797 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136521879 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204885978 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342830237 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16046387 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149559351 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145269754 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144553907 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118363452 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140794588 seconds)
  done (took 3.040601017 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101805765 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153767867 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271030382 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119232157 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076927366 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097000782 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121411854 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082700097 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083842467 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084263155 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.0838609 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080414194 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102524818 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077777079 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078823104 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079897794 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105943756 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077558419 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078603119 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079536129 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103398345 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070654891 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078014938 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077154685 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082702843 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081572627 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071017385 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071175255 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080285874 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078478035 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080284576 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095716257 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081206196 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108555664 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074758846 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109388447 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080757737 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077587551 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078979504 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077379339 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081629045 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08261954 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077444002 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079954382 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070502292 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080979908 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070325241 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070211075 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081237563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071744274 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081620751 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081152976 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107759095 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071852912 seconds)
  done (took 6.173001375 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111058305 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110807434 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074470616 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117050119 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107583319 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073561711 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109114642 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101108258 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111762958 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074169835 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072298465 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07479496 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084044655 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085904846 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120036983 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112798974 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076936528 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073864832 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110925118 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111051339 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072618717 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104554845 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100842323 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110739011 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071685155 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074873897 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07237222 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073866673 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080522588 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082282473 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072600634 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08335471 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087183281 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08183501 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071161804 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072472387 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072375163 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083213959 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0827183 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082966666 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081441155 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071544177 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072244985 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073657894 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073302725 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072189545 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082226068 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082948404 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082455409 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072441613 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073810226 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073225543 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073308948 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083374258 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080680486 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083342607 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083265898 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073001975 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072085989 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075585767 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083380142 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082565725 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082337181 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073320314 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083001833 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072530676 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084222192 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087706144 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072789437 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073986632 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073066601 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072600429 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076602561 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081303385 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081285708 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07495709 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072769525 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07358116 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083069077 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081136961 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072582335 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079780494 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071638578 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072016807 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073860583 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073257463 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079803367 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082853742 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074101415 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072503207 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071441373 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072144971 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070257258 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079089685 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080203794 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080104236 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080064186 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072263006 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07992385 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.213018676 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076358179 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083350812 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073612656 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074028332 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074863421 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081967673 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081690228 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083248002 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072745155 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073527351 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081463091 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084540621 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072249466 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082008638 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084099823 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082764424 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071873705 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085892916 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072664601 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083127028 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072896106 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083999019 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073410393 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082402476 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073488242 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07252798 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072306051 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.0827499 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074645388 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072696029 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073729594 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073496069 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082070766 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085574244 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074567613 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082755378 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083073385 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074514316 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081412609 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072915182 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082730207 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072512827 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074601372 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071574953 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084990472 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073281393 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072086243 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072272237 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082916142 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072923472 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08380846 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080493368 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071928204 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084521445 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083789439 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080468584 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083337366 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074152181 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073169986 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072891022 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072737472 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080894483 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082629244 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074282813 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072521568 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081498526 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082898804 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072766489 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082243975 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081664235 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081913422 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072810752 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072661326 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084276468 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083862639 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081801098 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081670676 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081927628 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072648413 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080907661 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081453367 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073065197 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087735738 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072503671 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086091999 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080944546 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079143539 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08063874 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082261598 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082857444 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082750301 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084868757 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070792802 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071489063 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080501299 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070870173 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070843466 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078927973 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072735023 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072378985 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.218640874 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074801963 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.084040417 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072991992 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082641312 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072455524 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074571738 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087127014 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073845067 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074660109 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082885424 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073265132 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08204557 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08440001 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082145371 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073679149 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074283236 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083604698 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083976298 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075671445 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072328805 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074949769 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082393756 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080844285 seconds)
  done (took 19.508055001 seconds)
done (took 38.901542905 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203322095 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151779703 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.165928013 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117998572 seconds)
  done (took 2.080846987 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117511054 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103050011 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094523428 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069771142 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102357164 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069681236 seconds)
  done (took 1.93769994 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.291958479 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.201667159 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180657291 seconds)
  done (took 2.05169266 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202771877 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189540606 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.431006937 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.266314555 seconds)
  done (took 2.573749741 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14527835 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089940473 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072391729 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088397794 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134241582 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162092474 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102228004 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127220428 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083182228 seconds)
  done (took 2.436995959 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147993828 seconds)
done (took 12.61353851 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19328104 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.124161202 seconds)
    (3/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.226179688 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.230889465 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.246182758 seconds)
    (6/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119350388 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097999998 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.237286871 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.214312891 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173383111 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.077642435 seconds)
    (12/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.120019323 seconds)
    (13/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080269366 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082743363 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079110122 seconds)
    (16/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125460976 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.112380191 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.192710329 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205820222 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.209241064 seconds)
    (21/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.125919419 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.098351085 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.116170698 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199700456 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157566614 seconds)
    (26/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123869564 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.127633923 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093434014 seconds)
    (29/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.113193712 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.181207966 seconds)
    (31/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.307570909 seconds)
    (32/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189761047 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08696784 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.205292395 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076823683 seconds)
    (36/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.132523635 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097251593 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100591 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097056916 seconds)
    (40/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.137081302 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.205476478 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094960843 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079801474 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08778106 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.186050649 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.182007864 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077886237 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088055106 seconds)
    (49/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078682507 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095314452 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18373325 seconds)
    (52/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.160608093 seconds)
    (53/309) benchmarking ("sort", Float32, false)...
    done (took 0.133766115 seconds)
    (54/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173294992 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.102752991 seconds)
    (56/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.083224084 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071641451 seconds)
    (58/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07623644 seconds)
    (59/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074612124 seconds)
    (60/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101441515 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.204705339 seconds)
    (62/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.154414251 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071416 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125174326 seconds)
    (65/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.128034492 seconds)
    (66/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087095638 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055519577 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094475545 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.157297115 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140036765 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09094475 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066834233 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055879802 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07638849 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072756715 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148587186 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.285088335 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097625993 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094825808 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.082620216 seconds)
    (81/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195700456 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094929607 seconds)
    (83/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.080275713 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.08031054 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.071949955 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055705396 seconds)
    (87/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.115834585 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092899463 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.120693555 seconds)
    (90/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074215764 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078387649 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.055504918 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077618686 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.218129465 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.163770799 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070567083 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.107381365 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.055837494 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055371964 seconds)
    (100/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.111695594 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086704737 seconds)
    (102/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.069219413 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09359998 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10126193 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151311463 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.164049389 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171826677 seconds)
    (108/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.083516653 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05669168 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057202945 seconds)
    (111/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077728487 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07689371 seconds)
    (113/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084741578 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069986829 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090279982 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07738191 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147897278 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071421104 seconds)
    (119/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.056588078 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133635844 seconds)
    (121/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073469607 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069637401 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182078964 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097762976 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056333734 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083747688 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.148205115 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092468205 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.079648934 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078796962 seconds)
    (131/309) benchmarking ("sort", Int8, false)...
    done (took 0.150277198 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077847036 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078271548 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.08836523 seconds)
    (135/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.068051491 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074821478 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076497963 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069401605 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076394842 seconds)
    (140/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.056215364 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05566652 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122921377 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156308656 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.123849273 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095874514 seconds)
    (146/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077833827 seconds)
    (147/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055558836 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076514081 seconds)
    (149/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057817413 seconds)
    (150/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075810992 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174784755 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070341099 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070533431 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09101618 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092421663 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134498406 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056942865 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.080634773 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.058348361 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069708885 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077437153 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069737681 seconds)
    (163/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.112740611 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079764494 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055447109 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148252834 seconds)
    (167/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071299656 seconds)
    (168/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077360852 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.080216732 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077662644 seconds)
    (171/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082854461 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.161963722 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.07024273 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055813116 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079050712 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077415059 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079031052 seconds)
    (178/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05575489 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134267521 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065118085 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054576949 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092642123 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079204427 seconds)
    (184/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075753498 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.293103711 seconds)
    (186/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.16438555 seconds)
    (187/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.057948716 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057775823 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.195649661 seconds)
    (190/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.056262208 seconds)
    (191/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078280478 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07831354 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082502297 seconds)
    (194/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074596113 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070589683 seconds)
    (196/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154943342 seconds)
    (197/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072251594 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079662833 seconds)
    (199/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068238573 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113545564 seconds)
    (201/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074441885 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193723755 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070674777 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069756293 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.084127985 seconds)
    (206/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.164984646 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071288731 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.056097196 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078230224 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055359376 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107166946 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183573078 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093958228 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078576372 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077526498 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076321232 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055931006 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057854406 seconds)
    (219/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094272651 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05540256 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056868968 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07577449 seconds)
    (223/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068026002 seconds)
    (224/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.055203315 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068540736 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080899573 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.056091721 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078659214 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090955282 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072434379 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071912416 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142001223 seconds)
    (233/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072566571 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077382319 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070211094 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07208395 seconds)
    (237/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068680748 seconds)
    (238/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094916387 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0764004 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056356282 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.057356894 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.07016538 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.070361627 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180789206 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072071196 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070128197 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070351393 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078682896 seconds)
    (249/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.056861741 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055929475 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104685725 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071538342 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077849564 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14230842 seconds)
    (255/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05742473 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070235521 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.057963722 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090400731 seconds)
    (259/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056894653 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057233276 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072844287 seconds)
    (262/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056776421 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078224631 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07861684 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.056408796 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077990976 seconds)
    (267/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056191278 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 0.131612963 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056089805 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056020841 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071800021 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072058567 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056894447 seconds)
    (274/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073381151 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056897041 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077122189 seconds)
    (277/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074585348 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071982517 seconds)
    (279/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.056834387 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082460817 seconds)
    (281/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.069040225 seconds)
    (282/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.056202801 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076848121 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070044059 seconds)
    (285/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07513633 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069987148 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068518393 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068545219 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054900381 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076092735 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069541068 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092601291 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069422775 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07522003 seconds)
    (295/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055852007 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068970663 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070644842 seconds)
    (298/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077742505 seconds)
    (299/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057000076 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17891172 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090561259 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.099486961 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074707496 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068534226 seconds)
    (305/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067350437 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055740265 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091784731 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054440378 seconds)
    (309/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069411696 seconds)
  done (took 32.032858237 seconds)
done (took 33.43012213 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091559098 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09643164 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080750452 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097600022 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085316976 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080378366 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077116589 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082997781 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08468557 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086324516 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084040155 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.059081734 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079246109 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079351847 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079808065 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095500927 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083923511 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078189014 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078166811 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069276695 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078247577 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070321978 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07160836 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.059005691 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083103508 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076648896 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079406447 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079290318 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070110608 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070507004 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074235207 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078586272 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070034248 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08437225 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077812112 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078061985 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079838622 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081895947 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072325677 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070553879 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079875604 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070356018 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077687708 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078474363 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076293155 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075989806 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078659872 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082395799 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095168253 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071878873 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078981797 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080163977 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081448984 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076721714 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074201922 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078371869 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075973041 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095130875 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077747866 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071426126 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078909135 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079010841 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075580692 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077944141 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07767868 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080630952 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081201227 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076289549 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080399025 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076882054 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070126112 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078292465 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073882036 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069965425 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080771438 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082852385 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069315916 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076431759 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077936768 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078167631 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069314152 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071960153 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071778891 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076288045 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070866867 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061723395 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074458767 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076488409 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069108242 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078396608 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076441681 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077174629 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072020603 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081443369 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069073193 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075418055 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069750602 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070181647 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071328689 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074596772 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069424575 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071048902 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080390271 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071159964 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075687877 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083074669 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070125151 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07704013 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068731994 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069556895 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08312614 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079125187 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069438537 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07161721 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068614888 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076569462 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068505662 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069146471 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068702898 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068374458 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074547048 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068873896 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070260617 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075818022 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.222809296 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071550141 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075204911 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072623901 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070854904 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076052241 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069922498 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070169111 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071949429 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066416312 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072555155 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070066504 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077368416 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072034602 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078614526 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071496762 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079726448 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075332218 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076586982 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.076187813 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068712923 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063724085 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071786316 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072214712 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071525781 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070269523 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072486905 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070527342 seconds)
done (took 13.197900187 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071572882 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.134982672 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098091775 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097511531 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087292107 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070474165 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079185704 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098854732 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07189471 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100356589 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090167184 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088777492 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113607501 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069098275 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071013644 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074386314 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07187192 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084331437 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099749643 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088652785 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114071548 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069351199 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094849277 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090865541 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090056053 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104547394 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071651835 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074423023 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074465056 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094122433 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090773808 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075108206 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072021138 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097497294 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094104539 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085380218 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070629398 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08513261 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.07151216 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070503599 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.072127119 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098504239 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082891537 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083885696 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074171878 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.079977508 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07159352 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084775876 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090796468 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081321309 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087990323 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101873028 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073124832 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08643647 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069457852 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087713404 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080065229 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072315051 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070786869 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078296561 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070933449 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073941879 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083776523 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082897807 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074384201 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086210668 seconds)
  done (took 7.011452344 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088283071 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096126018 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086576581 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086645102 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06957811 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071308561 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071123091 seconds)
  done (took 2.06773611 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071595044 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091915896 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093707461 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093139629 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086684682 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091832892 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082658614 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071225027 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090961901 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072234033 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091581555 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101651994 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074251614 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07807463 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094303378 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070507634 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09458484 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071198819 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073510357 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.0940893 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073588558 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09948276 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074195356 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071733819 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085008896 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071659032 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116593858 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074692958 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072483991 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073970159 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069797628 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108811745 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085378468 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078523214 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071247596 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087049368 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08567196 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069362093 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087721319 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079229668 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085425551 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071499279 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072023494 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069373294 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074458127 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081831997 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072133308 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071950462 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074309893 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089945148 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07199924 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084664036 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073518481 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076539452 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073058384 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077596396 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081138794 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073176112 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090837696 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073254205 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087343295 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087190843 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085171164 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086855047 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073369554 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084422823 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08498521 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074091079 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072666891 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074774096 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087026808 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069573549 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072623407 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081515033 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072986916 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093129542 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093116537 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072911204 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083540215 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071739486 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072171763 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07133021 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093311776 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076049205 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071227762 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075512512 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07450112 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069942054 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070021525 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075453803 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069954888 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072732122 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074033494 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074185523 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073481192 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086940814 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073342929 seconds)
  done (took 9.231316621 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073087008 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073069499 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074136632 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072261017 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071427874 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072243371 seconds)
  done (took 1.960190434 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09496886 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072995226 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082725902 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074769015 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105733845 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.089960811 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090444449 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081486314 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087205207 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081920873 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090134349 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092048404 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095911131 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076407534 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09086378 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075197487 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090580567 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077897809 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081054567 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076715678 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088464701 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076014485 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076602969 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085734925 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079252608 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075783061 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082208347 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082142219 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081740178 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081914639 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076425522 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079532367 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074804966 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081944435 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.09066712 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074875113 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07540851 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080910432 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076249869 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079332966 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091972176 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076574678 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078217264 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080883588 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081315728 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075021628 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080849512 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082798871 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091252157 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080516797 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082863833 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074985336 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079678948 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080679486 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075049941 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081276714 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080698792 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091101673 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076501894 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074458046 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073268463 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07967029 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081072096 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079383796 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080607941 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081033203 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074885082 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075735097 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076613552 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075195497 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080188414 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072847679 seconds)
  done (took 7.350901057 seconds)
done (took 29.104121784 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538887649 seconds)
  done (took 2.021029577 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609670998 seconds)
  done (took 2.116258889 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.470448877 seconds)
  done (took 7.973109851 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.395741912 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.494855165 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.730239705 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140180613 seconds)
  done (took 3.308455303 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.718319694 seconds)
  done (took 2.234341013 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239079344 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229720556 seconds)
  done (took 1.996864758 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382086773 seconds)
  done (took 1.887074434 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.125299044 seconds)
  done (took 2.630760579 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.246628942 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178939628 seconds)
  done (took 1.93775094 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.46409686 seconds)
  done (took 1.975419345 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.855786104 seconds)
  done (took 6.363165148 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221214018 seconds)
  done (took 1.772325901 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241590323 seconds)
  done (took 1.752293093 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.747799675 seconds)
  done (took 3.259753805 seconds)
done (took 42.746201868 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088049942 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08911091 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090039534 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086249989 seconds)
  done (took 1.850846994 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08200476 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07705805 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081102778 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076303326 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081358248 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07755878 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079188492 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079618682 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077593473 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077757055 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076941206 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077461815 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079963003 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078697702 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076070372 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079678209 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080632291 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077251195 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079638647 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077603039 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075460069 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079564412 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07971775 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076157263 seconds)
  done (took 3.397890199 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082309862 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077896484 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078740637 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077021681 seconds)
  done (took 1.832623229 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08224602 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096896861 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094148146 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084020897 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097135722 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090834332 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073828061 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073606705 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075144685 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082254048 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072854363 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100061496 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093355066 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082430316 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084071344 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070075862 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072374962 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092223986 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083876604 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083549096 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075359132 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083365145 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073459547 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092693148 seconds)
  done (took 3.522947677 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090245497 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104791065 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085270974 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094739069 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096764579 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070495004 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091570806 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09689148 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129382251 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070085944 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076570419 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071014516 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078609091 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070527385 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086336032 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110909002 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114084919 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073144681 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102484796 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07065196 seconds)
  done (took 3.307074982 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078032967 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07443967 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.074768934 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070401695 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081171449 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076960349 seconds)
  done (took 1.980387413 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072833442 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.075415826 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072263436 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071775588 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077279032 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071869728 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070352258 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072336114 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072851474 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072385874 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071033833 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070707852 seconds)
  done (took 2.390570635 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19215059 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07347927 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073411247 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070798833 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074699637 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070957918 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085404346 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072748866 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096343694 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071931728 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071015618 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073759765 seconds)
  done (took 2.548105085 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207318766 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079881417 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236892311 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156377646 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11341763 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118600708 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115327261 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116858954 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143781596 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104697784 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16784024 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167636619 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111384942 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14093381 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093517636 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104254959 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156634744 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168042712 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109997674 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165759073 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148317818 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128840835 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148032638 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10566617 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108232106 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123059701 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075847584 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083759387 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172260442 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136503125 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147135591 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120273927 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095550366 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179587259 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168710853 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142599751 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150588404 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088311824 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106912038 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133329067 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196029223 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09152859 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163644169 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257448751 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08482997 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136446594 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121010517 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123107627 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10866251 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093963901 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149873939 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181794904 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138459949 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090394104 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127433154 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116257039 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116331538 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116866821 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181876565 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160597067 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131496351 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076291968 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114149171 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15248153 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133850261 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111211756 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126954399 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094959153 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137883499 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155268906 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126728815 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146397058 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11974105 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092993448 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121662896 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142240167 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131008859 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162191823 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12701892 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077147597 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125617941 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102378879 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084056731 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14552998 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078768806 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17416081 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102930748 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107672809 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125025367 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110542372 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110161321 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156784395 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293015178 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106937891 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070779579 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110069285 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121287948 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149481547 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091491432 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111015791 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119632241 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082201708 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138214872 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079737597 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126681757 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080395858 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12919762 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132542599 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08166993 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124702234 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106920074 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10450884 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135280762 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159081266 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091511093 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085486558 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165808334 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124464299 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105511635 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14488619 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156393278 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103063406 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102585943 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148739162 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173023907 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093552832 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162839985 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107783293 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087177366 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091504321 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125891759 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114070043 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126412497 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085775156 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121394613 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168236818 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077693622 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098670577 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136719106 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082220277 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084194916 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107397769 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106950267 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099431519 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10251417 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104981849 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136855055 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273200892 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108871591 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127434464 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101923917 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16727716 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091666863 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105607503 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108051891 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.0745358 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136824469 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158712199 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082778614 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16312831 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124076739 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118572119 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121488342 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087657346 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1399967 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08289648 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075051032 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142878809 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112904794 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112836497 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150087555 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118165769 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127068229 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120747267 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134027768 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132777583 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129855314 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10968572 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091489846 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114099788 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130050268 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077668514 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093247612 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084638127 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109127893 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098412283 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086813797 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144064788 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127193499 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115117812 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113939503 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10072965 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145689859 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.0802207 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130235181 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120550871 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098582978 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150525559 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150367792 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133482189 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101124905 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287991139 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07695632 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079453632 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091416975 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125717958 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086752787 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087208545 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117155184 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146440869 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131522137 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137893209 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124577791 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123612357 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153786745 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074690011 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120439953 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14534771 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123531506 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107825309 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094338167 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103375986 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1417018 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108500851 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179999207 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116011613 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126066805 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155171495 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104736546 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083473682 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105567016 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137123161 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105993017 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142591026 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101317346 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091641372 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111747537 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079603087 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102047844 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131109106 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120750726 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136505445 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11621327 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135380403 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081074159 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115669274 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124991139 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122509087 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067552144 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120754625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159099531 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097671012 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11915871 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301329489 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083762831 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139332508 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175978142 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146538528 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088397821 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109988417 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121587433 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128269805 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122204539 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140774763 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108601386 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13621444 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112580851 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088821336 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091061751 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100521589 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107911769 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098087247 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107175882 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11628751 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098228171 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134080743 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106585017 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11185121 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119374614 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102011243 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095952751 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100357418 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173486545 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120576008 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171848174 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102681276 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142676517 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163203458 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079490447 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083353897 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082697709 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14114135 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088465157 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132344089 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.115368592 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119589224 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125531061 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144299766 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098928782 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073061937 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109906795 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134409456 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124538627 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101027566 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104562296 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162095423 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101016781 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081663071 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261907715 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118688414 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106438911 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171228801 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066745847 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108613955 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081194118 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084939911 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127747965 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153499614 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084613195 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10395686 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121680447 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115151582 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128493386 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10184733 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114126475 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126556596 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149358438 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131596953 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093461172 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114316989 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129100005 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156229197 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105110963 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101143703 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171301131 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151055552 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159894936 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089834005 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116703263 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11645333 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113306265 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140594523 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087664332 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162902721 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086668959 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13840644 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106134156 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092678493 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131564959 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115126547 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092207546 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145965911 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119030716 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086924228 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080601909 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118382671 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121345552 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106818059 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078714174 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140274789 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07732903 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284260003 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160667139 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084602971 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107838776 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099605574 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084693872 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107925376 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10605761 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090292227 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103428178 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171982035 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090278784 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149566015 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136877778 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116338213 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136326967 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106029375 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643745782 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082035547 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151482005 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118274307 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172704366 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103752088 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120163132 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111567305 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123229943 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144816326 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106729494 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181101343 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134036872 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118327748 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082922736 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105488305 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106886227 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090604579 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11156516 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114883123 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118006499 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096905111 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118990347 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127088799 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086698036 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099074345 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154102506 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117096316 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145255935 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139229682 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088439305 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118890804 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138300737 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083713681 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.271912233 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154310974 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108753322 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102103222 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084774106 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10285735 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159622971 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077110155 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161701723 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122909997 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111522249 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11628406 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113599497 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135430722 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108612205 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12425271 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094665878 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110157839 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115861704 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085581648 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080403313 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106947129 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113712998 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101288319 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100399261 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102427421 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150547116 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076877218 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101943829 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117676157 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144947602 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173303826 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091444013 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086590677 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122316146 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118002035 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114871386 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124125259 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083072454 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085555811 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084181055 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083736475 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110171805 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116092472 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117297384 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113273029 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163314401 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087007147 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226986583 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098673433 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105516935 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072358962 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081139478 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099102597 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099172497 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106915181 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.263835275 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162198121 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099209986 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094213379 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095320566 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079514376 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08712593 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128158413 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11206532 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120504301 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103326266 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066893114 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109805497 seconds)
  done (took 60.166396489 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107736974 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087039922 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100602083 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147927213 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125437956 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204189617 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159621511 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192681917 seconds)
  done (took 2.761228859 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072406655 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098517274 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106846829 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085775684 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071067195 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073315867 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230760464 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084797114 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071028743 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099463316 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082231258 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073462895 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431361967 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071031971 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071465005 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065456178 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072176533 seconds)
  done (took 3.486722055 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.393683144 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.617648181 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347754293 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080770044 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.946114828 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097419368 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.141214152 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142233592 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082529819 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.528672492 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.413259676 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137825673 seconds)
  done (took 18.561820837 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085045753 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079404754 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094217453 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093906516 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082059587 seconds)
  done (took 2.067533118 seconds)
done (took 109.418825792 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086725081 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.611298034 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058472512 seconds)
  done (took 2.330340514 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090963595 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.09031041 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090354801 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087399579 seconds)
  done (took 1.997627108 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07851332 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080865455 seconds)
  done (took 1.79171487 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236565872 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174335138 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09981858 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086749076 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083084503 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083183427 seconds)
  done (took 1.891871812 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076571065 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079512997 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076818051 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080473918 seconds)
  done (took 1.947608901 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080645402 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056772249 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059436733 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062540534 seconds)
  done (took 1.893866219 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090211027 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085715254 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082451523 seconds)
  done (took 1.893892647 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106042097 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090678119 seconds)
  done (took 1.833028246 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085792681 seconds)
  done (took 1.722842984 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098078792 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103953518 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135755487 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114177266 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141724881 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112095768 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088947161 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089878466 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080747258 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090416938 seconds)
  done (took 2.691616315 seconds)
done (took 22.225944587 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082380949 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375242589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364388529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094001783 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674217941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360833725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.97456225 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096702186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120041645 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071908784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089440966 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652812928 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.963506734 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333440623 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95133757 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333871709 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653601151 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073003918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07243954 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072018101 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.959754232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072491376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072787199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073419233 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652598914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376070554 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073374389 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334349018 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072769785 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074704613 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359855101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073366834 seconds)
  done (took 16.227446083 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075443612 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13957754 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077551924 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088630076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074553592 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073781608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074997791 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073531987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124401258 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072095715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089358516 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072606116 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076078 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073081306 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091989329 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07268893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073302634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073705397 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073123258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072982146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091281486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072757092 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072782763 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073481332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07278169 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08444029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073635167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073278707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0731545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075395956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075499358 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074018996 seconds)
  done (took 4.206296462 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120088321 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129037808 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078004816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108113905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115769029 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074709931 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146841116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097868351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131733959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073439928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089615918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073062434 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105769617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073557496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092842731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072867916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073593025 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073540325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073088612 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073157016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091894926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072619472 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072876363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073418329 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073219369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086005715 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073121119 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072889995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072752091 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074992313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075762977 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073495997 seconds)
  done (took 4.441429339 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.0769596 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07990985 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087693131 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088382755 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073903941 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076280418 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078249431 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073877315 seconds)
  done (took 2.288907994 seconds)
done (took 28.808027605 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082966052 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073101796 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076471527 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.092126298 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077858369 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08282956 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071556093 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079644818 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077332736 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077063059 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078759679 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071463597 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07631836 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071442799 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079220084 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073185009 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083666363 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07643789 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083791234 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084284208 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07471493 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077823639 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079714212 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083815928 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084514152 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08415694 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081561691 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077450628 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073686227 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075272793 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082562776 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088393382 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073066067 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084307384 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072239524 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073112101 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075835246 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072206856 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083651572 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081229324 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07449719 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081310248 seconds)
  done (took 4.937359118 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091473064 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095505243 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089801498 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06543365 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069646272 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068821005 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093316709 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063757617 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064190644 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092592298 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060375382 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063244692 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066642965 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05898894 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064130419 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061635316 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065955958 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060321713 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064104929 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063707542 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.09308958 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058639464 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081461425 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066840582 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060526455 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06645226 seconds)
  done (took 3.516672652 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07863414 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087069954 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094614805 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14675547 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11508743 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082101062 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083236849 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097254461 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098121147 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071856954 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075832747 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097039072 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091745713 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079120781 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07220077 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088266797 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089247853 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073681748 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077907738 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095474066 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089672011 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089573177 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09522579 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.0854095 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071582243 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074362111 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07573949 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085732427 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075358096 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081916376 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074805577 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075642209 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074435823 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083614958 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075605209 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074124182 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09786745 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084490203 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08264549 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072761191 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08002338 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073980656 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096345635 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127646754 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071714174 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078370502 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075773033 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082206516 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071665956 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097892279 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084119484 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071804911 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075987179 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071723353 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072387911 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075756844 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073823635 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.086446783 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081194585 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077404747 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095477523 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07653701 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088368809 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071586911 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079747271 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.07135969 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073211273 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071163173 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098113733 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0737364 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112596479 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072786336 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073099641 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081070987 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079926647 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079247049 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072321499 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088374387 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084200525 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075867535 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08029357 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075958652 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074995644 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100034738 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074872296 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073356103 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072931786 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077615912 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074255361 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073324556 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08527586 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072167543 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074742039 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088828392 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072424603 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073209251 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078026023 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076562881 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072417064 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083748478 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075475945 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072754932 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081080459 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071978232 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073894229 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082826159 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078124131 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070883613 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075485374 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077325924 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073446536 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072982447 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073987046 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073131402 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080136569 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07847165 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07648394 seconds)
  done (took 11.17217639 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167830815 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15859748 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075864054 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150490546 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082660375 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.085142113 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152240952 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100290483 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073046554 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074639522 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074809867 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11552419 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110859166 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121360783 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084133452 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073249855 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095341585 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120192526 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154533126 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148448754 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.096514534 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082379229 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076339593 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075161168 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076588267 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083907735 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091263629 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082777035 seconds)
  done (took 4.670947237 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085080893 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106777346 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078957416 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095417791 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094990623 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07334944 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075286806 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075637429 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089385496 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083816625 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073194741 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078687558 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080065435 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076858538 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073726743 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079737229 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080485374 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074534246 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07674499 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0786478 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083836448 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097076059 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076666778 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072132862 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077927195 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073263747 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068769658 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089009779 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073998232 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097922978 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070761485 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078292226 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087201675 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073965403 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073041238 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07373481 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07355215 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073152187 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075069222 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.074354862 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071925314 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062827307 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.07185433 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084402234 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086530713 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062262219 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077972157 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078364183 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078265864 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.07096151 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075869228 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076316566 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075714673 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080244376 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076821834 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078380302 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074726283 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079176405 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081272418 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073023563 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070564023 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071923413 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077361747 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070541693 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087720272 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077514552 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071968641 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072785645 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075461529 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086303724 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072692468 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077753862 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070861695 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075197733 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077689106 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075031375 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074476364 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071948847 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072982194 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074301601 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06059312 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072972804 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05890384 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076091435 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071178525 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07133061 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073179904 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077551124 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084602058 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074269939 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07877675 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074166722 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072008066 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075801631 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065211658 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075055551 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083709011 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087273124 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073196478 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.07073324 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085758622 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078022526 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072037534 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061721775 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077332224 seconds)
  done (took 9.761018622 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095055172 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076042096 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087198885 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094294144 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091795597 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079440694 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082270493 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074596757 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087966175 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079225444 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081710061 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073351907 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083623999 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082244739 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075346601 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08233847 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077201099 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08771974 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087326181 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073146461 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081026445 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085549842 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094689193 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085669748 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084359587 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085892332 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095413687 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082511081 seconds)
  done (took 4.060020598 seconds)
done (took 39.768720413 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.771024509 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.920045235 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.74305496 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.093154558 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.820744506 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.945311278 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.826476548 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.735917389 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.052237632 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.772421028 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.031850988 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.801783551 seconds)
done (took 65.320390733 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.784080554 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.878734307 seconds)
    (2/2) benchmarking "String"...
    done (took 1.977858351 seconds)
  done (took 5.52629197 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.028031498 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.314919093 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.980846344 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.736712835 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.744000241 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.052918563 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.551549886 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.249910174 seconds)
  done (took 30.302530713 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.899937293 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.959654783 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.431052917 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.462548886 seconds)
  done (took 15.476778987 seconds)
done (took 62.881289094 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.775194499 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.765851861 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.77047373 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.722568814 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.799546099 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.749814282 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.859990797 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.976827333 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.73623242 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.728100133 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.740013342 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.167071242 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.746484378 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.906802266 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.742690336 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.747686225 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.802716312 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.180834212 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.896881888 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.74929724 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.753480821 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.767830756 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.742074069 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.878100814 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.745705729 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.741742311 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.151293834 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.747424012 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.368995599 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.740708368 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.770016288 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.085523072 seconds)
  done (took 203.73008456 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.738506653 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.68137337 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.755331305 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.757465363 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.05823828 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.923266696 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.851537142 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.245401227 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.745353812 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.756134063 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.879031 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.739637997 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.925785379 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.726170267 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.7689745 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.817327805 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.881307117 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.935790847 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.773620705 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.909503677 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.756824805 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.764818727 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.722245248 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.868370225 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.781740577 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.763927801 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.766186255 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.772646361 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.931718326 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.833658556 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.74490929 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.77358998 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.94898674 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.613739041 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.744403928 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.754578264 seconds)
  done (took 168.088132016 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.932495363 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.741464275 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.739924974 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.742313569 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.745502461 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.740597331 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.866622242 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868332046 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.350290323 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.14338109 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794032894 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539302683 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.741711058 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.807378645 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.754952578 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.742775664 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.756556271 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.768452512 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744875803 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.741196866 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869290094 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.756719828 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.930493024 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.74774793 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.74149394 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746621631 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.112434261 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.743308813 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746666642 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.982537645 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.743132528 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741162502 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.597021598 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.273621755 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.823672207 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.74125705 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.743854522 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747417314 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.742429476 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.95819973 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742846017 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.742516341 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.745587058 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.880975888 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.74201729 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.86588111 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.745512131 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.218624477 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.742747054 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742971538 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.606223989 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.317994764 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.742890467 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.742474368 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.745156966 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.743083496 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.742111324 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.748735805 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.676140086 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.821967603 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.744843637 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.747011888 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748883771 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.74371099 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.913218386 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743664531 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.786995817 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.802546474 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.869841567 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.865562735 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.746037909 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.743247702 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810456364 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834461164 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.74184845 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.741112222 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.742002943 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.740331543 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.740770469 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.822264245 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.741280379 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.868803423 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748938092 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.74250286 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.792470274 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.810416896 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.741377575 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586257839 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.744393338 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.741613881 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.007892135 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808653834 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.741649493 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.741673905 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741756869 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.869694614 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.865257188 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.459603733 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.746204197 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.632342347 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.916414326 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.940413207 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.742815736 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743259441 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.950591087 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.742744619 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834447043 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.748185497 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.744579123 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.742718253 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.776886578 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.742460692 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.801413018 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.742282587 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.116316027 seconds)
  done (took 399.616880218 seconds)
done (took 775.095005499 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.409946886 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.380481482 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.484061359 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.396001433 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.374998906 seconds)
  done (took 13.722832855 seconds)
done (took 15.400520988 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.836853383 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.840175168 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.768681455 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.836493768 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765343966 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.836366145 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.81984042 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.769541126 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.803909564 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.770097289 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.806233293 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771080167 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757148737 seconds)
  done (took 25.060771908 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987549539 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.984450051 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.816258941 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.982967851 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791277112 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.996576015 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.916168881 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.905435784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.897824403 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.761593629 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757583434 seconds)
  done (took 22.480434923 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.991133255 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.989241089 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.823191893 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.988541828 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.795100678 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.987709585 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.91140049 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.902153238 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898564247 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.762506739 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.758110635 seconds)
  done (took 22.487536776 seconds)
done (took 71.708309077 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.754833896 seconds)
  done (took 3.434013432 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.783571789 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.951345498 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.76129009 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.757722577 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.754160861 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.755456757 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.759563837 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.754061887 seconds)
  done (took 15.958464617 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.750715961 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.752745066 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.754048785 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.752691597 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.751499642 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.753421451 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.751057535 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.75379205 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.753333477 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.754201602 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.750822718 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.753995592 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.751517251 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.751870318 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.751759918 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.75145551 seconds)
  done (took 29.719495237 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.754436443 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.75262077 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.752289937 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.752913345 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.752199632 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.753159245 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.753593074 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.751668718 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.752719769 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.752778577 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.752604572 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.7527368 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.752478961 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.751654212 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.752766536 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.752486829 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.752400464 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.752618369 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.756598434 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.751963049 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.753591159 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.752183617 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.752352245 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.754084544 seconds)
  done (took 43.756560846 seconds)
done (took 94.549476553 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.505680858 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.3873367 seconds)
  done (took 9.576913278 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.758714917 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.756168173 seconds)
  done (took 5.262290374 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.755615551 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.755886828 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.755447188 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.755157378 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.756036452 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.756301191 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.756112733 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.756790129 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.755807787 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.75605776 seconds)
  done (took 19.242119571 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.756531917 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.756389465 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.754497229 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.756657123 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.756787359 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.753681546 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.757097498 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.75703278 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.757314587 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.753557919 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.756436299 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.754987153 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.756759889 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.754411583 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.757824234 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.756128163 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.755484281 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.754970565 seconds)
  done (took 33.28988846 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.757503054 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.757704365 seconds)
  done (took 5.19935448 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.755180275 seconds)
    (2/7) benchmarking "second"...
    done (took 1.755017911 seconds)
    (3/7) benchmarking "month"...
    done (took 1.754840262 seconds)
    (4/7) benchmarking "year"...
    done (took 1.755461848 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.755895101 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.755323431 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.754389012 seconds)
  done (took 13.970435275 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.758895821 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.912519766 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.983942813 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.395746871 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.757794947 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.761585094 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.713193731 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.761339191 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.761834489 seconds)
  done (took 19.491538482 seconds)
done (took 107.715927907 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.627185836 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.753680944 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.012171649 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.806195735 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.804939541 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.094663614 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.758319905 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.061949179 seconds)
done (took 42.60482438 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.821955814 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.50558164 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.578065195 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.777902252 seconds)
  done (took 15.546715709 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.741358022 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.272418996 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.793637586 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.347589295 seconds)
  done (took 19.892968385 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.1225204 seconds)
    (2/2) benchmarking "read"...
    done (took 2.101401279 seconds)
  done (took 5.913823928 seconds)
done (took 49.863678305 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760129591 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.759390766 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.757135688 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.760795869 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.756929594 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.757548743 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.760826079 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.759248898 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.760484685 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.76015646 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759766864 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758504725 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757757272 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760099898 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.757384619 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.757144113 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757116799 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.762016436 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757509437 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.758369526 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.76063743 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76071243 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.757425272 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.758594111 seconds)
  done (took 43.90247138 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.760526668 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.758003478 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.761401674 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.761343057 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.757570526 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.760903392 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.760672819 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.759224457 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.760926819 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.763266985 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760234108 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.759238294 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.761268783 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.758968595 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761585008 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.759784476 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.762396015 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760028122 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761450673 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.760660629 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.762331009 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75933742 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.759402006 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761894605 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.759733294 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758662798 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.762280384 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.759563626 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.761892602 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.759365482 seconds)
  done (took 54.501483916 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.767656813 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.769515289 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.763254277 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.762630083 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.762585225 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.762697398 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.763478746 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.763767153 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.762982376 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.762667681 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.762494988 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.763042671 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.763078993 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.763582413 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.763822524 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.763957999 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.763683071 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.762988903 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.76367512 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.764563386 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.7635863 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.763514548 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.765196772 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.763704252 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.764090083 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.763384308 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.763889444 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.764165824 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.764415572 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.764916621 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.764412761 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.763509965 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.764590736 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.763900038 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.763084588 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.763993827 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.768706052 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.771739389 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.764965998 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.764741959 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.765029183 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.765190332 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.764349237 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.764362179 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.765086622 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.765111152 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.765299824 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.76504003 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.767797193 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.765639244 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.765470235 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.764486395 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.764703445 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.76458244 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.76505476 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.765526441 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.764850944 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.766049171 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.764724679 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.765898399 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.764501198 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.766190896 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.765629589 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.766141602 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.765992417 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.765087296 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.765789644 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.765739843 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.765728025 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.766859736 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.765853404 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.766138306 seconds)
  done (took 128.755780361 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.765475753 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.76443281 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.762813689 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.763123557 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763016533 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.766196652 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.763936445 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765567162 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763081881 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.765644766 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765356593 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.76478027 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763857028 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767427791 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766359589 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.763453647 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.766755838 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76471075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.76718662 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.767797279 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767405982 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.765029022 seconds)
  done (took 40.526500306 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767984099 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.767721982 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.765346137 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.767607525 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.764140083 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.767851774 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.768411791 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.7676434 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76745255 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765749819 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765297787 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768685655 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.76437746 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764346217 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765930193 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.765014612 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76797062 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.765207772 seconds)
  done (took 33.491377514 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.765151562 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.766244592 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.767705378 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.765656024 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.765138663 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.768408961 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765628472 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.768626928 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.768644158 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.766090582 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.768277917 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768531774 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.769217773 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765882658 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768643409 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.767521599 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.768027721 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766771714 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768773321 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767409329 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.76743325 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769017528 seconds)
  done (took 40.577413546 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769033773 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.77004669 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766914349 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.76689767 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.767620899 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.769243662 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.769898234 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.767178611 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.769697592 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.769780184 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767363128 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.770465822 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.767583329 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768490118 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.767648042 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767520291 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.769047715 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.767089131 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770493194 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.767218252 seconds)
  done (took 37.065523347 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771712262 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772201425 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.772206797 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771770482 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772095986 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.772671947 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771991442 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.771663542 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.77208497 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772507982 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771102618 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773337899 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772875088 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772650161 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771719285 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773872918 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772570001 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77272712 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.772684404 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.773341066 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772799833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772717899 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.77222516 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772919753 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772641077 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.773322762 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772710752 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.77256706 seconds)
  done (took 51.326876935 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772019379 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.771341529 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.769509687 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.768500964 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.769130065 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.769841848 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.769642711 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.768687954 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.771742843 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.76968436 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.772287708 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.772835507 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.771576885 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.773093261 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773160343 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.772093311 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771982114 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.770317459 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771402455 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770770798 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.773972738 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773578268 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.773789843 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769727423 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769905598 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.77295923 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770965777 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.770936994 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773172245 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.770537607 seconds)
  done (took 54.838000878 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.793086701 seconds)
    (2/2) benchmarking "in"...
    done (took 1.791223818 seconds)
  done (took 5.283840702 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.771627564 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774259947 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.77338126 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.769861765 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.771223296 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774333125 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.773104233 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771535937 seconds)
  done (took 15.878430718 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.773041952 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.773833234 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.773645031 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.773418662 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.775227969 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.774889992 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779908263 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.774718387 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.776273048 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.7763972 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.780534422 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.783363554 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.777230549 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77501845 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.773799122 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.776073251 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.774482216 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.775775739 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.775666266 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.774564434 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.777186258 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776590499 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.776342953 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.772510878 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.775277012 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.785954491 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.778819905 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.774563959 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774614625 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.778473673 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.776136079 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.773608246 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.777566301 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.777056464 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.776472326 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.777961774 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.784027811 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776808648 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.782459343 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.777758153 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.776015802 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.774181047 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.776686264 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.777326224 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777490203 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.776474385 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.775461469 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.773447784 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.775415806 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.779552942 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.782583145 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.775510489 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.773864399 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780718097 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.779331557 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782857236 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.778546901 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.78046666 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.786267313 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.78675543 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.790731939 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.784129741 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778917008 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.778943269 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787273003 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.802046338 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783364067 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.774291545 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.774480284 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.777344106 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.784489826 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790251716 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.786503768 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.778951217 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779571144 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.77810476 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778474431 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778394584 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78551338 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.780277219 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.779478399 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779821349 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.788569492 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.801573631 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.777467881 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.779542198 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.779387493 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.779404609 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.779124272 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.788337561 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.780763672 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.778943098 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.778141613 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.778448876 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.780400034 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.78079523 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.777747118 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.77972538 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.776832572 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.77868768 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780433409 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783632524 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.788444343 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.780949278 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.781493616 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.784807989 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.77941688 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779381329 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.786107867 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.780314853 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782097064 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.781214491 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.78663813 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.777911139 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784193166 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.78838382 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.781471257 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.781552852 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.781272143 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.781239287 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790571167 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.80656558 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.781422113 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.781275358 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.784341272 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.792771539 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781821453 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.783174618 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.781175609 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.778231858 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.778294088 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.781574046 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.78166165 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.780526169 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781916284 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78283272 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.778400272 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.781999447 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.782195461 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.782274798 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.782928841 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.78176009 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.782948105 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.784357948 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.783840374 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.783795749 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.787786205 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.782527817 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.783062159 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.78344486 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.778907841 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781870095 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.783959775 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.784318874 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.78199269 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.783608769 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.781587999 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.783618355 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782703891 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.782816016 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782109136 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.783098123 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787186571 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.784406527 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.786550004 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.782511476 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.77960604 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783003737 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.782622356 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.78287226 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.782998672 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.781948264 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.78626828 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.792331902 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.78289544 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.784395337 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.786574484 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784337943 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.784448817 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787681395 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.78633045 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.791907389 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.784507095 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.790322847 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.784749537 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.784521937 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.783955158 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.783931203 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.784091257 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784553991 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.787595658 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.791860829 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.796239703 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793048209 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.785862792 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.787992697 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.78554275 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.790002033 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.788906877 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.786034859 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.784274598 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78635499 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784415245 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787214985 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.786115663 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.785040808 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.783759093 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.784293554 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.783518767 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.786366299 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785650463 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.78648229 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.787445631 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.781714465 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.785439736 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.7867064 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.78484639 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.782426288 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.78437434 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.785205728 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.786247135 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.787561179 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.791641371 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.78249551 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786655883 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.785783196 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.786141391 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.785144449 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.785335362 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788084336 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.785920918 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792246799 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.787002533 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.786738116 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79309131 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.786472868 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.785548483 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.78813437 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.786983128 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.783750252 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.789279862 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.795076869 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.78588979 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.788106349 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.789326516 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786937687 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787002237 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.793235226 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.783756889 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.787172327 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.787694169 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.7887714 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.785472595 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.789262878 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.788880708 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.789410871 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789940991 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787574805 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.788490467 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790769289 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.789043295 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.788544785 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.789343567 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791420949 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.79746197 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.793761587 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.789276651 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.790343548 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.790382245 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.79317891 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.787739481 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.789146747 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.788185213 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801372709 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.79799452 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794877768 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.790912804 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.788931555 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794647502 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.79028685 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.793726212 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789683915 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790327197 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.788842377 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.788498794 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.785431225 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.790150313 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.789949652 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.789806767 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.790020166 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.793563388 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.789580352 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.788871767 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.79102009 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.790928754 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.78948335 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.789322493 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.789415507 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.791258168 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792067273 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.788591772 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.790567944 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795999691 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790882532 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.79194904 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.790017082 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.790538872 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.789607692 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.791545818 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.791670166 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.79425343 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.799920022 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.794463095 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.798951891 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.792466905 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799808218 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.791702337 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.794033768 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.800918121 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.789114454 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.791017417 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.790814202 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.791705487 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797008314 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.792221044 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.79193662 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.796116013 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792078059 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.791776692 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.79157318 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.79223108 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.791778769 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.792790667 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799186822 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.792690189 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.795841687 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792523688 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.788348137 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.792532484 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.790873515 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.791325306 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795893853 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.792643672 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.793562172 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.791618476 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.793108724 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.791658707 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.79331844 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.792129995 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.790038994 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.791834196 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799247937 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.793098648 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797837851 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.793264554 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.800099382 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793540628 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799416613 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.794272996 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.793923925 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.794430395 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.792756965 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.793954929 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.792374626 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.794373445 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.79496521 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.795245703 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.797215835 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.795535397 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.796583058 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.794358358 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.796159378 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.794510259 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805107606 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819231807 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.795908175 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797755988 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.790090709 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.795287298 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.79991421 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.795577003 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.792968717 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.797834607 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805990987 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802587426 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.794228659 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.7954763 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794383263 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796204527 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.794285997 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.794050155 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.795605557 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.794969343 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.795157809 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.796613206 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79784573 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.795225256 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.795137691 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795328335 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.796464757 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.804718002 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.796234586 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.796255941 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795941009 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.794376276 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.795847134 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.795263847 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.796429782 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796234341 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794329082 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.796783572 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.8027869 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.802613257 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.798383552 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.796445611 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.797890051 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.797086631 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.796385538 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797371769 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.797306702 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797589147 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.798189715 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.797865552 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.797923918 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.795962943 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.79722183 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.796916574 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796818287 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799513892 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.804981852 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797495739 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.794014354 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.796766846 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797439594 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.795681944 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.79773469 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.804943991 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800989194 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.807687028 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.805845511 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.802241502 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.797316945 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800452169 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.805730974 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.796251578 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.797970103 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.797875292 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.799122319 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.798507063 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.801926608 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798847318 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.804450349 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.798060954 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.798023296 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.806253501 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.79971296 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798884573 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.799645655 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.803003728 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.799227578 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.796106334 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.798237074 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.798341288 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805183236 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.799753404 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799891624 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800518661 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.797607502 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.800775931 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803878063 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799511814 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.800664932 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.796994015 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.799328115 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.801010999 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79924723 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.796432016 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.800117225 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.800084594 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.802319523 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.807308297 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.796659196 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.801324912 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.79994967 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.800487234 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800904431 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799306679 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.797176569 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.798252158 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.800255043 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800798684 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.799509042 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.802290341 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.800487172 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.801539001 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.801772271 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.802594276 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802944114 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.810774799 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.808827215 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.797706832 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.800545398 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.80134498 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.803820508 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.802031029 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.80141507 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801199115 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.801773065 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.801423404 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801997648 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.800979783 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.804150894 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816510638 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.801239856 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801447495 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.802422586 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804501783 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.801661748 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.798905568 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.801798965 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.806322901 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.804421857 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.809909211 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.803196695 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.807989574 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.801585482 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.803498244 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.80687633 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.805451184 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.811899002 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.805183878 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.803410303 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.806818614 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.808392546 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.819662138 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802488576 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813114191 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832863171 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.804391328 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.803964841 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.805244494 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802295858 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.803631773 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.805770348 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.804493308 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.803419283 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80313943 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.804910091 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.804766927 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808724954 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.804286072 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.802847017 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.803360968 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.803779619 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.804508198 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.80093683 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.804580465 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.803608317 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.803957717 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.803891326 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.805372697 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.804581454 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816784685 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.813612666 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.804736947 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.805934453 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.801193232 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.808494491 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.805555302 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815565271 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.811778365 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.805640096 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.805760376 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.804921153 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805283851 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.801247461 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.805627004 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.804396095 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80384336 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.801539602 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.81850174 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815032474 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.810133589 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.804312143 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806762107 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.80639902 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806278792 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.806552324 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.806412714 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.805727353 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.806918951 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810879431 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.804920994 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.805974524 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.809042897 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.814069553 seconds)
  done (took 1069.702161501 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803398063 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80275198 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8032097 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.803375176 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802422093 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804007143 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803405925 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.803206947 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.803847651 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.803432486 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.803220458 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80268844 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.803616348 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.804223487 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803248512 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.804424086 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804294167 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.803727066 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.80423507 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804748908 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.803782445 seconds)
  done (took 39.6059847 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.80613823 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.803953758 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.804891266 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.80694177 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804731924 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806857942 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.805534023 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807396533 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.808017245 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805405464 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.807479244 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807330423 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.804883269 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.804562397 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804577657 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80671767 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808222515 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804486889 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.807097169 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.8054485 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807225631 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.804945532 seconds)
  done (took 41.464832798 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.80992336 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.809046868 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.808387065 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.806672988 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.80915942 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.806191785 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.808413845 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.807637125 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.80762479 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.808886359 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.809656623 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.809281051 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.814165245 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.811958563 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.809415268 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.80769559 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.950414366 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.808659984 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.809633048 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.808475108 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.804404604 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.813517118 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.804778072 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.80452369 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.806511724 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.809326084 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.808543468 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.808824928 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.807854908 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.807062774 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.811601107 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.806051833 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.80797769 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.807653773 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.805492863 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.807769772 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.811417348 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.807712742 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.804466135 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.806782574 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.81754951 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.828333729 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.80913796 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.814243199 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.804538443 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.804631279 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.807003794 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.81351051 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.80241435 seconds)
  done (took 90.509438432 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.80392899 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.805896777 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.801461275 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.804859938 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.805058487 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.80028646 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.7995035 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.799089101 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.796240102 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.795477961 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.800275548 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.792103687 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791901354 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.79500967 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.794942751 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.792406419 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.793671056 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.790711828 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.789772263 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.790202299 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.791110462 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.79527073 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.794128006 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.791401367 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.794007243 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.790452063 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791300486 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.794272001 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.791036267 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.79133222 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.793111878 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.79328706 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.795235831 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.791809605 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.791288944 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.793958508 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.793562558 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.790976069 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.794693408 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.791941245 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.792951797 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.793668918 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.794309592 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.794270733 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.791844772 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.792603726 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.792819389 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.792786522 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.791611443 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.795358963 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.795197401 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.792586106 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.794980207 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.793226103 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.795424416 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.796063912 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.791506607 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.79238257 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.795357833 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.792122563 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.793650468 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795029822 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.792394292 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.794859422 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.794553848 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.791829495 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.793593297 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.796164236 seconds)
  done (took 123.752702283 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.796565995 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.796977854 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797263259 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795978784 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796033103 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.796572738 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.796059369 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.797474891 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.79857375 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.797463778 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797171162 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.796784769 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.796970165 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.795891665 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.798307295 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.797282811 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.796721368 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79656158 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.796325975 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797446458 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.797858232 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.796494638 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.796463296 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.797542573 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796569793 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.797298634 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796709924 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.79671521 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796979666 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.797151868 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79724966 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.797409553 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.797394549 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.798418313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.797389018 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.797850394 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.797452046 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79569523 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.796923194 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.796672647 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.796150759 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797569602 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.795706699 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.795083865 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.795291696 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795896096 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.796481968 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.797370585 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.794605676 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.794656782 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.796220744 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796163691 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795765927 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79729615 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.796076159 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.794416917 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794710839 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795760262 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796540478 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.795316066 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.795141879 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.794181407 seconds)
  done (took 113.109243052 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794485094 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795441116 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.792089287 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.791265031 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.793411768 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.791367283 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795792247 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.794913439 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794282638 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.794405566 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793896358 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792621355 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794280511 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793328064 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.7916539 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791852258 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791230208 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.791845457 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794260426 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.790326602 seconds)
  done (took 37.58224457 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.792230887 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.793749777 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.791780565 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.791595123 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.794019535 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.791656658 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.794479434 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794482411 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793402112 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795230584 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.794898015 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.795959771 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791634553 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.792928625 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.795302002 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.792573732 seconds)
  done (took 30.414653104 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.792921581 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.796275669 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.796680177 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.796137714 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.792763306 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.793248788 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.79547609 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.795233611 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.791850783 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.795095358 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.795804835 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.795423176 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.795933998 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.796738609 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.790198435 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.794140573 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.791348848 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.791557409 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.793251713 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.795785745 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.790829218 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.790929651 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.7941926 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.793696228 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.792942533 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.790099189 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.788651799 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.789147386 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.789435424 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.792283692 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.790022494 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.791308188 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.78934808 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.789573783 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.794387184 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.789969776 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.791057804 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.790678184 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.790867865 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.791655881 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.790527049 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.789420396 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.790173213 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.789955381 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.786873593 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.789174654 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.787693526 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.787502362 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.785213449 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.785963226 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.788185407 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.790594159 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.78836173 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.78775445 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.787136954 seconds)
  done (took 100.253097528 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788408404 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.788078059 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.786375837 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.787882084 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.788259002 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.785986199 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.788779145 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.785730711 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785936732 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.787823748 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.788019297 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.789923155 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785911481 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.789053674 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.78584552 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788671476 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.784976745 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.786461175 seconds)
  done (took 33.885323174 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.786680254 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.785354088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.788371991 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.785481091 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.784408648 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.789626461 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784965699 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.787969988 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788155734 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.785270881 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78513585 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.790024221 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789000198 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.788172699 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.784735325 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785278825 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.790117211 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787035147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.785078126 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785528891 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.788406433 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786461501 seconds)
  done (took 41.024650326 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.786823783 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.786858949 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.80249501 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.807719315 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.809643355 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.822613517 seconds)
  done (took 12.529094688 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785080907 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787250193 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.784807356 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788465849 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786877633 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784840025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783638542 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785008612 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787536754 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786861764 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784263904 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787601855 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788258466 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785200777 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788798055 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787420604 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785677551 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785772348 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784289119 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788352881 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786260045 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788035715 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786067203 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785492869 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785256235 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785632859 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787527861 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785819866 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784923772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788189545 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78711408 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7858406 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78706767 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783817234 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786629231 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785948635 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784854743 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787840788 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787033229 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784259134 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.786502356 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786438265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787976442 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784341993 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786510089 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784358105 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784036439 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784658563 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784529329 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787026957 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788267439 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784578567 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788161019 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787358059 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788423525 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786161202 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784087082 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784461942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786176674 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785284184 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784244944 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787710161 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786193653 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784565943 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788060063 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78634339 seconds)
  done (took 119.600782436 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784799076 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.784075077 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785048751 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786332578 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783807188 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784378798 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786037625 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784567436 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784515013 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784648627 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787581455 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784614075 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785340778 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784653722 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784978998 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785432341 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785613639 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785168743 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786500814 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788141202 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78599117 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785630949 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783938004 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78504784 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784800246 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786866812 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78654321 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784121031 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784452989 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784778116 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784865478 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785714788 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785192938 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.784490453 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78391978 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784952971 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785095455 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785675874 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784860607 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787351279 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78535527 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788238241 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785613522 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786802199 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785338567 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784595574 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78535647 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785309481 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786765382 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784436151 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784986761 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785682422 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784668766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785880039 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786167038 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785063804 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784139713 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785263456 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784863175 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78880884 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785511352 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785178555 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788319913 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785800491 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786051863 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787108168 seconds)
  done (took 119.556774105 seconds)
done (took 2480.829809457 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.770983813 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.882678304 seconds)
  done (took 15.366788797 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.95227816 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.901821356 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.786142616 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.822053557 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.787406715 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.803083646 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.804672894 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.787031421 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.787664582 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.787351102 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.78658113 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.974137836 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.797845181 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.787132786 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.787476199 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.880000686 seconds)
  done (took 50.953118522 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.790125088 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.792111004 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.801152964 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.793416476 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.789630791 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.803150181 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.82385196 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.793656257 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.823511715 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.802927785 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.859548567 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.800937845 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.788750225 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.839679595 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.803649431 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.804794124 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.885954031 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.867843198 seconds)
  done (took 34.380611545 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.868522164 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.793211397 seconds)
  done (took 10.382846477 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.798213609 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.790352559 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.821377213 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.797054223 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.79029958 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.808913595 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.803847704 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.800100259 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.821338404 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.793810967 seconds)
  done (took 69.746462035 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.796637472 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.791932009 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.792601893 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.790295208 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.783934192 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.786634561 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.790413084 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.786954725 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.451499727 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.826747295 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.799139195 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.79695851 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.790632622 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.793920127 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.789335379 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.814247446 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.886465811 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.789588853 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.788710036 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.796526944 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.791126616 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.843946475 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.804915013 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.792802651 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.822018394 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.452556748 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.801212282 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.798531066 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.880309039 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.789968884 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.791938602 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.791941463 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.793885872 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.150673718 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.068160985 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.790972437 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.805726164 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.800197744 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.789788273 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.891294787 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.793651539 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.797474571 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.438274674 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.050304836 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.90404574 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.834777505 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.099024287 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.809888586 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.798070311 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.821278298 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.795239195 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.793656158 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.805820956 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.278739973 seconds)
  done (took 127.837969354 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.788748037 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.14108908 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957167068 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.789067325 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078101851 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998120469 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.788734628 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.837731596 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.788467428 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.024335829 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.048546409 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.897139189 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.789057811 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.786869779 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.787244334 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.787759783 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.947240422 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.862419341 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.789469793 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.786723396 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821804476 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03503313 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.912820772 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.790285775 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.818954123 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.003606513 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.913922715 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.895481664 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.585407962 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.7880236 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.855055734 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.789591262 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.789329635 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.789565319 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.948025985 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.885778873 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877049748 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.790752618 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.786501256 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.788916131 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.464072575 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.995547258 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.887608346 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.932691073 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.990429621 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.99784009 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.574826392 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.788900007 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.533196977 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.957889868 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021907134 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.027772499 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.914825135 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.792595406 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.324639206 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.789788943 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.788462641 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.04257057 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.935315095 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.89061606 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.792910209 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.789484623 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.789155284 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038598531 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.794843625 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.890240805 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.791794159 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.790261577 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.890437199 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.89308022 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.930308858 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0046653 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.82464462 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.678313565 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.332514197 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041803576 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.859451679 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043833159 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.793347738 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.789909544 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.871185731 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.636838572 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.047163378 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.042547142 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045566168 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830700804 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.518534894 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.788722563 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.021530797 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.014694019 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.05385394 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000212675 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.034361698 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.120098446 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.790859575 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.790751724 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.004425631 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.929286802 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.793592922 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.13782434 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.026204855 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.340289104 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.813440785 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100447495 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.925551499 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.794069206 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.436599673 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.790742981 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.028885599 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.836089912 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.793649535 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792538968 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.014537142 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.786865965 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.791964815 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.435456839 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.856447743 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.794112953 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028082922 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.794095 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067117317 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.794923347 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032008367 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.864722337 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828541366 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.024489894 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.000285137 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.795441351 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.041010293 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.043139221 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.911403666 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.017524817 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.489930572 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.797015802 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084351893 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.79553052 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.791476755 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.966279411 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.793500505 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.942740578 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.795289551 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09066958 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819264147 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03006113 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.79636471 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.055518603 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.829986841 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846001436 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.795415746 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.927880644 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79484876 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.627922993 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.956449111 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.796732904 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.79505266 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.725099568 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.795403127 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.946834634 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.02897919 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819463264 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871051827 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.469497027 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.793900467 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877114296 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.821957964 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.186289855 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.7925129 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.050085672 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.797027217 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.79357123 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.795266392 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.038302735 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.982276902 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.797464328 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.794462784 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.70636655 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.794395543 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794178395 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.979450679 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.16316213 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.795808233 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000654634 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797210087 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.925999564 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.796275009 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.87923699 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.137838206 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.79625493 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.79486273 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.796103119 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.79660439 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.794654366 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.064444599 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.825926782 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.329856464 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.939166917 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073285565 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.111747708 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.047267256 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.842295268 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.79961392 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.055225929 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.800345762 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.862472032 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.798211244 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.820052206 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030143633 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798381963 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.009209978 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.078817643 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.653080367 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846912998 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.799036688 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795105912 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.796919019 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.945009903 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886694428 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.798369553 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.796221408 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.914697491 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.920577461 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.009611975 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.798540104 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.948773542 seconds)
  done (took 886.495177145 seconds)
done (took 1196.8791105 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.797798874 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.797806681 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.788005393 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.802975331 seconds)
  done (took 28.916752231 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.807866651 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.804367483 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.80705674 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.804990079 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.807633256 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.805173196 seconds)
  done (took 12.567150851 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.870051543 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.803384017 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.212817456 seconds)
  done (took 21.616757817 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.872671819 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.188303017 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.913403364 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.224440186 seconds)
  done (took 9.928477802 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.808067927 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.807256744 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.807135452 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.809941953 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.81084156 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.811077874 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.808606297 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.80842669 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.812658234 seconds)
  done (took 18.016065962 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.794821598 seconds)
done (took 96.570184907 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.959981421 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.877579683 seconds)
    (3/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.151824887 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.871535242 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.464353006 seconds)
    (6/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.848405503 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.047072281 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.09372441 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.09279425 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.899870527 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.933384017 seconds)
    (12/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.246887352 seconds)
    (13/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.803204844 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 3.461624772 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.84525972 seconds)
    (16/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.006323765 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.845506991 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.983677027 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.848079033 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.655204401 seconds)
    (21/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.111366835 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.106639019 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.356916294 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.249144931 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.005819906 seconds)
    (26/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.816486257 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.797832943 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.190730075 seconds)
    (29/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.956849765 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.918902853 seconds)
    (31/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.951156529 seconds)
    (32/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.130050339 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.67973456 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.800227403 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.012372551 seconds)
    (36/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.787635085 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.931942503 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.81017845 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.607575255 seconds)
    (40/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.063965308 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.188126391 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.896294952 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.070432742 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.731846339 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.015899318 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.15272325 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.991669089 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.061125777 seconds)
    (49/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.836863425 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.429322109 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.107105833 seconds)
    (52/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.902106142 seconds)
    (53/309) benchmarking ("sort", Float32, false)...
    done (took 5.530182898 seconds)
    (54/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.921551496 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.928120226 seconds)
    (56/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.814255187 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.937588678 seconds)
    (58/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.904407045 seconds)
    (59/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.317890353 seconds)
    (60/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.891646155 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.171673031 seconds)
    (62/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.940447049 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.156797186 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.979719961 seconds)
    (65/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.047244526 seconds)
    (66/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.664120429 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.161166274 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.818865767 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.017774066 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.814034944 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.949634368 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.740682985 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.067873007 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.038330413 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.881578286 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.813735043 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.845020874 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.82232078 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.91161142 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.814259085 seconds)
    (81/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.489413876 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.757455837 seconds)
    (83/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.8873925 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.920809161 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.507287449 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.890254865 seconds)
    (87/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.044564082 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.751654794 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.802527509 seconds)
    (90/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.900890282 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.94733236 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.045916993 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.848872776 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.779756427 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.236702165 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.150957844 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.998653052 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.803734185 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.102661928 seconds)
    (100/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.946137514 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.408780138 seconds)
    (102/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.999298249 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.842554092 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.986748557 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.876026995 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.264329198 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.822500139 seconds)
    (108/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.836588307 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.798581841 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.442814795 seconds)
    (111/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.902093103 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.01629614 seconds)
    (113/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.328202335 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.501520676 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.749500582 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.844668868 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.815054676 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.818886084 seconds)
    (119/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.018945584 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.944798705 seconds)
    (121/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.87828495 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.89766616 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.815452124 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.837862554 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.740709786 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.957153145 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.03845284 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.1104951 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.915202604 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.835465235 seconds)
    (131/309) benchmarking ("sort", Int8, false)...
    done (took 4.682483197 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.847010015 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.841739381 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.069915391 seconds)
    (135/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.355189271 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.803843068 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.243930269 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.050932249 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.071357902 seconds)
    (140/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.096198641 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.064801182 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.804209085 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.01072552 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.840199346 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.645559625 seconds)
    (146/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.821987469 seconds)
    (147/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.766059412 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.925670092 seconds)
    (149/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.802301604 seconds)
    (150/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.54435907 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.817106008 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.121689004 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.162241326 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.756321044 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.168525936 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.915442766 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.092072088 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.213891001 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.807465838 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.137341832 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.847969402 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.147686686 seconds)
    (163/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.982433496 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.965353276 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.827039465 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.825921514 seconds)
    (167/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.940182475 seconds)
    (168/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.896979991 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.084998511 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.841933277 seconds)
    (171/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.730964798 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.028641716 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.820361999 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.000712287 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.98288551 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.836755472 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.82048071 seconds)
    (178/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.975703235 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.908006628 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.276256169 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.972912109 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.478634099 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.840832677 seconds)
    (184/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.900358763 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.818739451 seconds)
    (186/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.453382474 seconds)
    (187/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.923235832 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.809362858 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.304439875 seconds)
    (190/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.154156227 seconds)
    (191/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.856027433 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.845903644 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.519959627 seconds)
    (194/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.926944188 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.066020919 seconds)
    (196/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.96066673 seconds)
    (197/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.927078189 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.853824914 seconds)
    (199/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.804999668 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.196193139 seconds)
    (201/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.936579414 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 6.820941891 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.159457397 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.885360038 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.830358479 seconds)
    (206/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.276451563 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.212438334 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.957099428 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.825190102 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.578821456 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.901512536 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.820149543 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.199444771 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.66808822 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.045687427 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.997725103 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.010191047 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.810497318 seconds)
    (219/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.0771393 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 3.0391519 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.102509913 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.844637867 seconds)
    (223/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.013733138 seconds)
    (224/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.928392105 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.850994757 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.822927798 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.099465939 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.852824289 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.968615146 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.13847381 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.912886727 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.763184699 seconds)
    (233/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.968922311 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.849053989 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.50697055 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.910568056 seconds)
    (237/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.922134508 seconds)
    (238/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.849790469 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.153185366 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.126689533 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.122796478 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.152789212 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.828919656 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.919380354 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.909877988 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.918233748 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.215855666 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.850141769 seconds)
    (249/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.929615519 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.00156329 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.900087932 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.823631389 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.916840074 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.823638278 seconds)
    (255/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.327009219 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.978703332 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.813057083 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.075519649 seconds)
    (259/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.250993499 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.816067515 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.981041808 seconds)
    (262/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.118387357 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.175077366 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.834832574 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.956907257 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.856770963 seconds)
    (267/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.121223729 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 5.625900454 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.188623795 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.1181973 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.963779877 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.980034492 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.234983605 seconds)
    (274/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.971911686 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.022438541 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.983171379 seconds)
    (277/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.865186867 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.98472863 seconds)
    (279/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.268326791 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.564553333 seconds)
    (281/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.755232778 seconds)
    (282/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.90077587 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.937064046 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.828039397 seconds)
    (285/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.998822374 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.128935845 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.925303667 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.991410761 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.254421618 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.537701132 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.120017714 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.653645324 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.111550753 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.864844874 seconds)
    (295/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.920078649 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.217048044 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.838242816 seconds)
    (298/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.835789697 seconds)
    (299/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.3025214 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.833858226 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.81463062 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.816424781 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.930941086 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.968831242 seconds)
    (305/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.07674648 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.239417998 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.486087418 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.944884255 seconds)
    (309/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.982040973 seconds)
  done (took 992.407215569 seconds)
done (took 994.207825445 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.027023067 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853731271 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.83669328 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.858928711 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.949667712 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.864608071 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.848749337 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.839906954 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.88493413 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.886790808 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.836494641 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.863450734 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.84025993 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.838728353 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.838383618 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.854162043 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.155313571 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.871591086 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.855856359 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.846920362 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.857455994 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.837102586 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.88780389 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.864682489 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.841392095 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.841093402 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.842421576 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.858594633 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.949589609 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.839817832 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.841396359 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.851346661 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.15376337 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.868639486 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.833300638 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.859160161 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.85156037 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.848474368 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.843457999 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.871106345 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.248500723 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.877971997 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.840996041 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.84103511 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.841094518 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.843546263 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.842431187 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.847175788 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853440209 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855230703 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.240120797 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.895729622 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.842417609 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.840210587 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.849629341 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.839647694 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.843238317 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.857802209 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.859680496 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855640726 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.142468692 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.875469724 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.842666 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.858079411 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.848238471 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.276607669 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.876498708 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.845918895 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.249989916 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.884943172 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.276752183 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.889736989 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.842353064 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.855669441 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.873955775 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.158778671 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.868136277 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.841916659 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.849950146 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.839296962 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.851232321 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.854575992 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.846196099 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.843306372 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.854827116 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.868663902 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.8515012 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.843263391 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.849717513 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.862301958 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.849387673 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.853601782 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.845273906 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.837661899 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.851568832 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.845909068 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.845636882 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.844687909 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.847722508 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.853033774 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.249531147 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89891503 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.839261646 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.838572539 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.842793112 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.857014853 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.247740327 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.883403317 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.86471377 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.891477982 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.844931581 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.144673706 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.876018232 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859167086 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.852034504 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.847667866 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.839327756 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.146039871 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.273836538 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.899577669 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.846124935 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.840191736 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.859616304 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.847476698 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.840490175 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.161500374 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.875621146 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863293356 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.967222461 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.855104375 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.877960661 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.843253737 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.848643566 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.87210741 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860975272 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.877081731 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.848355314 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860736925 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.862312191 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.841998622 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.855910365 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.85689245 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.847253223 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.85163548 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.839697761 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.872649286 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859717046 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.85988546 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.867722535 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.967361659 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.842711125 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.146772675 seconds)
done (took 290.709171458 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.924731468 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.836755576 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.945979809 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.841935782 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.94012041 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.928702311 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.840442484 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.840360874 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.840500642 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.254770555 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.840292911 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.841443123 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.835032557 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.841424701 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.942184145 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.843229575 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.840477455 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.181331358 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.844667052 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.926185072 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.844995985 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.84149277 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.844921749 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.22227989 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.836438488 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.836422315 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.915160995 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.845094353 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.229246746 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.840969335 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.835914006 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.207802046 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.935734025 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.862170064 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.854055901 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.851041971 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.929358995 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.858450554 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.924848329 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.936748567 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.941717583 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.876380938 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.84540447 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.844670075 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.849209636 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.847776402 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.842197547 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.872249396 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.841185611 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.842534046 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.216463696 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.855446404 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.842985927 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.842934929 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.843140912 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.877007323 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.844798602 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.847030149 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.950054974 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.847206324 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.907456 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.261909802 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.218629152 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.845685666 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.837571452 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.843550941 seconds)
  done (took 182.835339194 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.911356794 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.922808278 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.913829067 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.850227223 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.8947524 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.912385376 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.849532427 seconds)
  done (took 15.021548203 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.852246416 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.846882378 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.909830762 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.910407052 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.846229402 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.003894672 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846684338 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.855926808 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.842735899 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.913059894 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.849223836 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.846908319 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.854408421 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.846413052 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.911111979 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.858530336 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.96391342 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.847892838 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.848496787 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.9989752 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.844606892 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.853437335 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.900312782 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.858780476 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.848345583 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.85352782 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.452082006 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.848534373 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846189936 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.848458929 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845858038 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.888459018 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.848679047 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.843817914 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.844091404 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.989334167 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.848813806 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.84542108 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.847361928 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.841658575 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.848281112 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.848594223 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.847857363 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.845298142 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.848560547 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.870718731 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.847694782 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.847389496 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.848774374 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.848263503 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.91255568 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.848464054 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.846905287 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.846638676 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.918183601 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.857271927 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.850082553 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.845596665 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.849386586 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846608274 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.000952555 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.915250684 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.849338632 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.914633914 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.849629386 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.849957421 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.850595484 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.850995666 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.947019028 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.850845543 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.915153077 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.847373074 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.056531708 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.873009491 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.851358882 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.85355951 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.854234669 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.852165662 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.843549208 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.858564301 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.848376633 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.851205537 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.856278654 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.847151239 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.847910619 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.989262509 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.984122234 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.847900394 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.862833918 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.858339473 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.847961416 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.914305788 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.850005381 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.848485463 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.918047523 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.967755225 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.906085988 seconds)
  done (took 204.078513071 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.855259296 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.859715548 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.853140008 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.868553871 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.851271402 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.850120151 seconds)
  done (took 12.910788918 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.853201527 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.852551949 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.851383726 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.851215023 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.851700816 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.85297217 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.85317203 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.853115357 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.856339272 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.85033911 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.852256282 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.853228461 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.852844781 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.852023046 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.853603896 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.852004409 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.854385865 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.850630745 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.852209694 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854573204 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.007589774 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.853040098 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856187271 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.854067121 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.857899982 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.853136168 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.860341838 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.853421293 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.852908194 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.860397514 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.856734273 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.853265755 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.853259023 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.860066227 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.85815265 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.853848443 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856730513 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.854686117 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.850206488 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.854438658 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.854024474 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.853779088 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.853308093 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.855942737 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.855621743 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.858129591 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.858239489 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.862201512 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.85621087 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.855361279 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.855677266 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.853881086 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.854260775 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.855238033 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.857216153 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858805998 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.858355296 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.856068797 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.8544802 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.854470668 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.855664796 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.855528065 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.855259753 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.85974545 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.852007436 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.856375274 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.855352876 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.859527036 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854624469 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.854350818 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.856319982 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.851976051 seconds)
  done (took 136.477894363 seconds)
done (took 553.10950562 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.015163137 seconds)
  done (took 8.79196561 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.052765639 seconds)
  done (took 8.871832999 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.273226457 seconds)
  done (took 10.055208561 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.863578741 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.869913524 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.857192051 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.855913086 seconds)
  done (took 29.247645854 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.959699544 seconds)
  done (took 8.739251081 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.875767295 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.849434013 seconds)
  done (took 15.539080949 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.885451972 seconds)
  done (took 8.666403789 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.042640067 seconds)
  done (took 8.848479873 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.873042952 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.894558269 seconds)
  done (took 15.564932349 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.837996923 seconds)
  done (took 8.620776102 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.527557026 seconds)
  done (took 11.408254742 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.873932774 seconds)
  done (took 8.763268314 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.94258613 seconds)
  done (took 8.72496803 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.891898469 seconds)
  done (took 8.674094954 seconds)
done (took 162.29511249 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.856251112 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.854301269 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.854139945 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.857389472 seconds)
  done (took 29.204686729 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.894533085 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.896347875 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.896638368 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.905343364 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.898941562 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.894739106 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.888056914 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.886484018 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.906007501 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.898055124 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.897514433 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.89921555 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.896063964 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.886562266 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.898016625 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.897242606 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.906081032 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.898241188 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.888220124 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.899198118 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.863879517 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.906388671 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.89937459 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.862142775 seconds)
  done (took 47.24708281 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.063029716 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.933691393 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.01656681 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.914436186 seconds)
  done (took 9.711710649 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.914316953 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.915571637 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.927542898 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.96663709 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.994452561 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.925750546 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.890578129 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.884081047 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.871957759 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.915531355 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.991799514 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.911093068 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.004969809 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.86441079 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.056333097 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.863434759 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.86306545 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.916235278 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.967826083 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.983654717 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.86401427 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.915142805 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.918821462 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.912903641 seconds)
  done (took 48.02510854 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.862005226 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.86903484 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.867967758 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.861737842 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.86295121 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.862578732 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.868568307 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.864554061 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.884109455 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.864714307 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.863235635 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.863485935 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.862133975 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.863592907 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.863680963 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.875936985 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.877881068 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.863609031 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.866610689 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.869863832 seconds)
  done (took 39.124812961 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.857036473 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.712379832 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.210118062 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.114669825 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.858139075 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.857565208 seconds)
  done (took 31.396117418 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.877223584 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.870096079 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.863957033 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.92300362 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.005033431 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.871110753 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.864988689 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.876491452 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.912609083 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.92917361 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.886673492 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.894584963 seconds)
  done (took 24.561296819 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.861495015 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.873788395 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.860042739 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.888547675 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.877628421 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.873400749 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.873090665 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.859073142 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.879158295 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.884909315 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.872976773 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.877630509 seconds)
  done (took 44.273168269 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949831933 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.750141232 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.937504954 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587733508 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398630598 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073096096 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.37946209 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.203634228 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.86570365 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134087323 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.846601614 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111460184 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.1161505 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860820608 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.931376643 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.337600635 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16349093 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100291609 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892657969 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.613522793 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985265488 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395199038 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.65069318 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991441488 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072881891 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.996573352 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.122368728 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.827644359 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998906391 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901898897 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872373434 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.864277992 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136609062 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243434575 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994239277 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872179859 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.519419974 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.58275904 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.848798243 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.621144486 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.778946123 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.999474364 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871776696 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863953292 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797039859 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39173558 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204185001 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.868128194 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.56596645 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863976129 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874164631 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954424687 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.867306741 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.678624011 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815350483 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.142734156 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.8606329 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870052041 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435371391 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.978161008 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.494897012 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.79725813 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.957094236 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.64440643 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357957018 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.02378918 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.867823563 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867619022 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800794677 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.623955864 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991678312 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01013448 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.884497165 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515354707 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172564915 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.934278122 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.952637668 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168911314 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.545768132 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.920023689 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092157041 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822494046 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79871103 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.705201304 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.798923317 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147661901 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906991598 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.555711749 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910182916 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.205337392 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.875615091 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886579431 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872393525 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088874043 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.74818487 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865592858 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.631701222 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154210036 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888129688 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207612841 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801453798 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.869587886 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120951191 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.077948758 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.979249762 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.441821045 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031631779 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86612153 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.95536416 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.672544102 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.982463362 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.149228527 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933393594 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.978121549 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002041878 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.818667814 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182810225 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898749868 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.040183426 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.88587663 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135844408 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.213633571 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123178254 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950485017 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869118445 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.868646243 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.636528274 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.497872312 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.091748986 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.868709092 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.247354867 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981499996 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.869787683 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803118924 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.510394053 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.918566766 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.983632774 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.093350651 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.710962063 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247793273 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80263819 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014563432 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.981051744 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.091090219 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.529912821 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.954319844 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128090932 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.241657916 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.106796306 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983163891 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888939905 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987362584 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891057048 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.165096801 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.227189702 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.872909881 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.873017285 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.650049487 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.945441541 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871924056 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.873742084 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.664150488 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168573255 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908293124 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870029987 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.804602959 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.883969237 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954512536 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874650302 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.879664489 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.397649375 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62433314 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.881231311 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.595736221 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11709401 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879865133 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.630063575 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062797686 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.952465714 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164938198 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941966705 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.804100983 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.573090455 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.573664364 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869903044 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806163837 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.871599871 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880588125 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882270565 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.093454625 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159693148 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930345823 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.637571961 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.990763777 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880939142 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.875810992 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873363722 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.395629682 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.999018841 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38375349 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985716283 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008994501 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.885500044 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805343093 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.875559166 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876014058 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.872228716 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.839198396 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925635506 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.585914367 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332378041 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131637401 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.519074704 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88889403 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.611623625 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.010095392 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.898327717 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.673157388 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848265581 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.968625722 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939258782 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.883601546 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.646232614 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.659974384 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.44685971 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190743331 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218370938 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334477848 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.238508142 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.197092134 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.217328531 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109196113 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.402325796 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936038566 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220771533 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818948137 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957122648 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.537997954 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238759676 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888781869 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101353131 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271859466 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.754367467 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045603473 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08599706 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910476862 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.678288279 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905877741 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.39838862 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029555845 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.702857633 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109522305 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211575298 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.688531171 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.995799579 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.873766789 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.613251073 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96419496 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.588924477 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.23600104 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.294526395 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.032650107 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377809612 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.876314117 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.321662701 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240364812 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.086123491 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.083447883 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811729171 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.887442652 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.887583107 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.876076662 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.855019621 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.820190221 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.168435522 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888453535 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112743083 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.034977661 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256785129 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.791059667 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.882595758 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876794019 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189944324 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.543121951 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117894738 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.212597928 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.472372494 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892420133 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.811456534 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810277807 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.580165337 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.877330316 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.850957534 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130849493 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.992073257 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831742066 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312376336 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191978527 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.134133429 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.891449087 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171393719 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166397838 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.614065222 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908455925 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.979732908 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.699143408 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.621367742 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.10123578 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113032489 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.681950675 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107984521 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.968140545 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.861114503 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.877652064 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093163177 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.102925014 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.914332058 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140655258 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.606796578 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.882720483 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243955758 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945997363 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.904139568 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.099980533 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.972583348 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889166271 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959280378 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888908082 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.890286298 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.8915759 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926265964 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.914372191 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.026192522 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.893457379 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970464679 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.00586824 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.49414846 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.897704201 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17697617 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258562118 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230947856 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951264128 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881479429 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881529003 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814012399 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018073433 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.325826937 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153860014 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.010143324 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.021207514 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905538943 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.681346858 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.170903804 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192695221 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154845517 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.775757535 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880266308 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974207086 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.106493957 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892166955 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.092166377 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133092118 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231055947 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356690955 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.002283212 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322479167 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155016111 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.252807725 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881229956 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473016149 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.892558297 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674213046 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.930025839 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.961527534 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178642991 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895620406 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270158318 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905620472 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.07724229 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.335451341 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60662858 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252277908 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.88689937 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.949414784 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178461279 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306982332 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205508301 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964891675 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893796628 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.583617539 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02100251 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.867002741 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.16230289 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881950234 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095206536 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.595751149 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.892218029 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172402603 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204097312 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.879947852 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.895266665 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944398664 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.894209487 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.108393889 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166107791 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140842505 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894763094 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88422936 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.700117492 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167346999 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951509994 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817978572 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.888029587 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985558858 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136930566 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904119316 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.400683753 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.587124312 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195215563 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.810561421 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906990078 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289043863 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334773386 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229712682 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.434443273 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129401303 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.449540727 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.735244096 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260045089 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.890365652 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.283621339 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261598266 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.888853971 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39308813 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99703694 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.17366185 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218192215 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.901943066 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697801385 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.935781772 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109464983 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478627526 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827806728 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890447121 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.947396455 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886703945 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.018569394 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898449973 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.892533248 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765970124 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.725353707 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378335649 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.892372644 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.909433434 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.649543989 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.4511389 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994560413 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041074063 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891893486 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.597363049 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.177553628 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142718327 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378618552 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.95670288 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.890774928 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886288588 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814187856 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081765343 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.084338766 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209712349 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.211730404 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.998308239 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892114216 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.103144662 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09845529 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.871760111 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05127287 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334047839 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99973767 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.817628798 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.602670149 seconds)
  done (took 1691.407494335 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903269919 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.906981469 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.90047857 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.949461829 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.916649181 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.910854459 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.960135817 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.987159581 seconds)
  done (took 57.250063065 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.889192691 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.108618091 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.900944735 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.890409928 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.921679619 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.890448083 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.100875426 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.90083917 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.909219427 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.899941116 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.888982929 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.905198709 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.220242998 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.91126517 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.886461179 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.257661097 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.908552654 seconds)
  done (took 75.216587417 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.89538797 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.238030358 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.908813423 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.912096347 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.8308404 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.891553763 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.909302492 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.918230491 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.892983468 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.060702114 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.226189342 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.895723257 seconds)
  done (took 90.394231557 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.902846313 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.893552964 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.89377616 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.895345107 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.894214962 seconds)
  done (took 11.303537422 seconds)
done (took 2200.915155409 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.125848052 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.116829807 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.120084082 seconds)
  done (took 6.051080226 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.035480821 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.087588202 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.225813015 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.234477747 seconds)
  done (took 10.403207634 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.200698637 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.261647464 seconds)
  done (took 6.278514894 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.219169372 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.909841222 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.310889724 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.891233708 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.892568853 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.894959667 seconds)
  done (took 22.501244449 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.894708637 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.898093121 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.895072111 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.89649526 seconds)
  done (took 9.40121491 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.873252019 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.629622385 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.877364818 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.892907354 seconds)
  done (took 21.091482378 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.642685304 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.01657736 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.638088846 seconds)
  done (took 9.114461697 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.44706774 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.131407184 seconds)
  done (took 9.395458702 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.133722521 seconds)
  done (took 3.950654314 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.922678727 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.164849106 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.421324144 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.428453249 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.548744178 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.740490436 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.227708856 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.13012276 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.348950174 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.350540227 seconds)
  done (took 25.102321864 seconds)
done (took 138.671264143 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.242237853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.919169613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.094925041 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.255958296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.131837168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.094003478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.109202387 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.244690983 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.776289351 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.770329426 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.257354697 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.129280574 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.054580062 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.91311251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.062718675 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.913880481 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.12068558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.258297912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.938237994 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.157350021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.119708923 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.902058989 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.095789887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.91716878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.127797976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.042731397 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.443684957 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.918644731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.07737809 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.454276759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.045664792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.295731687 seconds)
  done (took 168.705449629 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.893012904 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.893466843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.892418209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.893570968 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.437223634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.893579785 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.894896757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.893001067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.183174065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.166296624 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.893614297 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.431186649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.894210767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.892953443 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.895237832 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893511079 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.356303005 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.894736655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892751138 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.892737984 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.896373225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.268569293 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.89491783 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.27573665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.326357668 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.895972591 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.893954995 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.894410961 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.893542256 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.894269309 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.893377529 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.894169793 seconds)
  done (took 209.72133202 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.838747001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.895592913 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.895235329 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.895237383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.897847011 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.892364763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.897328983 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.894086571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.441637781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.435820709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.895662195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.896280392 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.899440372 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.894269484 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.897300102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893820023 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.901480727 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.885060506 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.897525965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.900630209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.90233956 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.586020242 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901933232 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.594418813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.901340982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.92780574 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.883465661 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.897116274 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.906238185 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.893569159 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.895170259 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.877389348 seconds)
  done (took 220.935076643 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.065805662 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.88337079 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.87761442 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.802098921 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.880459656 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.878444929 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.8781367 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.061346478 seconds)
  done (took 19.1539263 seconds)
done (took 620.342292637 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.320674403 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.166755637 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.059451173 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.9106437 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.175124028 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.935166555 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.896794677 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.966730143 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.634492708 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.969464245 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.576511977 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.921190861 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.66346889 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.926849578 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.019127509 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.951098163 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.49081691 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.583694376 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.070273592 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.976818258 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.06560897 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.85943568 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.983472857 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.65891491 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.680220926 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.890761909 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.071180213 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.490681608 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.904953759 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.058833586 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.636333521 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.271349887 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.911660985 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.891171744 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.950262654 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.923822471 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.229781741 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.91059584 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.013316193 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.661523934 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.985356131 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.513111606 seconds)
  done (took 103.581283065 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.861975975 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.862604653 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.861141737 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.861868559 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.865007243 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.860623255 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.858936423 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.857959802 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.861009985 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.859580194 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.860482016 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.859902748 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.860508757 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.860730761 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.859992887 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.859183532 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.862874691 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.863307537 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.859161052 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.860031495 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.860539518 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.859604629 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.874575329 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.859263825 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.859923974 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.864816172 seconds)
  done (took 50.200904272 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.874695381 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.039131703 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.120244366 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.897588088 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.872473847 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.877811981 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.895523844 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.884282425 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.877241732 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.876472732 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.968099898 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.887824816 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.896713193 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.114928396 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.894501463 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.87457717 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.875588834 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.874964679 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.047398381 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.898058518 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.890757151 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.875045409 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.887690678 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.885179558 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.870956573 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.868138282 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.871995001 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.315451585 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.884325898 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.962127553 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.916964563 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.894866121 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.241740588 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.123734596 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.929951508 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.877457418 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.870453197 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.966181475 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.881521077 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.872039266 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.890567764 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.880003287 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.106184487 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.364581224 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.893064258 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.870714518 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.32371552 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.980994597 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.917336979 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.883163825 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.113359243 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.889568565 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.872897894 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.873858714 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.908665056 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.878987524 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.873287189 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.176955541 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.887910738 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.889392262 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.880428742 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.873777018 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.04646698 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.886205906 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.036148732 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.887952248 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.878459658 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.874184095 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.113545972 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.889214295 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.364858855 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.890578406 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.871941562 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.963359633 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.047252189 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.357137777 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.890283734 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.049581011 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.26275007 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.905143091 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.884657951 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.304993558 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.906538757 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.885309537 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.875840779 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.878227704 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.876278931 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.920521609 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.892714605 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.307293457 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.380699169 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.195212988 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.905319461 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.893631599 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.873196305 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.178995719 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.887690256 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.874314551 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.108305288 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.379261983 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.891910586 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.882042801 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.362084419 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.892001047 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.895172034 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.883852004 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.117791526 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.892699125 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.916849754 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.876360843 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.882206895 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.879144878 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.893179734 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.886320599 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.875474437 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.348640613 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.989291988 seconds)
  done (took 232.454003283 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.869136773 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.896002547 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.87005161 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.894740701 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.867515293 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.873818209 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.865792364 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.872205354 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.873819987 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.869175491 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.86973524 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.870312328 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.872793758 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.999465112 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.888914564 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.875454024 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.473258062 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.867530866 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.862169017 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.868379311 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.536100436 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.869928694 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.860976682 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.860233516 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.869025987 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.856239561 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.86183986 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.947706225 seconds)
  done (took 167.660082812 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.860215795 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.972912241 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.877402644 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.892514161 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.873782932 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.855161081 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.880098615 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.87348587 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.862119902 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.856458111 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.853560284 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.918376073 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.867324867 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.955500644 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.892961194 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.885990506 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.960080594 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.864962815 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.850252879 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.851401289 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.881421366 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.842205554 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.91032081 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.975742817 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.871645387 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.971225621 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.851814194 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.849132311 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.84716277 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.967362964 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.864613738 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.911079087 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.874304589 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.869249564 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.970929352 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.962798905 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.954411822 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.877251082 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.846482464 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.843874263 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.84321239 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.83181753 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.958125199 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.861705638 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.841888663 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.951276511 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.863004889 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.8454049 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.85328294 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.843484589 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.858314766 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.863866153 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.914081413 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.978999451 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.878836576 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.871860711 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.867651886 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.133840017 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.858282591 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.946117611 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.840250201 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.966057568 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.866444742 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.833209052 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.848766164 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.852290513 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.870993456 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.878179911 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.950036586 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.857150274 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.944578944 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.884355155 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.851307753 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.845307851 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.846682512 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.966172991 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.962053998 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.881196401 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.882534031 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.881286345 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.838988844 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.844773928 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.835338993 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.863880956 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.85229015 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.966871198 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.964693882 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.857186162 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.849847558 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.84792634 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.848394076 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.874277564 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.972352222 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.88306932 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.946149544 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.918758924 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.922965795 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.860792493 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.859051237 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.851740724 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.911577204 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.862433849 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.858574543 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.185015293 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.921560187 seconds)
  done (took 200.404646709 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.300859806 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.903584582 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.902856543 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.163751373 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.302415468 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.642726983 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.896072265 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.897322224 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.919928766 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.085071595 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.965783432 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.915144171 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.885953192 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.868987962 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.899104753 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.916692128 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.905740991 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.222567421 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.020215851 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.016607147 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.879056562 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.202101623 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.225716403 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.306598946 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.936916861 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.259761884 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.573909433 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.03970795 seconds)
  done (took 60.830421388 seconds)
done (took 816.935847792 seconds)
SAVING RESULT...
DONE!
