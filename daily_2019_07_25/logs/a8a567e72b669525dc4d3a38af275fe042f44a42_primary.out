cset: moving following pidspec: 5614
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340574099 seconds)
loading group "string"... done (took 0.537830051 seconds)
loading group "linalg"... done (took 6.692586453 seconds)
loading group "parallel"... done (took 0.153101611 seconds)
loading group "find"... done (took 1.158085383 seconds)
loading group "tuple"... done (took 1.744026703 seconds)
loading group "dates"... done (took 1.179303438 seconds)
loading group "micro"... done (took 0.221950301 seconds)
loading group "io"... done (took 0.9667889 seconds)
loading group "scalar"... done (took 36.024439783 seconds)
loading group "sparse"... done (took 11.109664635 seconds)
loading group "broadcast"... done (took 0.912439385 seconds)
loading group "union"... done (took 11.832165098 seconds)
loading group "simd"... done (took 4.144883303 seconds)
loading group "random"... done (took 8.509929396 seconds)
loading group "problem"... done (took 1.866073843 seconds)
loading group "array"... done (took 19.896489057 seconds)
loading group "misc"... done (took 1.678082414 seconds)
loading group "sort"... done (took 3.203650917 seconds)
loading group "collection"... done (took 16.398522519 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.470034659 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118831098 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112088335 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115425433 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138282525 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.111984118 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119707323 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081422098 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.809215109 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138630599 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115866703 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.402911806 seconds)
done (took 4.899874506 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17116075 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080689148 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079607574 seconds)
  done (took 1.292301109 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063762432 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.118438746 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064906574 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065600176 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065031196 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064820079 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064410198 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064217432 seconds)
  done (took 1.642800494 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070835084 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066532751 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067026047 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066134576 seconds)
  done (took 1.402850366 seconds)
done (took 5.716057892 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.750002566 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199797251 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.179725603 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.386649453 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12483239 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160040968 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638331056 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315146821 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.179999709 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.078998561 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101014842 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315742049 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104936818 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638148051 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075380841 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088036285 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137006919 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.406836485 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.065851858 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080858648 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.0879177 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126789717 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084395981 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07414032 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14256894 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066656855 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126332187 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079339264 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065166897 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204304189 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171318904 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667895478 seconds)
  done (took 10.092796339 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094427403 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094972567 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066979624 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121475958 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093994169 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06824171 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069421304 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066048731 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084859272 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125963244 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086953175 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099455245 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063930263 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067395912 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.082510994 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202344623 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07802411 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079237502 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068690466 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073520623 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103604722 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076521946 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076236229 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076088656 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126648281 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178436544 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094748541 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095866799 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065360782 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078993718 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113730742 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123865754 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064231789 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065585987 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12204611 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093253807 seconds)
  done (took 4.512374475 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.890583289 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136302596 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088486492 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158356089 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06657489 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.104625135 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06415301 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082496066 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.195381787 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.036084032 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10748651 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.421828336 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109012848 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.082953513 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066413476 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067030568 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06347612 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.064885387 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.336260092 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1076753 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110442457 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081504424 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072473622 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067804267 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.339881954 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065599588 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065267291 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067361435 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056751369 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.109962173 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066815033 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.959403089 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085805884 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066105938 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098919765 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161545433 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085409007 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.130279588 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063902242 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06364467 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.143809288 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071628818 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.063609605 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080260217 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100668975 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.099760692 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066262581 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.194411536 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159022715 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065207657 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084642925 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.696707807 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151073087 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076328959 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065369571 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.241686161 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083723322 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065024776 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063350724 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.177962682 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124393403 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066266358 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065098405 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064243541 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067513239 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359498124 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066855412 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.72259374 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068530977 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075447629 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067631855 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065169417 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071484995 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070405747 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06218203 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.082921411 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064807188 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066543028 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065040597 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064736462 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067038763 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082890123 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.185103195 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065407278 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065360917 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063719375 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084216112 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095619351 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072301559 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06430458 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098530152 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062731656 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065990372 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065577408 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.099642698 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065286933 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082008723 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067357122 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111697965 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06442516 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.086835578 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064629296 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094018407 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069122331 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098151518 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.168485879 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066659345 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.221918212 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064021623 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063880104 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.064877282 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067658019 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06598691 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066748905 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077579836 seconds)
  done (took 19.563934586 seconds)
done (took 36.190836883 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269942075 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07280263 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073445938 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073001939 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073411113 seconds)
  done (took 1.781856639 seconds)
done (took 2.980999563 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.117204426 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097087416 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063090909 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093513194 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062975241 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098205383 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097454586 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080049251 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097184937 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.062844718 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094056136 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.062995795 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06289502 seconds)
  done (took 2.309318884 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081014786 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081526764 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067989176 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080984389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062005119 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080428052 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079324276 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086521899 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079004299 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070506259 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062584298 seconds)
  done (took 2.026250262 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080873343 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082153293 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068319268 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079542005 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062339757 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079701459 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079234776 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.083594818 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079377858 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071807953 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062763996 seconds)
  done (took 2.021212956 seconds)
done (took 7.546036206 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075958283 seconds)
  done (took 1.259697743 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.578695526 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.013759011 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079739035 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109830784 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180214321 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116292615 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27227807 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084799556 seconds)
  done (took 8.798913416 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086526577 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081055399 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068619484 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067308088 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069933705 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070512365 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067242896 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069349499 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067116201 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068769417 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069703696 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070594186 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068041913 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069431034 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070153117 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068302561 seconds)
  done (took 2.387110941 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090071923 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.08912369 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071811791 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073082682 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070621351 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070592729 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072956251 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071697282 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06932677 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070381591 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073235947 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072003122 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069922177 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064203733 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072822339 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074416512 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069344481 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072729778 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073306241 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072791765 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072739784 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06265716 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069374079 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071940168 seconds)
  done (took 3.030124109 seconds)
done (took 16.668283444 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109848453 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070286847 seconds)
  done (took 1.371467665 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079031569 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08114045 seconds)
  done (took 1.356826255 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08070285 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064337064 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087486246 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076196095 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065385269 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06435566 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084811448 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064917367 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064720867 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064643728 seconds)
  done (took 1.915024985 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067391176 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075993181 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069264513 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078857178 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071834818 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062978396 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070975525 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066473743 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075580346 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061750822 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069639955 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080143879 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069059088 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081978441 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070540848 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066606643 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068505926 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065347623 seconds)
  done (took 2.474346075 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06425068 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065646782 seconds)
  done (took 1.333100958 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065150482 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06239907 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065202186 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064700132 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062227104 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061175044 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062253594 seconds)
  done (took 1.642909035 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.369055384 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108866113 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290570796 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069755202 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079897748 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247799851 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064477589 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069175696 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069115776 seconds)
  done (took 2.612169021 seconds)
done (took 13.910615718 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077078078 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083574899 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093100247 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.336243281 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090775702 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064513356 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112355259 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18402009 seconds)
done (took 2.256000802 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.204286546 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.558388717 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.364150517 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192614961 seconds)
  done (took 2.321612826 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.310850703 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089526902 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058276507 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065471003 seconds)
  done (took 1.735972724 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06433909 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067705425 seconds)
  done (took 1.343910294 seconds)
done (took 6.818528944 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065338626 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064673972 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083397531 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062762189 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064804754 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062363497 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062116284 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062492991 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064843105 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064623886 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067542547 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064808627 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06491151 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064888315 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06233562 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062181207 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064569207 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062275642 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06206985 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062600889 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064403827 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062829616 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065333682 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062290643 seconds)
  done (took 2.795782446 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081640348 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065542878 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070255644 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069905637 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068707545 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069622408 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06955342 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065070335 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070131763 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066774517 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068162775 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068497222 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06693148 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068385634 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067090438 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068655087 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069486074 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06486655 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066691834 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068881023 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069434948 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065324282 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068267899 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069968051 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068079403 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0682083 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067250387 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064991994 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069486037 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068488265 seconds)
  done (took 3.275216974 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068716625 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062341196 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06312206 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069441024 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06201475 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063672607 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06253044 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063046477 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063449378 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062191008 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063945253 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062372821 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062453729 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06324688 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063312016 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065850026 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077615191 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062672953 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062412562 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063013245 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065510256 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062488349 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0626126 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062571926 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062344373 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062011214 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062870684 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062714624 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063481085 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062460559 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065088441 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065726177 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062114808 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069271391 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065754498 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062327022 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066762031 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062365836 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064358661 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062087327 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061914204 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061949498 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062088755 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068707772 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062560726 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063868544 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062329475 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063255808 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062839833 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065129885 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062275235 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062111914 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064156499 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063942471 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066715955 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062621703 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063131456 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062082516 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063491713 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06217594 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061798216 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061982597 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064327785 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062845464 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076664545 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068872412 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06209102 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063939398 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063419191 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064971591 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064198087 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075851146 seconds)
  done (took 5.84402535 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089034286 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085266791 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.175437951 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064651275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060806933 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064972156 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06632011 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0633371 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064528698 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068608422 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063146065 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06397284 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064220453 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075288172 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063184987 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064031046 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068335895 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060697768 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062736474 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066080631 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062866624 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065918733 seconds)
  done (took 2.818379157 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15110685 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069501707 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102838043 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071321182 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06614557 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071165953 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068463295 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06887025 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068747262 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066756418 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066737704 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068364335 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066150434 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06658634 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066825584 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06719148 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068350672 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067160578 seconds)
  done (took 2.568964757 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076090059 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065205128 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084857433 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065025861 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064687345 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067499245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069198356 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072514595 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067041372 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06480275 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072687247 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066916376 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067151397 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064976633 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067077072 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064660789 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067001506 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064841801 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072721061 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068935526 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069185157 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072763965 seconds)
  done (took 2.743470486 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078501044 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066726412 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081209304 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06728965 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061116757 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063105552 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068887884 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064565034 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068879043 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066679734 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064988576 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063290046 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068205687 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065035263 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067506179 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064770732 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066161806 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064524453 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06652206 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061310605 seconds)
  done (took 2.567379718 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08549587 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066272665 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066494349 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073407617 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065953341 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065932133 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073720937 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06676855 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066334959 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085899681 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065862451 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065964504 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073654606 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070416951 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065982239 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073291361 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072966156 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073022118 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065848127 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066010402 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085431984 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065688349 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073087384 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065847166 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065903381 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065858594 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065959291 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070508464 seconds)
  done (took 3.19754149 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065193108 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064789459 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062721847 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062655888 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062109581 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062311973 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06235572 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062323238 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064721695 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062611775 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064392119 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064702466 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064790243 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064995079 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06502699 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064544257 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064890378 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062111626 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062243725 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062199276 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064696024 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064469185 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064434297 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062350126 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062008519 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064380529 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062228255 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062513106 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064574271 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062139205 seconds)
  done (took 3.139322904 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073681481 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071571629 seconds)
  done (took 1.379817364 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062563905 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078562194 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062283873 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069302507 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068923766 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065399417 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072049028 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06825742 seconds)
  done (took 1.777864537 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080373552 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075561453 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.0658385 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078010848 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075121663 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081693798 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13072485 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065795164 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071857152 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063334832 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078150304 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064058161 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071107064 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065471538 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070332025 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070909983 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063138994 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070640224 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066989813 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06368981 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065751437 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073205283 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067461932 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060882293 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066200151 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086202225 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075334678 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064636011 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067783594 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072078762 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070830464 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059440021 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064339124 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065534351 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063057418 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074245202 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079499602 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067972994 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073584531 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065727411 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075237159 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060472206 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06926599 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072020252 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075219579 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065085374 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065927498 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060042484 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062838541 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067386514 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060401514 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065028303 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059570397 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074391477 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068109533 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075255612 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063529747 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066217275 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067515358 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068057929 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071397567 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066722282 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067191609 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064098752 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074396575 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069130646 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073427969 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060142064 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059067225 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062683435 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074112338 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086555578 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070797582 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065415525 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06557604 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062921871 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068291403 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06611821 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070528965 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071555364 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065148732 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070476857 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072016996 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065458136 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067525024 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072665678 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063077572 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067867165 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063298094 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080825521 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063915741 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063271989 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063189157 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075235022 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068900979 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064764209 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062871489 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072122855 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059348768 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065554671 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065783728 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065874313 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074538847 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069184927 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069323108 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072272369 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071410334 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064004479 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066941603 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060726885 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064502485 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063113786 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070891368 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058288555 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066967441 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065378418 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064346237 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198647116 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064104306 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065727786 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073375481 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070850878 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063836779 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06222098 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067880053 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064889119 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068224083 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073141011 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06491847 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060618985 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060878283 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068716529 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06531764 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068699683 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069806007 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068822005 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060058329 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063786613 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070597991 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074622309 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065301309 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065971633 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071395104 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066353039 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064175799 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07114667 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067659063 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065198326 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070834624 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066773743 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060473465 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068196881 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067888256 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063498248 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068972728 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06915415 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067563868 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066226544 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064101004 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072925593 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066557892 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064739436 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065739442 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064295345 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075057235 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067092073 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060973168 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06208158 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074203873 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063566143 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064672516 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064788532 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067249035 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065792489 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062912748 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064183554 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067344197 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075575503 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069135028 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065498161 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069844625 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076331929 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064920018 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067616787 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06516298 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065748491 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066102397 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073506286 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070440972 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069315624 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067265856 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061589654 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070472641 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072372094 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064291864 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062793624 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064220507 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068538186 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070031801 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069240589 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065694002 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063192624 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06562604 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067830353 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067778136 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064534832 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064159173 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071379282 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063566989 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072170041 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066014316 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075046291 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068406814 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06104986 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068394475 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063673056 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071120253 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06066084 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063443013 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064714486 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06662019 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064479372 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0681921 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059755759 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071854221 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072404082 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065399832 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063975046 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064360054 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070676537 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066015892 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067797606 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067988218 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069822619 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074712148 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063820224 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067363831 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07399305 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.193234992 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060666512 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071232294 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064556746 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06516428 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066076885 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063433832 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068938147 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074966273 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072404877 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060185463 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068448488 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064050231 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065357033 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061690017 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.069746995 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068851401 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066462955 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072667888 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066516804 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066427382 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069617123 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065179887 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067169184 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066655037 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068685648 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06629179 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067533552 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065788883 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069239336 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064791022 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064088635 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067534932 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064930856 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066173518 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071307513 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064963089 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06597788 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068296524 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065910281 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066073855 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065831091 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065328557 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069177347 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06640467 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066179754 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067797236 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061606575 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072175876 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065711559 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072829 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065868837 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062401676 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072776917 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068346098 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071157329 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065860572 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065911948 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066887721 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064543804 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.067565291 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072218066 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063588475 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.0768879 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072950696 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066169333 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.067989654 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065731998 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067529883 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065187377 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066774439 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065815448 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066042695 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065071224 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070215616 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068781083 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066004394 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067060438 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065785677 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066091863 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066356928 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060366041 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064685784 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064837931 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065627888 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074696104 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065828022 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064950118 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06417508 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066667558 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064459653 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062299239 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073236026 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074044578 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066189939 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072469523 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06501211 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066854702 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076439323 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059648554 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063859046 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063234643 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063603286 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072937955 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065847827 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074386779 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065401886 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064742548 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06263171 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06565706 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063605531 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059397268 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062711831 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069172323 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063955473 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063359944 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064211432 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066859103 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064746156 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073031475 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063547225 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06467901 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064011511 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061323999 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0631761 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.196463133 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069113873 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066794587 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064005306 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063195164 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064794337 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06664047 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067160101 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065403577 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067482514 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074718928 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065094254 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068523458 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068908935 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060661036 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06859198 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065620793 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06575025 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065193791 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068997918 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069106636 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067370728 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074464439 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065848652 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066817475 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06596646 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063400372 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065171653 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065843211 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066250736 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066154868 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067084476 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073143001 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064016978 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068862301 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066250762 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066143712 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072621151 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066424765 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068782921 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072128047 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065893854 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067268489 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07344046 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069904129 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069323777 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066391429 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067443777 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072087555 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06468041 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072553476 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06583553 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066340953 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067072911 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063246369 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06512564 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065618357 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064521255 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07140909 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066886971 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065199586 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064814053 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063895611 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066407618 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068829349 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072957062 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068925685 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068763062 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061427088 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063099209 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066443924 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063408856 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0674472 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068128922 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070975876 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067556365 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065587863 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064318968 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074281781 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070574933 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068686718 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063128572 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068796953 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065809309 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067154568 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066007227 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065753292 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066182205 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069166358 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066861302 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064404716 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072050317 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068500109 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0661997 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066616213 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065865004 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065580944 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060665766 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065811655 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067406523 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070007156 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067222742 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065032102 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075188725 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062994389 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065913363 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068406378 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064585016 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069929594 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060601903 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06658223 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065827942 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065540897 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060405425 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064239982 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063186581 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066874477 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063735421 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059347545 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074119123 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07251088 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066877507 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063095849 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063095916 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05955326 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.191735332 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065541433 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06678253 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067792679 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076251498 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064888936 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064519711 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061624404 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06587381 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069038691 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068783125 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06326298 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061506361 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065373993 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068763547 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071051777 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065215056 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065676104 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068652774 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067864135 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063742279 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069585041 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063131723 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069327918 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07818229 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06651935 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067098023 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071760837 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073050299 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066560546 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06076917 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066050071 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068561905 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06637642 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066251647 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066987553 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081082805 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068420524 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064843135 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064613545 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068072238 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06516271 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073000326 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066475724 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066472648 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070222536 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06748594 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074509857 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068854481 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073093476 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069335336 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068406082 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064737101 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065585747 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06396221 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065038313 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066773009 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066374854 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069638321 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072559396 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065047259 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075741495 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074464542 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067142435 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062334634 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065058038 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06476602 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060477462 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065759594 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063598892 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063730858 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06338288 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064149397 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066197431 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070789006 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066485099 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066263167 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065444161 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059531812 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067425487 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067285978 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065964993 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062076035 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064893612 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065780459 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.068928454 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068240121 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063130515 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066600813 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066846439 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065968743 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060438942 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07192202 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064160711 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066915756 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064661455 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065090245 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065769413 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068814327 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069537573 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066605582 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06718642 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068773816 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066871597 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062818942 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062427841 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070323197 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062953173 seconds)
  done (took 41.872535801 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097394029 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061718328 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0605795 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060569691 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07201149 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061885198 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06064329 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061955768 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061982959 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063856127 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061307688 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061141061 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069280274 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075992761 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072084162 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06523053 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060731539 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061968066 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060723386 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061696595 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069116097 seconds)
  done (took 2.709072889 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072115163 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.06905217 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071287178 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073635704 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065886415 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069248227 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070884089 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069206608 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074150245 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065786856 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074331038 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069497889 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065681591 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073976473 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065665846 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069023409 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074213127 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065863136 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068807886 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070758723 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068973372 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070971767 seconds)
  done (took 2.842900797 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066030945 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064292841 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066087516 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060487282 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06513365 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060185931 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067947234 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062852147 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068044704 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064086702 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063756486 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.063786525 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066266786 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060354362 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06479432 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062547578 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105991161 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068043862 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064364073 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065269079 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060559346 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066454074 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060600835 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060716907 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063823396 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067745855 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065480659 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06264853 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064200477 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063988822 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064557607 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062286005 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066086187 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065261175 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063640344 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063803567 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064338112 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064422098 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060401109 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062706571 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065235896 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060525308 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064686725 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065779563 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062546187 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062291069 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066283527 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064153945 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060156876 seconds)
  done (took 4.481843676 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078076288 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106045633 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066553527 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086591034 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078298503 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074175484 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068398251 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087630256 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062152313 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063076156 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079445196 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077831574 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064611064 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069054598 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070909447 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064270086 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065517134 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063319679 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068036494 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064299433 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068115529 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070447943 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078070674 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077007909 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068053979 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063329327 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063851728 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068373371 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076824636 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068745301 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068605973 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069467359 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078590832 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069471959 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063670367 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066681504 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080169285 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065249775 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0666002 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062429014 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066874693 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068578242 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071107331 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.0805021 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065369905 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069637261 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064384187 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061800641 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076430151 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06671061 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071923722 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07832568 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068064743 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064435944 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068664227 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078111135 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064269139 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06250824 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067442754 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076024334 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062491789 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067821473 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077982325 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065942655 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071396373 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077572597 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069558463 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067551117 seconds)
  done (took 6.247999761 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073689937 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07099779 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079022202 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078377112 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071118015 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07070278 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070659748 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070814861 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07058081 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075214878 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071490319 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091059041 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066433696 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072948301 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071347205 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070907081 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070655975 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070695897 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070720452 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070507792 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071404329 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078051496 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071259481 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078008375 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096071015 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066399038 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070562408 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070698364 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078556194 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070606125 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077716172 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070992253 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070706293 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078266355 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077736527 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070609557 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06435641 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070576321 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070639403 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071033577 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066252008 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078062252 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070718533 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065970472 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070632504 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071009342 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0779369 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077915547 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073499809 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075569977 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071011215 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078513666 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070335009 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070928238 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078444818 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102431768 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078014722 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077769786 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070455503 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078010407 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077707106 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083575724 seconds)
  done (took 5.928313647 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081543041 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072919273 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075112545 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060798737 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063551204 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068308199 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062873834 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062970901 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072965935 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072919166 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075050526 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068478242 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071034618 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075143159 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068182742 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07095086 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068116533 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068511762 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072656453 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068358356 seconds)
  done (took 2.734386546 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073192649 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081622472 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065981855 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07029425 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067591714 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070404434 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067392977 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068118441 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065652736 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067869705 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074471751 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074329041 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06568886 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070059648 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074231286 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07016599 seconds)
  done (took 2.453006594 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073357732 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070952553 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078148317 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064779019 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063124992 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061948907 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064542922 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060582808 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061464611 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076376984 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06498631 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067093486 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064873208 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06335163 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061751239 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067299475 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061637837 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062244166 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064564554 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077089609 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075318242 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063713868 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065095852 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064580068 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064688833 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069929848 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064321926 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062703699 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062261102 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064729857 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065041052 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068549429 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062182872 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062502693 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06332505 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062138975 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064851992 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065189451 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067351719 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06468802 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062652432 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064443419 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064331591 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065284281 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060904433 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064910958 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061042936 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066432366 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062418712 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064554054 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064609548 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067127505 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064897891 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07059844 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067298138 seconds)
  done (took 4.93093412 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078176937 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068924044 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060707376 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0631896 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067891399 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066259907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068160821 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066180183 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066455179 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062880883 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066483818 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067344722 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06656215 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06815367 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066355394 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068170059 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060852792 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066248184 seconds)
  done (took 2.537680689 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07008412 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065059029 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071975079 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065442588 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064857234 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06708335 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061407282 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063397644 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063351949 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064585026 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064782174 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066821763 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063414386 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067407405 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064508246 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064753176 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067178624 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063329297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064460829 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060764212 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067391032 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06341572 seconds)
  done (took 2.767446261 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071571985 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090646577 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136603164 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082023468 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.079512292 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077585573 seconds)
  done (took 1.870924696 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088966649 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077976483 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065713547 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086475526 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071719712 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066960796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066182773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066576244 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074347523 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074780995 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066170599 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074484702 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074240128 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073916833 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071406272 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071430516 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066156837 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065710586 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064819627 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081794229 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066053716 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074446847 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06620833 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065893248 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066072586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073199893 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073783811 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074448093 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065674981 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074481645 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071490733 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065923393 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074176683 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074344077 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067652041 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074525937 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066038284 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081968188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071184071 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073666967 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067831592 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071977452 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074340917 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070753863 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074220534 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066354378 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071272598 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066112259 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066240505 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084051415 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071831606 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073282866 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071732312 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074459949 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074041223 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084404354 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07475633 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073627036 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071778087 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077503616 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073758448 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071564074 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073476115 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074535731 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071776189 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073680596 seconds)
  done (took 6.108160837 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079941935 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084303351 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067051912 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074734622 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073574508 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066227305 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06607255 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066180409 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065925881 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065957942 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105366571 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066381519 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073777944 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073750703 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066175275 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0660858 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065781622 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073447765 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065935269 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084298741 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065892499 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07332494 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073770435 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073104577 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074374911 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071788415 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066034879 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065927227 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065751326 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065842567 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070714798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066222932 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073489045 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065509206 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073341416 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066295062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066040848 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070630708 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066231043 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071405707 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073697008 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081906882 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066290454 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066324159 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074808471 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065701142 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066428271 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06611881 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0660393 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065604438 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074744661 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074124672 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074566373 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073263966 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066450818 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066048711 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0662615 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066563973 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066683726 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071683355 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073475881 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066224692 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084149675 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066410705 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066514343 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074148209 seconds)
  done (took 6.015069968 seconds)
done (took 126.817747094 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181827576 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167678908 seconds)
  done (took 1.681859507 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.066882569 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094422444 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075719849 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127728688 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06544979 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098288514 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097158293 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076515383 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065099784 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065067362 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065398637 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066494688 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129290868 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065173043 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06497934 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066853481 seconds)
  done (took 2.634918269 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095787651 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170974579 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098107377 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063604778 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095379429 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071558462 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063360359 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073446661 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069710495 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.063951865 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071737926 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069307928 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064234942 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069239361 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069559399 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071800993 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063705181 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071227281 seconds)
  done (took 2.764209984 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.0978921 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08892491 seconds)
  done (took 1.53210272 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153652821 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103455078 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148389718 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330721703 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158238664 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.227132873 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125473987 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124129268 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120050972 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120629079 seconds)
  done (took 2.953374581 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096797714 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.144933038 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.252753197 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113292828 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071231882 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.089072421 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114686205 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076466055 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076155725 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.075692239 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.075948335 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074823088 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094540764 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072250668 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072483008 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074966853 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097678226 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071372668 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074715873 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072666023 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095107311 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065186196 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072195942 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071525335 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073192705 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073135748 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06493112 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06481254 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072738439 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072634012 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075495249 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088307416 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073220251 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102493782 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068840464 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103638084 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074902613 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070299676 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07258649 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069969572 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074490158 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074346659 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070960459 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074500752 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064899577 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075033628 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064594821 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064533929 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076459072 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065494201 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076715216 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075390251 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102983672 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065776231 seconds)
  done (took 5.81354595 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.657731958 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101426779 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068806671 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106671093 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094503287 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071151305 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.681856662 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.08856089 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171862389 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090662746 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086580896 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068844257 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07933553 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081429015 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107256028 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099780826 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091866422 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070265355 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.098785252 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.096691822 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066613438 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091606032 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088310308 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373097304 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065819263 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067953088 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066592057 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068232759 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.10788453 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07649149 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068673241 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.118585801 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082582429 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.118136061 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065479716 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066523033 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066769566 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077703476 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175935101 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130323866 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.127758506 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065560506 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06655098 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067518056 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087883688 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065569983 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.107971559 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07884321 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116236253 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068919222 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068672811 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066950187 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06765828 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078223242 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075485077 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07910771 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227466736 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066732463 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067018142 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069754468 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178115395 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077461276 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077930449 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090011254 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.126433947 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066234365 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.692682721 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082616268 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066817494 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067707238 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066094778 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067602733 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066768939 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.242852293 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.339743869 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068924405 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06933951 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067582824 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.160803274 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077254001 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067486265 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110651751 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066327819 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06754345 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068592969 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068457038 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.115604053 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078603911 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069040637 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067259125 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069038229 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067280233 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066369436 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.1603265 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078811824 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078305307 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.157556393 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068661216 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109858051 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079071786 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069420638 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077732417 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067420558 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068804921 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068958848 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07746502 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.092968593 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078716746 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068954062 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067125203 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.096507443 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078777592 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06712244 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077366886 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.39407157 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078352746 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066426505 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079735786 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067117232 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109964644 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069032692 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.173989445 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067736352 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077335166 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067568009 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066423117 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066932094 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.108737582 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068909661 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067327306 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067714992 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068485318 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077835461 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.130902371 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069037042 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.15999007 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132002873 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06850399 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117320894 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067174591 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114407625 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068894196 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069520536 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065934223 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.70714389 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067212529 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066828339 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06831866 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134959904 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066385753 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077672493 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075007068 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065292137 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.685778227 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076054943 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073535588 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.209019296 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069571478 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0678302 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067424257 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068835808 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.10788374 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142667553 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069654363 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067023432 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076020757 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.109471541 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066924544 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07733855 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076532926 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077310655 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067647784 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069041761 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078645023 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115710555 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077471832 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.131340608 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.512707857 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067191899 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076129609 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.140550137 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066718129 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084368017 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067293609 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081003585 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110426949 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076152264 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.224707808 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.111488834 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.136915324 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079178686 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08175441 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066401687 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06691073 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078401304 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067169263 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068726045 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076485828 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068574131 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068094992 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082202977 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067389484 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171458428 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066319711 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077747957 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066372304 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068379703 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081941883 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066978661 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068769376 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077573297 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068710203 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07567787 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.635124146 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076359209 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066751921 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068660941 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133131486 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110246486 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066734724 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066399224 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068995928 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.107447506 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.153943104 seconds)
  done (took 27.706890526 seconds)
done (took 46.443652613 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204269291 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147566664 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.197496085 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115634901 seconds)
  done (took 2.108765142 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118989016 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09834405 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093023026 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064264241 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099126374 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063796685 seconds)
  done (took 1.918711952 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301706036 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.204566467 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17721403 seconds)
  done (took 2.061627966 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19166067 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.182592262 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.386832427 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.248760945 seconds)
  done (took 2.494655956 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140518287 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086925021 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065715676 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08188883 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130877341 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.156474968 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09859258 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122341757 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07682116 seconds)
  done (took 2.389986754 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141382241 seconds)
done (took 12.505220932 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093028654 seconds)
    (2/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.087748192 seconds)
    (3/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.110234732 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132030124 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067521776 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.241949156 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078652586 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080042982 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07636863 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.116713256 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072038142 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.165156814 seconds)
    (13/309) benchmarking ("sort", Int8, false)...
    done (took 0.145683048 seconds)
    (14/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.169172838 seconds)
    (15/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.163852891 seconds)
    (16/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.196073784 seconds)
    (17/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074081581 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.144602124 seconds)
    (19/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083996193 seconds)
    (20/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079931252 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090332136 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.11717323 seconds)
    (23/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.180669305 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187341205 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.175203322 seconds)
    (26/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091834233 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.164763899 seconds)
    (28/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175529829 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075316879 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121059637 seconds)
    (31/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.207287002 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051244754 seconds)
    (33/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.143738185 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070263921 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073951735 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098650783 seconds)
    (37/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070083178 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070020777 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091941692 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084423923 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063952656 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130929656 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134665509 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097108528 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070663996 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.169184704 seconds)
    (47/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105218579 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075440646 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092921564 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07644904 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071601689 seconds)
    (52/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068341219 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118508021 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089135507 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149754115 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088291175 seconds)
    (57/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073450032 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110792257 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157066512 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193270819 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09083216 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073997224 seconds)
    (63/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066152896 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066357789 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132865154 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087791039 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07469502 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075319297 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067615209 seconds)
    (70/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.146492194 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.049657549 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.089521716 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.159123341 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094186086 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053344094 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.196872735 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080503007 seconds)
    (78/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.061420155 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065340373 seconds)
    (80/309) benchmarking ("sort", Float64, false)...
    done (took 0.123277301 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.151341081 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.09252902 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.064527396 seconds)
    (84/309) benchmarking ("sort", BigInt, false)...
    done (took 0.32740529 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073831917 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050900609 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071528845 seconds)
    (88/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104566858 seconds)
    (89/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088718416 seconds)
    (90/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156302987 seconds)
    (91/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077188328 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075339397 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076904941 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.177977307 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.132915253 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052183401 seconds)
    (97/309) benchmarking ("sort", Float32, false)...
    done (took 0.126608886 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075290333 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05163845 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06277355 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089690292 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.135582302 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.136467251 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071980495 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175130158 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051690699 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066962087 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085272799 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105196069 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072618969 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144895384 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.170178547 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072366456 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071257446 seconds)
    (115/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063771296 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114453716 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093968771 seconds)
    (118/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052078748 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071862171 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107343636 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.361022117 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071426505 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074524438 seconds)
    (124/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.099156667 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.137076328 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070246952 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052806068 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.133262967 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072778383 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072161307 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063957302 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070758257 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088498346 seconds)
    (134/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117513634 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095226196 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085631089 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069671718 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07066846 seconds)
    (139/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079172927 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132072163 seconds)
    (141/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07116602 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064094351 seconds)
    (143/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067498702 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070320682 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091090347 seconds)
    (146/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050597438 seconds)
    (147/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064855454 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06403512 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071484503 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063796153 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063928309 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093878152 seconds)
    (153/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.166991577 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064399003 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.133979381 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072259086 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07067957 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054083288 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072400158 seconds)
    (160/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069429046 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071258564 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079544058 seconds)
    (163/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071962479 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.074203604 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.060694316 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064156435 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050163115 seconds)
    (168/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.107378539 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050180921 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070003467 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.13649175 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.158432616 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064986962 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06676847 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08759642 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07064824 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.106524063 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063785433 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050299358 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050260029 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050325775 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072181248 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060772917 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.144009475 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064405614 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.1352033 seconds)
    (187/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077216179 seconds)
    (188/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.135878436 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049830484 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063415212 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113466016 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065196276 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062642658 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.122473903 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085222748 seconds)
    (196/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.084633854 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.204755824 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065895491 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064737742 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05148023 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.177478457 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099118377 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.135678467 seconds)
    (204/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106360814 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072762264 seconds)
    (206/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052047354 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050320056 seconds)
    (208/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098327049 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164360574 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071698815 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073876892 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067735741 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050187337 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050305191 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059590776 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.196865564 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050523071 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069314963 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063929054 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087361832 seconds)
    (221/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072152952 seconds)
    (222/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068937914 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05000359 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064357331 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.062984267 seconds)
    (226/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050841782 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.049904573 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051819486 seconds)
    (229/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050649982 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074313691 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136733119 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071466537 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050482681 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050342125 seconds)
    (235/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.098042845 seconds)
    (236/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070503181 seconds)
    (237/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068584353 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11280557 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086448231 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05141755 seconds)
    (241/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070465945 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064589503 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051093966 seconds)
    (244/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066609722 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064370027 seconds)
    (246/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068324524 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06551465 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143333888 seconds)
    (249/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.060742271 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107487498 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051030635 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065268988 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064414932 seconds)
    (254/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084045969 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066072641 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05010443 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050086468 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070705749 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050240332 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049802986 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071471985 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.049803317 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.049959901 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08943339 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062816825 seconds)
    (266/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107315928 seconds)
    (267/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065185576 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.168176437 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13136674 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.050970978 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065350927 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064074925 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051402561 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173109154 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052694564 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050789374 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067260037 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071131321 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116985544 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062641478 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052877106 seconds)
    (282/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070898537 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062445314 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086071481 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068655841 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071404195 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.060862193 seconds)
    (288/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071396517 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073499498 seconds)
    (290/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051818524 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162782391 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069683321 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065698091 seconds)
    (294/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066267239 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077059484 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051456508 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064729108 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165202678 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064246354 seconds)
    (300/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05091151 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065818612 seconds)
    (302/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.050857297 seconds)
    (303/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.050691269 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069415757 seconds)
    (305/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060091171 seconds)
    (306/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.062874967 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06415258 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05277584 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084314837 seconds)
  done (took 29.744024981 seconds)
done (took 31.136808007 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084590386 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092159094 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074373767 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092063653 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080053268 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075923242 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07187486 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077473341 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079162115 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080910529 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077688533 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055052793 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073025758 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073299674 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073841987 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09018841 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077107176 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071917154 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072124731 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06427708 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072231892 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065125883 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066707643 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054365056 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077195307 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070734046 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071353894 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072946222 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065126818 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065309867 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06840498 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072522334 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064930257 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077041484 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071709805 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072167478 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073415465 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075264569 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066769804 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065017898 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073110754 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065113763 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071443216 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072356514 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070876141 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070194267 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072199884 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076618779 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089691563 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067199665 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073696764 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075619778 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075163046 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071784975 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068616318 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072207696 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069805913 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089966014 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072709124 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067073596 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073334187 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073003236 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069911378 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072152304 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072230191 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074203428 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074227849 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070122787 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073624268 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070093112 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064703527 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072231107 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068102501 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064910367 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07486905 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075822959 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063672518 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070352234 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071652335 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070333284 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063792688 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066802719 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066401811 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070522425 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066641362 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054062121 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06808865 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071415978 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063743058 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072413427 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070649296 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071428869 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066369835 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074383544 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064009099 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069671837 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064761971 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064891115 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066345969 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068362439 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064264282 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066650512 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073162725 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065821449 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070511611 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078093963 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064749162 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070750765 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06343223 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063856082 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078004229 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07385009 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064246307 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066501961 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063530459 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070881631 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063185287 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063980502 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063997497 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064583889 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069392443 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063629328 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066162252 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070451454 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075028803 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063197621 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066334039 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065252558 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063527685 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068582839 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06332168 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063187656 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201866178 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061448427 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067262051 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065379743 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072036297 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066905953 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07211569 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066543403 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072643735 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069324688 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070694225 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069610992 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063817812 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057851166 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067658612 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067445725 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067134165 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06526111 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066838014 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06508291 seconds)
done (took 12.306464461 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066408144 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139751771 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096893376 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093685501 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084514777 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066517386 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074913929 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09994025 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066933552 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100603507 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086261819 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08398819 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110522459 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06381878 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065140744 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069086358 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066732985 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080256939 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099541988 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085512931 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107821137 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064643241 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093675017 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088897686 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085967152 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.099999824 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066131638 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069053199 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068429754 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089680656 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085333652 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069212796 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065733872 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098755246 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091072263 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081873109 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065551445 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081213347 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065753971 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065006242 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079797206 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096078224 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078655379 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078701124 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069355109 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068116866 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066426474 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081904244 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087194615 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07742483 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085005578 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101076667 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067646979 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064895424 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064320003 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08418399 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064822959 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068053499 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065270124 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067420823 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065154116 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06813819 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079858265 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085517422 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068889564 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078872046 seconds)
  done (took 6.724865689 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082419903 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089604406 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081971664 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082363503 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064957602 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065595346 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065885069 seconds)
  done (took 2.023617599 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066772148 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086958095 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087589954 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087705865 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083326193 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085954806 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074734657 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066116896 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.07954376 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06721477 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086269808 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100142026 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066683284 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071901049 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090092633 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065728161 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089022475 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065816257 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068789172 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08884535 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067554325 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081493031 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068890026 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066282346 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079567542 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066166575 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111188824 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069861039 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067442951 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069007809 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063711659 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104622653 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078916536 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074775914 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06518654 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080013411 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079791968 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064098376 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081095904 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070161667 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07879205 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06623888 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066952603 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06354735 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069274627 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.0755666 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066478858 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066009619 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067993398 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084814406 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066483914 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079356579 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070240455 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068169114 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067025364 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06958403 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075479458 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066776077 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085503062 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06715828 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082141993 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081494507 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079269477 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081808644 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06808447 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079051318 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079382192 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068438638 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067256307 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069191708 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08118083 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063948797 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067297129 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075949546 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06710638 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08809268 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087624912 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067434631 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074217267 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065780227 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065976222 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065531495 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088016061 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067809352 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065391891 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069762607 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06859789 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064323007 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064801697 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069336589 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064028651 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06766886 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068768926 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068832923 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068495715 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081974274 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068007831 seconds)
  done (took 8.662413862 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068363146 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067025964 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068252139 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066724427 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067452176 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066893695 seconds)
  done (took 1.917276665 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092409308 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.0686551 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078798601 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071728621 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103082035 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085910691 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086362587 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07755259 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08304349 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077737998 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085365475 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087540857 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091958939 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072087102 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085335684 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07131693 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085844769 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074432025 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077282772 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072385418 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08534288 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071876792 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072098882 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080371013 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075042089 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071356082 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066425463 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077803669 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077413574 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077752306 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071526959 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074501276 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069488308 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077362655 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085207371 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.06983084 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070861155 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07628998 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071510175 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075195842 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086570737 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071561057 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073188413 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075828859 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077101622 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069517602 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.0759786 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074798951 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084763313 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076047119 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076067287 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070617165 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074617866 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076301065 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069436913 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077034406 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076333279 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085607927 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071578617 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069936095 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068202871 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074584852 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076975401 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074324778 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077502924 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075886153 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069556539 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071339715 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072125545 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070847673 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075631333 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067931494 seconds)
  done (took 7.005127156 seconds)
done (took 27.810244516 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539464925 seconds)
  done (took 2.021984184 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613130191 seconds)
  done (took 2.119510953 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.385906282 seconds)
  done (took 7.886929647 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388049123 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.500482207 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.704615565 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128353419 seconds)
  done (took 3.266855839 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.668065792 seconds)
  done (took 2.179698128 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208481024 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193249083 seconds)
  done (took 1.926377076 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.36648652 seconds)
  done (took 1.869234344 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.093187583 seconds)
  done (took 2.59636629 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256811712 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161769187 seconds)
  done (took 1.927849653 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456511284 seconds)
  done (took 1.966314023 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.848785658 seconds)
  done (took 6.358979064 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204573231 seconds)
  done (took 1.763492492 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240404291 seconds)
  done (took 1.749854407 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.729647648 seconds)
  done (took 3.239391613 seconds)
done (took 42.385102882 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078612174 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079656348 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079560952 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076352116 seconds)
  done (took 1.811273981 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075576829 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070919403 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075027725 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070770573 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075077701 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07107433 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073211488 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075407071 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070698976 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071449735 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07106095 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071018057 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073344316 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072502963 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069500193 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073643692 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074194439 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070972723 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074004346 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071031204 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069481831 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073626898 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073241745 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070577269 seconds)
  done (took 3.249436499 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076592402 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07163448 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073760046 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070271641 seconds)
  done (took 1.810497294 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075747033 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090816015 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088220979 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075795031 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090133353 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084533092 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067820877 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067640229 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071787392 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075530705 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066919563 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094153743 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086039454 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075258498 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077533415 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064578658 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067135824 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08525807 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075609282 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07624295 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068657721 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075740618 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066719592 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086499837 seconds)
  done (took 3.368024364 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075297154 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100882532 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075524166 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085915159 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088047791 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064280109 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073080647 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087200111 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121104983 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064142563 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068693584 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064308665 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07090082 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064025211 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074976403 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103493502 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106443907 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067103652 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094276325 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06448076 seconds)
  done (took 3.137477814 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071342644 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068447691 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064289492 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067689846 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075930667 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072083399 seconds)
  done (took 1.943578387 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06677524 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065823109 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066098654 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06576088 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070856402 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066321623 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064729879 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065551368 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065730224 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066007769 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065407351 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064664863 seconds)
  done (took 2.31398693 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.330604844 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067428727 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067119403 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065040036 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069292429 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065308878 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078479538 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066753252 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088860299 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065390764 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065378758 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066996283 seconds)
  done (took 2.618825877 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200911393 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074674556 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231447824 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134274695 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109169223 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113038859 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102484567 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110878475 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140168561 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099948125 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163789906 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161269894 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105119293 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133941328 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087305154 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096510895 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151331357 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158784439 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100821023 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16203991 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140328128 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121868214 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143475464 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099133603 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104063015 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119212828 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069460012 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078530453 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1656784 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128335758 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142434545 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108907599 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091397331 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172455577 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167851804 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138882538 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130797686 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082467297 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.099879218 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129523731 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193612361 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086684847 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158029771 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244782545 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079915225 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137322229 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117930737 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117307355 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105767115 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088405778 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143112079 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178792947 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13520242 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086020054 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110446032 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11304964 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113993628 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100195328 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177631732 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157748909 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124423711 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07058562 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096832129 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149192506 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129428351 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106931404 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123456003 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092084981 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130001696 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151149198 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11579595 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138888882 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125995275 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086676186 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116410135 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136675351 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125436646 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166298944 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121772207 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071221377 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12191497 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101508144 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07936331 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140490753 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074529256 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170881476 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09656862 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.103187393 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110463166 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10598417 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106331474 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156451823 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138735879 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243374815 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065173313 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102404913 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118084243 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144425102 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08597424 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106313288 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113750996 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075596799 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136164243 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073689118 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120619849 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.073781222 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123077655 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129890628 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074332028 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118562601 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098400177 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097422589 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129645905 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156074065 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087271348 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080658374 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161747663 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118971465 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101591639 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141253254 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15090907 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.096599266 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100193119 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147455618 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175565492 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087650142 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159063066 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105659949 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082170405 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085728919 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120871983 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109738611 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119425463 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080392766 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115934684 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164678972 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073828262 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093040645 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130812332 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077108799 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078535276 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100672478 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097777395 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092997185 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098208916 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101675675 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135264733 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119747383 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101989015 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267998372 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096909465 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167192535 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087161924 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098204563 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102002385 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06895438 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134666557 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154153294 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078437363 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16052757 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120094322 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102741524 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116272841 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082195788 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136668622 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077211029 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068834883 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141573781 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107975398 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107374107 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146688038 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10230443 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12336915 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116458815 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131652438 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128560204 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125782612 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103282398 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086331931 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109040379 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122582671 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071511313 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089207559 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078407385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101652802 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094113269 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081497792 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138708614 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122110883 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098001735 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109733484 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094560615 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143857439 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074557392 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125891007 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11687828 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09106067 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148098626 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148375394 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128097365 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097452358 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14095905 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068767405 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071768342 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231356077 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121622931 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081964111 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082003338 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114764798 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144467845 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127132667 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135176577 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109228577 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117997364 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151568104 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06861247 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113766448 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144137937 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118454887 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103051647 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088552571 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09704519 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139132215 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106129106 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177003283 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111069359 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123763224 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14994121 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097086101 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078343387 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1011044 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132538459 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102260972 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146406417 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097421079 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086079378 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107716348 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073203074 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097719549 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124303187 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116822279 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132456186 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112955586 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129724334 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075572367 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114444265 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118424838 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120434717 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063033311 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116859071 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156896834 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091934735 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115558049 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149360853 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077637608 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121533102 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318944787 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142993631 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084006513 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107276005 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116871475 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125992333 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118306906 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136857012 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10821882 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132325512 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106934914 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083941396 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085994246 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094950382 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102614061 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09303493 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104875895 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112742618 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093648791 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129170064 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101047839 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10746655 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114883756 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09437568 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087180016 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095376257 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171249808 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11721031 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166242506 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096399957 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141495474 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159697945 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073454183 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077494036 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076807814 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136845795 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08202307 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127799664 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.095749798 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103619741 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121570536 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13871445 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093109361 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066941171 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106466211 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131834517 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110123741 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096918163 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101902652 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158268466 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098089882 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077865968 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111194353 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102369988 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100039732 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311677266 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061241736 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095993785 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075007485 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079915666 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12511251 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148482454 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079383442 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101113711 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116589032 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107224901 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124906474 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099435487 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09758513 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112533582 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1475866 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125535345 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088153884 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109812847 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126401014 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169377005 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103735587 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093551949 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167480007 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148504753 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155442665 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086936886 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111949456 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11161184 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105915737 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135932968 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081393614 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159351961 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080097122 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133263543 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105160748 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087986682 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127019732 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.096719407 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086286158 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1442823 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115462219 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081040564 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075850672 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115791127 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118381087 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104556648 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073858131 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135679566 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071420631 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128491734 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164462264 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079678751 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101659052 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240976859 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078990758 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106519119 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100377528 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087645938 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097137993 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169334872 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086183963 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14660115 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138203632 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11088519 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133782612 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098015913 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.632958014 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076208724 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148117342 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113997642 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169581376 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095405653 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115301977 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107016628 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121232201 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140930531 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102823067 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17441181 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12939309 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113616235 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078092649 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100324065 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100178147 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086773024 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102915171 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111557234 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113608479 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091420829 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113313835 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120073111 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080445257 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093207061 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153190534 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114632529 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141599238 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137898492 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08290008 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11547024 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135054421 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077866363 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11838665 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147990123 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103220389 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095054495 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07733774 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246223004 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165805998 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072237843 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159048492 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118347452 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107587184 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111612008 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111933604 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128137248 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106052148 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118530406 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091512015 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106984874 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111403275 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080842042 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074924454 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103490348 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109869584 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095578596 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097126679 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09628915 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14846784 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070031332 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09367073 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10108397 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14193292 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170658308 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086412054 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081173032 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116713218 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110253304 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11073965 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118308528 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077415609 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080840555 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080083916 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.075833485 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106560212 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110115047 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102044393 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108412108 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159994264 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081317941 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222476481 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092979078 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102288968 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068427467 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076489943 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094053149 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095532736 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106361314 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098724623 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16451241 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092187592 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087633138 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08953177 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071324583 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080309079 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270518885 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108899917 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116849305 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095845881 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06127209 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107097035 seconds)
  done (took 57.675439248 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106437485 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081694993 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09564099 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148200452 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120719909 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210473993 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156068103 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197587475 seconds)
  done (took 2.749676587 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067169964 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093214721 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098253907 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081026548 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065827737 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06681735 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22194406 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078708005 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065174276 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087175315 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077178508 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067149061 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.393098218 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065007841 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066072898 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060315615 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066118438 seconds)
  done (took 3.344766886 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368715332 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.365442523 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.367210139 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072087255 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.650103617 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086870722 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.075166695 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.094939191 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069224514 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.280322568 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705138084 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092167247 seconds)
  done (took 13.859599388 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075479862 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068612673 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083704909 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082581854 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071522294 seconds)
  done (took 2.085057675 seconds)
done (took 101.522342813 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079444498 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.292938744 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052809486 seconds)
  done (took 2.006155611 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082495017 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083858349 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08363557 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081550029 seconds)
  done (took 1.967352109 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073319575 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075864612 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083327204 seconds)
  done (took 1.8636492 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221271679 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138360164 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085902352 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.0817171 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077213835 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078237838 seconds)
  done (took 1.874820175 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070959315 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073971902 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071780751 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075486986 seconds)
  done (took 1.924563543 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075631708 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052228982 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054375641 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055733283 seconds)
  done (took 1.870524534 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085779334 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078620427 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077133254 seconds)
  done (took 1.875323599 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105637727 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084111503 seconds)
  done (took 1.823351117 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080339344 seconds)
  done (took 1.715362553 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097587459 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112866933 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126841922 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108132361 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134924439 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107575552 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084366562 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085404158 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076407236 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085833923 seconds)
  done (took 2.654603907 seconds)
done (took 21.732112853 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077647089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365489506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360233405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089997054 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66715553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356148457 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.017954925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091563607 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119901919 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067048744 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083275843 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647007177 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973325324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323336756 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955584177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321614127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649240378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06766333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067008488 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067359089 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.005330518 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066958216 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067110213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067696581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649207117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370815184 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067494684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321680308 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067010974 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069531866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355216624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0675254 seconds)
  done (took 16.165854804 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070228698 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116705833 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073363254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083314562 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070190867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069135852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070991743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068438508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12461227 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067479062 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083712203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067069903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071168616 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068407133 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086406766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0673916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068317329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06774181 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067525228 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067897727 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085908496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067210036 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067764459 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068056178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067974493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079241644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068106265 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068049843 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068045352 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069965574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070579718 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068256787 seconds)
  done (took 4.027920217 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114309616 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124121857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073516605 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102756537 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111563098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069704348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142547675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091990501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12634848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0674556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084020461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067417917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100189424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068378968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086970154 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068123767 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068641839 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068523278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068062118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068136675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086742181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067852499 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067793834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068438119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068155183 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081124746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067924977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068271376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068127086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069751648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07123312 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068484715 seconds)
  done (took 4.276476637 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071543079 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074740009 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081997679 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083259678 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069047182 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071460843 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072376807 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069198872 seconds)
  done (took 2.247233734 seconds)
done (took 28.356995078 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078223233 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068316654 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071884937 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079943872 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072176503 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078270137 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066589091 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073965164 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071588577 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.0723805 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074057387 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06715284 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070408641 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066621995 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073074307 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067063995 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078270626 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071145435 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079489592 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078899336 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06936997 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072714506 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073415088 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078587026 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078440747 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078813867 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076559309 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072058451 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068453406 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069880092 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075990895 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083028819 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068341378 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078368364 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067005067 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067380062 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071082574 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067491411 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078331178 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075595994 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068940129 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075413974 seconds)
  done (took 4.706363551 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087532862 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090436547 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083793182 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060902531 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066215954 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064216314 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088211857 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059066504 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059541639 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08726321 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05541911 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059001444 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061822118 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053598315 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059204843 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056221558 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061240483 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055715913 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059085596 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058918054 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057869107 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053828331 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059518098 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064731891 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056175358 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061271368 seconds)
  done (took 3.339588637 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073784879 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08389185 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087654424 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126389523 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102764617 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076759002 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07723216 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086741902 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084905242 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066616723 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070330012 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092889496 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087600514 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073059897 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067331923 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083430125 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081446268 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068662547 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072573834 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08999228 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083424889 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.076609812 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091766276 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.07999896 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066025598 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068552679 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070285409 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080326293 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071420258 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075553916 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070386929 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0700461 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068824229 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078037154 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070251033 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068268927 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08876144 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076304162 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077369414 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067341081 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070277283 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06807703 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088853431 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122042913 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066446343 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073514369 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074732975 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076175635 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066820173 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085532574 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07784229 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066678076 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070328027 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066059242 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067070566 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079631935 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068852787 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069388406 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07598221 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070336355 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079739817 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071489731 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082436516 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066719245 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074537011 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066533956 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068047886 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066435646 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09206839 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068576937 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.119353943 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068156449 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068098558 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075732233 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074751422 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073390579 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067433043 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082354304 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077345733 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070693807 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075656954 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070322703 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069726772 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087480627 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069135561 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068360149 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067787832 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072960094 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069771668 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068212042 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079719546 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066993484 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070075211 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083083533 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066321507 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068133405 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072753924 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071252305 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066718819 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078192148 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071884297 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067693503 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076241022 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067007291 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069794278 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077507886 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073083586 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06610426 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071555389 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073010812 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067882381 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068849141 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069610875 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068759156 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076146345 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073632731 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071568555 seconds)
  done (took 10.486402011 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158780845 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15214388 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069938125 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143008927 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075916783 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078259098 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146076298 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093883634 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067330812 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06799428 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068259495 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113761864 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10492535 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12101852 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077901049 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067049915 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082419808 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115796374 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147699665 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141808675 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082726793 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076389476 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069652856 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06876483 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07383218 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081497563 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089792185 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076190305 seconds)
  done (took 4.409969394 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079674736 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099926712 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073918651 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089405079 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090395272 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06726242 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069881869 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068945893 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080299491 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077882114 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067189976 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072996786 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07427686 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073336421 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068263987 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074072374 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074616764 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069102166 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070531547 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072696579 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077120619 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080141976 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071351641 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066551799 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073324151 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066578193 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063781472 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083726786 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067957546 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089587692 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065135999 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074445027 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081037483 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068165211 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066916403 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06741781 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067060115 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067111978 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068957306 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065756415 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065663592 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057257633 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06642604 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078349346 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073193571 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056105345 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072537889 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07197529 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072120527 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064947458 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069860138 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.06979631 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070257167 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074295217 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072170453 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072315632 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06837154 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065490543 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074682841 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066995866 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06442785 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065604082 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071626359 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065166024 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075083755 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071637428 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065898905 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067031958 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06879931 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073260416 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066970164 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070123611 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064895472 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068554382 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071319968 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068695426 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067897549 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065436167 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066796855 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067128708 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055278331 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066982535 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05307819 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070038879 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065344009 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065446224 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066638039 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071632359 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079034457 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068386103 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07257863 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067806057 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065867953 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070131507 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060263176 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.06965234 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082220373 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081734463 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067093891 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064932612 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081217487 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071403318 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066256436 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0557677 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07443072 seconds)
  done (took 9.097693039 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09507955 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087644206 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06916186 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082839678 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090475416 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08622435 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074382955 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076323204 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068820865 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081834217 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072987457 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075998159 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067886263 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076721334 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093553946 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076004478 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069467532 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076318035 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071894916 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100597287 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082139078 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081298114 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074120385 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067543354 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075145554 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079487618 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089554735 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079373367 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078188934 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074963988 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079940573 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089195873 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073650444 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071585233 seconds)
  done (took 4.392832217 seconds)
done (took 38.079250435 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.734559387 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.916139214 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.730622091 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.09910873 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.811979383 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.854266022 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.799272074 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.742912906 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.889606579 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.776621404 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.966303034 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.766456877 seconds)
done (took 64.7570089 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.754256234 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.866149207 seconds)
    (2/2) benchmarking "String"...
    done (took 1.998608707 seconds)
  done (took 5.534188397 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.056847665 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.253074874 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.971415552 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.724433875 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.731269983 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.033298222 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.540477061 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.25728095 seconds)
  done (took 30.18122916 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.104246326 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.945163677 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.486631698 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.534680671 seconds)
  done (took 15.802578509 seconds)
done (took 63.093769454 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.741895613 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.756067491 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.732928464 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.710246725 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.784952404 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.735306003 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.129574204 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.807593367 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.726369915 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.713098704 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.72799562 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.172955262 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.740250511 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.339961195 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.725926773 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.737469042 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.778814498 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.277918877 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.882006898 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.737545675 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.728050187 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.895171687 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.725490519 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.738929907 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.733405966 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.729866033 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.177665749 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.729803528 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.34869796 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.732470615 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.757538633 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.753912399 seconds)
  done (took 202.679598798 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.726219621 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.658995551 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.754686048 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.742275575 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.107957232 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.922812362 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.861891248 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.196344564 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.730647436 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.730772381 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.878794693 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.72975594 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.914689533 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.752826937 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.735301007 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.818885619 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.902469579 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.932555471 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.730806554 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.001121107 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.736446876 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.755445433 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.713536899 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.865739847 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.742389173 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.747436323 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.755470092 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.744812385 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.919082034 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.87199726 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.756827914 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.755969334 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.923301778 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.601100103 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.734897043 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.748594206 seconds)
  done (took 167.87429324 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.131779846 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.729024382 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.728352691 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.728517313 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.733986639 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.728499154 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.852371642 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.85336648 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.18651185 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.885907604 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.728564822 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.776175272 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.56057423 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.727374464 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.795747978 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.740419718 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.728989135 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.728424629 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.743555651 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.75365385 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729612434 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.729527536 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.855890597 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.740872568 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.911925425 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.736897005 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.730447418 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734734884 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.098858047 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.730627003 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736118609 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.973314164 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.736163206 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.729163032 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.630118755 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.435652992 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822171753 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.730822373 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735205537 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.730907826 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.950017274 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.730627204 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.730434694 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.733667016 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907437327 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.730574442 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.856757656 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.730379438 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.234831694 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.730473503 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.730699127 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.47769951 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.41640698 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.730589894 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.729404409 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.732907642 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.730586494 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.730949785 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.736450247 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.486662019 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.984793945 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.731968335 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.734769396 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.744411613 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.731986559 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.86569686 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.731057324 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.953088404 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.787844622 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.839888976 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.874552935 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.731241927 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798525878 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.826276209 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.731584595 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.730874153 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.730811093 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.732503104 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.731320617 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.813438286 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.733455953 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.88768061 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73998393 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.732876856 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.783003349 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.80152579 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.731953703 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.640854643 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.732879995 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.731865754 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.050331425 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.732039694 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.798165283 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.732623421 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.730944317 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.73256078 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.865066831 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.857788572 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.518447538 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.732992141 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.614967442 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.733860431 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.874941138 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.855015436 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.92245888 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.734407242 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815214615 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.737735937 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.735962601 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.733389995 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764668909 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.733319153 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.790613262 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.734909482 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.103176497 seconds)
  done (took 397.450723257 seconds)
done (took 771.870358997 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.416517173 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.384869769 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.498460202 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.411372967 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.382914599 seconds)
  done (took 13.771952665 seconds)
done (took 15.449956129 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.827901943 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.825415212 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.758401577 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.823952245 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.755874785 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.823436019 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.804568978 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.760052355 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.790744524 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.759747063 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.792161248 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.759191742 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.746193296 seconds)
  done (took 24.905862535 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.97554006 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.978490729 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.808404243 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.967270433 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.783562786 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.975451054 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.901066531 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.887124322 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.89425624 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.750902932 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.748403594 seconds)
  done (took 22.350147701 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.975569808 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.976068043 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.811247035 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.975205294 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.785289767 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.985990105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.902433793 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.890652446 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.890154866 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.751169166 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.748985653 seconds)
  done (took 22.37178786 seconds)
done (took 71.305190818 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.745001323 seconds)
  done (took 3.424370341 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.767446277 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.905067428 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.750204602 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.748876392 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.744927356 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.745606734 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.749330421 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.74380854 seconds)
  done (took 15.837156265 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.740952582 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.744375281 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.741254672 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.741637366 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.744845848 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.744817278 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.741026842 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.744437789 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.741964936 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.742342045 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.744371824 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.743988303 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.742035419 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.743623939 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.744970925 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.741713419 seconds)
  done (took 29.570188629 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.743836573 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.741649476 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.74185888 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.742887322 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.742383479 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.741784747 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.74380963 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.742162653 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.742287475 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.742632491 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.74294733 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.742424613 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.742763676 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.742666194 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.74231876 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.743894119 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.742663262 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.742881435 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.747623041 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.743361519 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.743791329 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.742778627 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.743812129 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.743268045 seconds)
  done (took 43.516428365 seconds)
done (took 94.028278735 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.513318728 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.279248815 seconds)
  done (took 8.474237359 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.748246256 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.745450962 seconds)
  done (took 5.220825679 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.746968678 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.746433817 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.745867524 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.747197875 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.746649095 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.747813651 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.745959948 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.74627706 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.745947787 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.745771491 seconds)
  done (took 19.147426687 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.746145629 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.746898672 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.743211021 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.746632208 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.746401618 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.744103899 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.74635576 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.74698251 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.746953024 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.744531772 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.746798908 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.745384986 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.747390186 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.744483981 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.746950743 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.744806473 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.744914679 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.744183453 seconds)
  done (took 33.106456369 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.746320931 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.746516574 seconds)
  done (took 5.176520529 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.744810112 seconds)
    (2/7) benchmarking "second"...
    done (took 1.745360211 seconds)
    (3/7) benchmarking "month"...
    done (took 1.744871889 seconds)
    (4/7) benchmarking "year"...
    done (took 1.744625231 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.744143226 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.744656433 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.745182205 seconds)
  done (took 13.897124358 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.74839044 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.904166418 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.974668091 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.427252965 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.749567834 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.751138838 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.681481261 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.751280273 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.752623364 seconds)
  done (took 19.424755365 seconds)
done (took 106.128975334 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.571181958 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.744293928 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.124110847 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.81011183 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.796037602 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.041330008 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.781938345 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.958220493 seconds)
done (took 42.511137843 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.765988794 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.220294772 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.231151587 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.845985557 seconds)
  done (took 11.982940282 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.729391612 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.277839206 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.789652641 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.33731112 seconds)
  done (took 19.84564665 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.114453512 seconds)
    (2/2) benchmarking "read"...
    done (took 2.11358306 seconds)
  done (took 5.919399722 seconds)
done (took 46.199832298 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749666066 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.749511608 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.749457074 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.747234136 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.750274116 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.747687083 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.747330181 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.746947234 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.74928956 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.749907981 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.749955551 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.749861127 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.750106274 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749594484 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747594372 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746635899 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751590835 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.747449882 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747796555 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.747513752 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750097201 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.74783568 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.747639701 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.747566575 seconds)
  done (took 43.65492524 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.749870711 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.748347099 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.750717539 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.751859106 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.748546348 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.750313114 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.75125238 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.747468142 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.750409101 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.75022182 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748545877 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.748699908 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.750496087 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.748128671 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750508169 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.749139813 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.750963475 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748376114 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750947049 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.748876402 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.750778351 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748970514 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.749221942 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751345487 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.748150204 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748798777 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.751747829 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.749758146 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751181563 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.749250739 seconds)
  done (took 54.181190827 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.757022995 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.759490295 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.752695053 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.753330922 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.752408796 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.752985312 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.751498861 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.75273838 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.752482753 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.753075273 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.753131458 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.752770251 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.75293653 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.752503023 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.75239598 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.75262043 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.752815472 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.752034743 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.752867356 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.752799782 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.752651099 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.752684121 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.752421648 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.755672663 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.756380424 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.755609456 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.755461781 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.755946031 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.756183746 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.757174875 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.756107827 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.756387065 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.755526569 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.755856261 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.756313693 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.756658166 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.76129865 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.764756909 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.757928008 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.756631167 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.756903542 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.756179694 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.756346906 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.757484052 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.756801267 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.756899343 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.756863837 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.756587251 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.75683491 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.756940028 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.757117463 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.756674761 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.757242061 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.757831599 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.757943753 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.757227628 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.756595558 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.757308649 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.757067561 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.757173757 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.758050678 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.758563589 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.75772491 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.758443383 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.759919658 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.757363955 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.758369222 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.758106014 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.758316276 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.75946664 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.759001232 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.758864675 seconds)
  done (took 128.12608607 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.757858857 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.755508659 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.754863205 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.756052017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755239546 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.759370755 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.756075314 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758401799 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755462539 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.758490219 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758938079 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.756940899 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756486573 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.759341206 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.758872693 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.755638389 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.759008806 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756323074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.759272226 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.75933326 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759305668 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.756254726 seconds)
  done (took 40.358617655 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759001148 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.759331945 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.75684426 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.759094263 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.756902388 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759499828 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.759512324 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.760340991 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760101883 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756397785 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757333475 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759501854 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.756867147 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756637814 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757720792 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.756587075 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760195016 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.757377306 seconds)
  done (took 33.345466577 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.758177703 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.75841881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.760769086 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.757417236 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.75837392 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.761336212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758042833 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.761215639 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.760835113 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.758375444 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.760805944 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761736584 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.761552131 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757750548 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760541751 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.75850795 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.761071633 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758072155 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760610256 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759199569 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.758542145 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.761621967 seconds)
  done (took 40.410281095 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760742421 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.7609695 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.75900768 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.759326332 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.758984287 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.761214218 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.76179275 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.758474672 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.761762309 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.761241915 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759316838 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.761630071 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.759867102 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.760726883 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.759068745 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759290905 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.761973342 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.760762015 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761977844 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.759222352 seconds)
  done (took 36.905606197 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.76348438 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.762950774 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.764399561 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.762603716 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76289047 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.76425882 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763472784 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.763337484 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763206531 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.764308683 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.764766454 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.764215788 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76514961 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.764586975 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76515441 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.765017449 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.764980496 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.764160489 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.764975701 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763491364 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.764232375 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.764109801 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.764507196 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.763777072 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.764435574 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.764990919 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76506884 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.765078473 seconds)
  done (took 51.097384662 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763993616 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.763706768 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.761566772 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.761455151 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.763605276 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.760802919 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.761597183 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.76182203 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.764277316 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.761618739 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.763404397 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.76392031 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.764195051 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.764635395 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.763666352 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.764196933 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764637818 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.761770871 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762543267 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76216053 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.765474555 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764889395 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.765128756 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.762303526 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762873515 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.764779538 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762561419 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.761913305 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764949962 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.76312912 seconds)
  done (took 54.598333638 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.783573488 seconds)
    (2/2) benchmarking "in"...
    done (took 1.784390833 seconds)
  done (took 5.268722537 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.762658421 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765229766 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.765755007 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.763842359 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.76291896 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.765849842 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.766233306 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763734195 seconds)
  done (took 15.818072987 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.765988675 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.765990205 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.766337878 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.766617848 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.768345713 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.767808184 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.77469069 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.767093558 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.769394282 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.768568577 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.774203868 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.776312275 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.771839036 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769277005 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.767779282 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.769271526 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.768093416 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.767363135 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.767662044 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.766811711 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.767728463 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.76968731 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.770198923 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.764805798 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.76944178 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.780128503 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.774504197 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.76718351 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768387432 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.774027629 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.768813587 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.765297196 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.767712111 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.767818449 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.767733601 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.769105069 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778518661 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769005746 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.776718638 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.768916122 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768637039 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.765164643 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.770015173 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.771993384 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.76988806 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.769695975 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.768971641 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.765232563 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.768294644 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.771892274 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.773860101 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.76774953 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.765578723 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775197472 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.771794492 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.777779083 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.770748844 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.773124211 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.779014264 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.781420002 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.786301751 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.77810519 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.772429942 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.771014203 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780824069 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.794368072 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778436811 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.766381526 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.767389282 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.769108119 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.779465765 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785936371 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.780492427 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.770348327 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.772348037 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.769776811 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770960091 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7711457 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.778821734 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.773811359 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.770865494 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.770920587 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.78137845 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793512645 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.769711111 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.771351264 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.770891705 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.771380632 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.772277699 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783071942 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.771866688 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.770342015 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.772045361 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.771907204 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.775572753 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.77179844 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.770844708 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773304552 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.768047911 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.771401542 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771814589 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.776039602 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.781626636 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772394279 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.772161835 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.780067639 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.771488826 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772524787 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.782506884 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.771617037 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.772562546 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.772659871 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.780373176 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.770021667 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.775266661 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.781872594 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.77353044 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.774456382 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.773752139 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.773382848 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783189909 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.800816469 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.772969039 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.773878957 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.779400719 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.785529307 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773619737 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.778229546 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.772772459 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.770369645 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.770648142 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.775681457 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.773750611 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.775036057 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773611687 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.77506951 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.770472098 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.773136102 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.773816264 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.776068523 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.77602208 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.774625318 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.776271145 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.77815105 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.774402986 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.776255165 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.781839362 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.775435805 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.77654749 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.776376317 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.771220199 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.774761371 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.776836853 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.77440858 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.775545758 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.775346672 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.774106947 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.774724922 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.774558087 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.774375326 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.7744133 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.775824002 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780082369 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.77436657 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.781646045 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.775486703 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.772595065 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.775109366 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.775405936 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.775977662 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.774605852 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.774416612 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.779930433 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.783649246 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.77527332 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.776588402 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.780696085 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.776770831 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77561227 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.776570854 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.781026523 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.784918175 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.777345164 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.785402151 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.776640516 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.777242088 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.776400566 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.777960752 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.775884756 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.776463402 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.780269511 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.783626093 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793455554 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786769434 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.778279764 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.780781608 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.777979026 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.781259826 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.784590485 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.777314818 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.776253207 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777792 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777258176 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.777054576 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.78081787 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.777440526 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.776894923 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.776920474 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.777506394 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.778419604 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.777022937 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.779844099 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.780364018 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.7744403 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.777310548 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777855362 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.777471743 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.775471075 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.778018007 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.777891106 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.777812218 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.778431955 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.789855609 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.775697307 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77978994 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778893887 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.779808228 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.778071637 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.778964591 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.781826912 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.779762276 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788302864 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.780855877 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.780568217 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787707691 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.778876566 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.779339587 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.783142793 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.779313914 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.776605536 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.781264862 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.787411032 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.778960003 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.780094646 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.779534402 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779448564 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.7797677 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.787410255 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.776474833 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.778912136 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.77862119 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.783294606 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.77654621 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.781721961 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.781978924 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.782273073 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783585437 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780254299 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.779005816 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.7824427 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.780403239 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.781253654 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.780111366 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783590013 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.788768061 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.787010151 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.781843821 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.784792941 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.781972173 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.783606662 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.781278555 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.781789085 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.780549187 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797447226 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.790226023 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78953556 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.784108304 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.781517182 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788169958 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.782074661 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.786470214 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782174616 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.78244126 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.781533768 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.780484122 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.778934017 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.783707057 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.781744885 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783346082 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.784141483 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.785894941 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.781479321 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.782014342 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.782869031 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.783163253 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.783165682 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.782445993 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.782680088 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.787285091 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784825028 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.782548055 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.782734307 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79160345 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782594662 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.785312519 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.783000119 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.783589991 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.782366645 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.78592831 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.782301843 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.786937063 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.791066231 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.786677955 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.795467195 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.784267661 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793755785 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.783151168 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.788147629 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.792028663 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.779910597 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.782912342 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.783617126 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.783723652 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79220302 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.784163534 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.785210458 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.788255119 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783984626 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.78461885 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.783988258 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.785544043 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784030968 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.784867993 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794233129 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.785885701 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.788434121 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.788112707 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.782111873 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.785708346 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.784777411 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.785088711 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79168976 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.785125475 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.78668113 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.785582209 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.787294364 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.78602843 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.786205754 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.785391047 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.782869002 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.785693862 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793660558 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.786204432 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.791353639 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.785489923 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.79648253 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787000587 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.793412284 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.786298185 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.78623102 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.785926856 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.785086339 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.789203217 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.785888709 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.78773277 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.785545513 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.788096043 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.789389057 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.787058153 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.791101884 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.786381136 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.786504083 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.786996458 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.796652224 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810824595 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.788272163 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790152584 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.783754308 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.788295191 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.79187277 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.786986162 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.785230861 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.789090125 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797408776 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794201884 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.78890449 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.787832396 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788276812 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.788072369 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.786697805 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.78743627 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.787845798 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.787217775 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.789904537 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.78690484 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793849358 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.788329473 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.789231704 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79018653 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.78805262 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.799814305 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.787385688 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.791086695 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.788405625 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.787654104 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.789774403 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.78843639 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.789966402 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789836828 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.788391453 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.790190766 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.796139605 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.796274544 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.792541075 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.788741881 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.789013437 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.789121322 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.790671085 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78902793 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.789601729 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.789622208 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.791266342 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.789157699 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.79117264 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.788742366 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.788711695 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.789962922 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789017576 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.793006082 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.79683739 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790890209 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.78693422 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.789693616 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789387944 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.789235308 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.791419867 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.801531561 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792655313 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.800829017 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.799004082 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.794100722 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.790940086 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793184811 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.799476483 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.789644006 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.79269696 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.79080929 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.794896058 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.791761286 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.795503262 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.791239323 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.799523904 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.791543507 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.792666192 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801866158 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.79267425 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792439149 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.792728006 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.796510412 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.792719007 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.788222587 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.790941407 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.791217863 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800791989 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.795411551 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.7914864 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.794635159 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.790136946 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.793569758 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796454076 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.791407995 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.792868776 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.789043084 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.792496131 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.792457048 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.791035154 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.788888542 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.791400855 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.792061417 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.795724862 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.799797935 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.788410598 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.794231271 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.793151121 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.793801967 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793013036 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792962869 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.788796493 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.788377061 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.793568658 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.792194378 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.795277063 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.797101844 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.792823941 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.793600961 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.793907169 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.792901384 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80414054 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.809079966 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.802494043 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.789083956 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.792766035 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.793975532 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.7986544 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.793554945 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.794519144 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794970278 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.79750913 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.792939569 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794231281 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.793663116 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.797860056 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811736239 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.793776554 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.79738822 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.79612043 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800733385 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.792876746 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.790998201 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.793228376 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.799577177 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.797721414 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.803078385 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.795287557 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802203576 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795341083 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.795812397 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.797898286 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.797500618 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.8040248 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.798919507 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794851687 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.795978243 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.80043317 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.813456254 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794848849 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80520612 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826785029 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.796447506 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.797744516 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.795743688 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794942486 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.79593558 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.798839045 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.795193724 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.79523787 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.7952413 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.796071241 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.797945762 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803594347 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.796922187 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.794932301 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.795068436 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.797884333 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.799036322 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.793232455 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.795904847 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.79624525 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.796292058 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.796755281 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.797051338 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.79689917 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812703297 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.808504497 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.796368029 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.797780534 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.793416922 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.801952934 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.800540142 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808669799 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.805667862 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.797538871 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.797979007 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.798894037 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798340241 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.794052743 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.798728899 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.797036607 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.798073482 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.794106409 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.812822234 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806185619 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.803309688 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.798810017 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798180658 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.797180632 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.799771932 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798256068 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798421739 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.80052721 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.798536671 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801808119 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.797553863 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.797518001 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.801223021 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.805492356 seconds)
  done (took 1065.456083942 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.795363004 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795728425 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.794512045 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.794586321 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794563423 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794220679 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794948788 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.796796345 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.795090063 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796043623 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.795530461 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795631905 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.796412037 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796190318 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795313713 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.79519194 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796839569 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795950694 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.796227007 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795852387 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.796550188 seconds)
  done (took 39.440688981 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.798394052 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.79656133 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.797162393 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.798859366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796806752 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.799241774 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.797384179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799271508 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.799537249 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796382339 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.799664014 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799959669 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.796647873 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.797189474 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797247009 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799455548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.798951111 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.797046558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.799748981 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.796956128 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799863697 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.797471267 seconds)
  done (took 41.295410112 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.801204806 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.800236808 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.800502045 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.798358652 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.80041027 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.79783039 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.800878764 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.80056856 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.800645476 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.802614771 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.800562433 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.802637165 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.809776638 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.806396837 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.80425748 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.799654101 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.944508358 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.802177814 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.803172921 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.801977645 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.798407005 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.808140539 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.798109108 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.798396542 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.801064876 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.801853662 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.801666588 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.801019753 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.80213812 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.803887686 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.807859577 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.803172505 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.80211558 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.804824613 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.802562947 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.804302975 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.806011923 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.803909886 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.799221976 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.802958219 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.814454446 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.823291757 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.803336883 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.811917197 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.802580526 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.802482924 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.807406784 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.811642417 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.799670658 seconds)
  done (took 90.243592676 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.803364595 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.803160544 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.799512695 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.802964171 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.802663182 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.803114996 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.802926171 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.802928793 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.799808305 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.800527646 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.803014351 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.80070283 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.800861782 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.803564698 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.803667012 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.800988231 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.800491792 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.801506717 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.800935987 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.801915021 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.801280652 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.803573338 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.803203197 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.80143845 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.803664008 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.801438869 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.800848987 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.804839237 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.800933963 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.801044673 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.804423878 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.80366551 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.804535511 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.802214872 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.801022159 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.803341455 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.805115899 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.802194763 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.804537623 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.80301318 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.804696508 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.80499765 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.805548958 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.804646441 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.802599146 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.802233453 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.802883249 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.802788833 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.802729319 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.805736862 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.805585122 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.80402799 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.805759148 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.803785151 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.806106737 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.805298599 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.802753718 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.803572765 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.806329808 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.804022022 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.803612977 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.805056853 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.804414674 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.805589443 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.805839583 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.803441289 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.804000648 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.805840306 seconds)
  done (took 124.360030502 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808274182 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.807168743 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806743323 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807243753 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.807709669 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.807173752 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.80684643 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.807482312 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.80673097 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807119594 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808152778 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.807979057 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.806861339 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.80638789 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.806949362 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.807955845 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.806379434 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807885794 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807792092 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808401458 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.807064977 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.808575575 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.808398861 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.808726632 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.809072476 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.80815715 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.808910525 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.808176969 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80919788 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.808579463 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80889695 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.809804505 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.809080155 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.80858741 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.808695012 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.809201526 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.80900992 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80876832 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.808550925 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.80953766 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.808772822 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808322106 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.808664071 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.808560949 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80904654 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.808562893 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.809605362 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.810054755 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.809395955 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808138656 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.808664568 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.808965415 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808960361 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.809809392 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.809272656 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.808114949 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808701886 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809536748 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808924545 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.809227562 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809041406 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.808996596 seconds)
  done (took 113.863101686 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808830558 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.80951366 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.805396829 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.806292299 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.808826135 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.805360572 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.808716118 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.808694032 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.809196047 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.808498284 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808456107 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806214949 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807176121 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806787243 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.804374641 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805447722 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80452878 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.804371757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807987764 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804178989 seconds)
  done (took 37.883200093 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.804140031 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.806631531 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.805403379 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804146026 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.807442697 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.804510298 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.806429776 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806360686 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803109963 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800271603 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800869756 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.800171746 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797171 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797828646 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.802087411 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.796070509 seconds)
  done (took 30.585163432 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.796497232 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.798228238 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.800866346 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.799091543 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.795439113 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.795049549 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.798547319 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.795647807 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.79577163 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.796818179 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.796130557 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.795936446 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.795756846 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.797373729 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.789254939 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.792166252 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.790238816 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.790112072 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.791599675 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.79362354 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.790292291 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.790556606 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.792463893 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.792724711 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.790646489 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.789587403 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.790552049 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.790052104 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.789630144 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.792434977 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.790731921 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.790316422 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.790606044 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.790952383 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.795132184 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.791862466 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.794201961 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.793325522 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.794151329 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.794128997 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.793576539 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.792271383 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.793272337 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.794202905 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.792226463 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.793654072 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.791996947 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.791523787 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.792174977 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.791445122 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.795492415 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.796275055 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.794692869 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.79612031 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.79439733 seconds)
  done (took 100.378180651 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793825828 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.794600219 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.792681688 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.794242758 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.794162124 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.79170426 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.794503964 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.79206044 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793438552 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.79386208 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.793060734 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.795074232 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.792301802 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.797722949 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793909353 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795094766 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.792087962 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.792317763 seconds)
  done (took 34.016343561 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.795501488 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.792959795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.794374098 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.793550185 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.793030749 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.799207896 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792622158 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.79440471 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795775791 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.79348433 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791984619 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.798996251 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796045399 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.796181968 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.794473547 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793028274 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.797918979 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795496153 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794388331 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792767352 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796165506 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795564464 seconds)
  done (took 41.218370764 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.795927328 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.796192395 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.813774288 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.843492049 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.832633803 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.796363043 seconds)
  done (took 12.61208208 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79514269 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797252468 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793513677 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799024666 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795583659 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792994786 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794218568 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793763355 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797948928 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79738194 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793014353 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796778867 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794760165 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794152234 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798092317 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794986495 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79241635 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792067951 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7931556 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79493225 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793909547 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795131699 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792091809 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792149 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79281209 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792149569 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795683397 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792649789 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791965243 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79479036 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794930383 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795289081 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794880549 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792168034 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795358843 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794708723 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792670267 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795791808 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793798887 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790747064 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.794451595 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795154467 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795114016 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791840759 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794990254 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792729462 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792350994 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792212826 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793617376 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795695138 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794841984 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792414535 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794645246 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79748499 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794476109 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796152844 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792713736 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794108956 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795052214 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794098462 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792049256 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794855986 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792543886 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792932423 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794512014 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793059435 seconds)
  done (took 120.152640766 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79322991 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792966803 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791939628 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794659317 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791720193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79228104 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792140335 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793959494 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793215218 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794258774 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796127243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793174966 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792940697 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793814861 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796717863 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792346729 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793006869 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792625411 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793303633 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795986249 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794726481 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792026207 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792940793 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792873078 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794005026 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797976723 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792082216 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79198047 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791428452 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792451101 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791369678 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795419268 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792243802 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.792720357 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791604727 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792854755 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792320995 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793192366 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792319502 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793970005 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792402953 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795731459 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794418791 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79096727 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792178774 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790987444 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791486296 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791383883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794286916 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790188017 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79148606 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791553624 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79140707 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79489045 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790061002 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790071971 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789588133 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790343847 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790780417 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794581042 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789525251 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789549634 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792284258 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789829382 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789156289 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792270511 seconds)
  done (took 120.044597467 seconds)
done (took 2477.000826319 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.832427438 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.793312131 seconds)
  done (took 15.351938829 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.953785825 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.904049991 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.789212034 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.827660866 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.789036677 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.783145055 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.808192683 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.789378586 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.788469346 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.788634581 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.788201169 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.973613655 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.784996622 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.788941412 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.788235027 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.881057705 seconds)
  done (took 50.957244509 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.789955312 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.7919939 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.802516848 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.793802946 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.791485088 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.802344643 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.823680388 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.794067278 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.824161824 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.813111712 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.861675586 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.801347302 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.790295045 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.839380226 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.803400785 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.806094477 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.890981832 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.865620878 seconds)
  done (took 34.410837923 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.868368173 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.798880382 seconds)
  done (took 10.397838461 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.803049318 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.817660296 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.809979603 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.805659277 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.811981404 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.831448049 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.800352771 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.799307026 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.812512406 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.79723601 seconds)
  done (took 69.815047175 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.793156982 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.787718244 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.787861222 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.785576723 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.778780414 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.783718777 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.786231345 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.782379963 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.470954194 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.82252747 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.794501264 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.791914288 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.785991802 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.788111927 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.783891333 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.81237733 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.950150308 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.78299037 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.783442925 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.791730702 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.788207001 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.836837776 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.798867324 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.786474666 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.817108924 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.473121579 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.795987816 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.792410159 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.906685938 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.783262935 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.785444286 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.786610688 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.787734854 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.163378969 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.069666542 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.78668354 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.795521159 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.79388892 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.782672931 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.897273079 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.786605754 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.791610197 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.778444277 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.047065958 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.88659224 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.828080566 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.19073825 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.789852328 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.785782963 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.816118812 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.788079233 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.786614476 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.800379743 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.299954003 seconds)
  done (took 128.173055187 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.835516238 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.265773361 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934145961 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.781117562 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071264025 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017718202 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.781542967 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.829761613 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.815910358 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031051941 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.95581187 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.899199714 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.782462227 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.779609357 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.780346584 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.778220601 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.926423153 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.850448818 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.78095815 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.781885495 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813557794 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045553071 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.905283207 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.914865937 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.802512515 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.005033802 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.90769279 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.898185939 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.780594383 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.779579785 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.847008107 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.789527728 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.77791053 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.777178014 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.947467639 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.886199138 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.876100312 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.780974255 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.778015675 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.780177947 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.779051357 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00136059 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.887367666 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.91835728 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.028667667 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.008608546 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.780296755 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.780120365 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.780705357 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.972813076 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.995658786 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.034305033 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.909476695 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.783990597 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.115770497 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.778505731 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.833858805 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030090401 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01541164 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.892489183 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828851823 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.783357058 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.779368697 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095667365 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.786319743 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.886999069 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.177818134 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.783016963 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.888198857 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.896819387 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.01505315 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021448254 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.811731179 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.783448298 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.825099497 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.064639066 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.852758464 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032771365 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.786983973 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.782401432 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.873954054 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.785350742 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.957358546 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.098098012 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.047452992 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824474765 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.784202037 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.781308668 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.030277982 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.032946467 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.056066793 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.025852599 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.950647238 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.835879495 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.783182433 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.781521424 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.820914122 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.915290807 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.78467172 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.145169595 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02910248 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.559081202 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.814165156 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.099770504 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.922039239 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.786313744 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.783195233 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.783212345 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.988654178 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.826931643 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.785082483 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.782968232 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.030168458 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.72923027 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.893082671 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.503246288 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.849433476 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.784389479 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049359142 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.787136557 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031164056 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817729746 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097694055 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.321219149 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828994921 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.97942666 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.028032342 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.785510884 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.047547895 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.097051436 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.909628961 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.034000281 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.523331134 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.785667659 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077538705 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.793078326 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.81246145 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.953227982 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.793871449 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963657035 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.789800951 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093415471 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813205802 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954967367 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.078950317 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.06199449 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.830571391 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.838161798 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.811788084 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.919573131 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.786965553 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.754907298 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.970439357 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.891247081 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.786745082 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.380974099 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.78744624 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.93457864 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.084424666 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81120776 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.858623482 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.787346979 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788668891 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88023536 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.813486811 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.383925945 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.78689711 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.955291093 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.769589732 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.224480335 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.7839902 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.095164163 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.996338882 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.786716679 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.78569333 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.588696846 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.785298236 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.937480253 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.942364347 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.468827821 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.791330095 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.002958799 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.7886245 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917566924 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.789651737 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.787676699 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.138099443 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.856106099 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.783339428 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.794382985 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.785056755 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.78587022 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.016715094 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.812316042 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.506062542 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.921931758 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035930722 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.095708935 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.046393817 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.833617124 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.787895887 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047666952 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.837832679 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.851629662 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.785069904 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.807358653 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025854654 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.786576719 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.011982552 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.070652251 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.801261869 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.834037433 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.784752502 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.907459619 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.782482654 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.924155223 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879827404 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.785484331 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.783432008 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.902443838 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.910816216 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.978011833 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.784138031 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.833428862 seconds)
  done (took 935.691055385 seconds)
done (took 1246.522681709 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.784496539 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.785503189 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.770157523 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.781641297 seconds)
  done (took 28.850363191 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.789255693 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.786959995 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.788671474 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.787013154 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.788167875 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.787611099 seconds)
  done (took 12.448507608 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.853155357 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.782333929 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.783735151 seconds)
  done (took 21.141443894 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.855402509 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.192796854 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.891598576 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.226836338 seconds)
  done (took 9.889667381 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.791879813 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.789842675 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.79103389 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.792505342 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.792669726 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.794113172 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.791587189 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.791910962 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.793449978 seconds)
  done (took 17.854204622 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.143937293 seconds)
done (took 96.051551372 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.790822442 seconds)
    (2/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.947169834 seconds)
    (3/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.686728214 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.860890865 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.84569131 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.769160094 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.993282165 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.915419294 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.827399035 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.682445591 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.816349638 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.763708262 seconds)
    (13/309) benchmarking ("sort", Int8, false)...
    done (took 4.814942033 seconds)
    (14/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.071905678 seconds)
    (15/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.134592927 seconds)
    (16/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.256796624 seconds)
    (17/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.813320013 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.051435065 seconds)
    (19/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.696117935 seconds)
    (20/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.344171548 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.810134764 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.911099256 seconds)
    (23/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.079344346 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.787464159 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.2367508 seconds)
    (26/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.876463862 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.154003567 seconds)
    (28/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.006562309 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.789105074 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.870987885 seconds)
    (31/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.132350836 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.058940838 seconds)
    (33/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.964416385 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.915955629 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.880830538 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.14096878 seconds)
    (37/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.928393724 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.00756583 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.028536656 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.802948577 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.877871542 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.893391057 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.783253028 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.78549881 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.13817469 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.148941925 seconds)
    (47/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.959698777 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.789442445 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.873779357 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.807563911 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.89498013 seconds)
    (52/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.865100303 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.771471786 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.054393718 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.805101843 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.691798501 seconds)
    (57/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.792717232 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.872789322 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.402754007 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.292645297 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.47687977 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.865581569 seconds)
    (63/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.994787848 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.842084708 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.884725762 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.564351753 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.80329975 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.893605561 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.847752188 seconds)
    (70/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.758778094 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.164237 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.807394872 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.078813655 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.778053187 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.778495106 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.513565139 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.639136694 seconds)
    (78/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.95797353 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.415321032 seconds)
    (80/309) benchmarking ("sort", Float64, false)...
    done (took 5.705301508 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.662502635 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.111279975 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.498601311 seconds)
    (84/309) benchmarking ("sort", BigInt, false)...
    done (took 6.786460194 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.915148147 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.96628726 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.889866178 seconds)
    (88/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.955170297 seconds)
    (89/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.820508594 seconds)
    (90/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.88933112 seconds)
    (91/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.455821068 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.790113334 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 4.432381844 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.785900096 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.020375304 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.22108923 seconds)
    (97/309) benchmarking ("sort", Float32, false)...
    done (took 5.569047683 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.793036655 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.794409477 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.243436608 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.963529813 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.125851689 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.091800428 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.815607505 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.788956992 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.029191529 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.791088405 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.863612908 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.00036347 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.821384656 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.78849355 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.776438528 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.884865045 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.026241623 seconds)
    (115/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.774246187 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.253331764 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.19472639 seconds)
    (118/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.294954756 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.081827547 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.775842929 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 8.677873797 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.145589098 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.928302802 seconds)
    (124/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.924187593 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.074312442 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.19800595 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.776070291 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.322345718 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.816748283 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.81569997 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.108984285 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.049384551 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.58992469 seconds)
    (134/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.798841635 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.382401093 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.779361815 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.018711596 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.054220619 seconds)
    (139/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.298575228 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.796348571 seconds)
    (141/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.880127963 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.117561638 seconds)
    (143/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.860171169 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.919852701 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.839968064 seconds)
    (146/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.775116897 seconds)
    (147/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.848731774 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.040472356 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.819861373 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.058510773 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.164765446 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.843989579 seconds)
    (153/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.137112088 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.197226853 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.987091568 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.822282122 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.934539904 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.780879109 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.712023491 seconds)
    (160/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.90596798 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.83132314 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.655697691 seconds)
    (163/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.811977626 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.08042152 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.99365442 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.167849611 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.865427958 seconds)
    (168/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.938631779 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.676962126 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.879100364 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.86848831 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.101827063 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.798736619 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.200505295 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.071575949 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.82194827 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.080743993 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.960404328 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.962415377 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.858753104 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.400149555 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.835813372 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.035524024 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.001153198 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.877857971 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.307922167 seconds)
    (187/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.315123427 seconds)
    (188/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.184658307 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.098539183 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.098776702 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.782070913 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.935295416 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.850618546 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.901131549 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.793981886 seconds)
    (196/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 4.050394333 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.187001591 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.906327994 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.208717766 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.784477283 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.980040304 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.885399288 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.973354231 seconds)
    (204/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.307131323 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.878592777 seconds)
    (206/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.20116478 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.904319362 seconds)
    (208/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.133974069 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.750459829 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.001380148 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.554690385 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.580398338 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.087765271 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.171198346 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.970555617 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.665588157 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.057863897 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.820494968 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.013117008 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.447071623 seconds)
    (221/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.816781712 seconds)
    (222/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.387503888 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.894728066 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.451806725 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.836262613 seconds)
    (226/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.941057616 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.100511575 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.404750148 seconds)
    (229/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.231980094 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.885013096 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.796648691 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.829224887 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.87633962 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.89686484 seconds)
    (235/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.937455724 seconds)
    (236/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.830805428 seconds)
    (237/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.900741901 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.326841425 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.806407774 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.326531778 seconds)
    (241/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.917872289 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.14731822 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.14619734 seconds)
    (244/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.948582724 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.03535991 seconds)
    (246/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.404529922 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.799283641 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.847348307 seconds)
    (249/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.055396386 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.171212759 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.515311397 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.88448969 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.894322887 seconds)
    (254/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.819796021 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.798997374 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.480776289 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.98476283 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.828525107 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.96822137 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.012017322 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.189226467 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.988581005 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.002299006 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.446913007 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.890966067 seconds)
    (266/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.080098657 seconds)
    (267/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.885054228 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.799696044 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.803203023 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.929975898 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.80087801 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.204101737 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.787428823 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.868014229 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.786071096 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.939408085 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.865932351 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.881904483 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.823089252 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.880471356 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.784239564 seconds)
    (282/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.897876605 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.916550295 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.061544907 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.820413991 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.961791862 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.088961045 seconds)
    (288/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.828016069 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.847383694 seconds)
    (290/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.689074077 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.799447253 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.843856919 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.797919297 seconds)
    (294/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.444575274 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.486669958 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.790346455 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.033162121 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.804717307 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.10269639 seconds)
    (300/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.949944816 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.913468017 seconds)
    (302/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.944318074 seconds)
    (303/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.025407221 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.823606743 seconds)
    (305/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.305857638 seconds)
    (306/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.898186978 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.451441663 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.785039393 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.042890845 seconds)
  done (took 1003.133707989 seconds)
done (took 1004.873640445 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.838339819 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827610719 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.811760679 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.832795498 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.923288197 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.842672601 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.823043502 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.814409276 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.859088483 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.861494116 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.813530957 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.840033596 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.812831823 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.812890654 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.811577152 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.825456745 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.122518828 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.840964353 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.828560316 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.821042609 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.828382428 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.81250862 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.862625639 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.840043347 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.815230875 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.815363466 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.815989345 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.831899347 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.923968824 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.816044852 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.81608538 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.823992769 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.119914681 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.840228271 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.807850698 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.833051663 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.823686829 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.822146233 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.816748178 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.845256846 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.262522575 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.818796646 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.815308585 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.813959861 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.814096126 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.817820746 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.814656643 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.819423186 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826813661 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827905812 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.259136597 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.835517439 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.816842921 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.815624892 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.825475042 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.813607793 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.818610118 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830566688 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.834554932 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831953041 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.112225029 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.846536822 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.816880661 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.831916329 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.823447966 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.295538034 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.816914578 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.81958911 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.263546171 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.827388045 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.295987334 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.82977548 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.816251054 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.829677558 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.848236321 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.122593515 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.837181814 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.81404766 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.823081023 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.813439099 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.824220577 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.82893107 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.821009688 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.816778188 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829916709 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.844607072 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.826184186 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.817323967 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.824553347 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.835335841 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.823643224 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.826589168 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.819781005 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.811657902 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.825266631 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.821225447 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.823502869 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.822206716 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.822088393 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.827047264 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.262831612 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.840399212 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.813047612 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.812325619 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.815419281 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.83087244 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.264893446 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.82310286 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.838738852 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.863889345 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.819227764 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.113507921 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.850168829 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832978368 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.826241723 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.81936456 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.812880386 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.11391794 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.290255988 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.83753299 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.820181971 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.815696504 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.833594572 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.81989637 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.814082767 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.125605561 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.846978802 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.832958454 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.938963058 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.829300053 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.8499441 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.815670166 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.821054086 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.847430128 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834590503 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.850605798 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.821601087 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834185638 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.835533639 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.81569899 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.830083037 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.829236371 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.819636668 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.82650897 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.8136982 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.846376431 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83172068 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.832446225 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.840612486 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.9401769 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.817008482 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.116468813 seconds)
done (took 285.746574843 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.88818252 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.807612617 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.91408013 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.815720018 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.900868961 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.903488858 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.812191361 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.812826146 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.813047136 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.19482577 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.813871389 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.823704432 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.816301056 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.814065367 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.900076305 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.815792615 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.813996553 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.159133674 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.818069337 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.88750903 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.816649413 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.814911726 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.816303432 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.198554171 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.813481796 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.81494456 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.888997375 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.816403086 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.165268455 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.817041301 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.812315527 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.163640946 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.907193012 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.835423564 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.827073313 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.824638559 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.903555135 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.822378187 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.901181117 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.900575157 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.917630901 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.858485824 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.815428753 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.815385746 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.820346835 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.819742915 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.81599756 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.845558082 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.814462385 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.815023414 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.160329743 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.82722021 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.824708908 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.814719675 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.816084046 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.840239643 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.815333957 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.819500203 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.910600751 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.821336167 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.882265285 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.201041264 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.198240243 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.817774752 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.81818892 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.815804032 seconds)
  done (took 180.858033129 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.886409781 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.892402422 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.886422403 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.821596876 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.866890006 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.891434542 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.822226951 seconds)
  done (took 14.817899084 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.825736156 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.819107255 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.868074545 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.86971849 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.820346822 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.969006536 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819175247 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.831455785 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.818488092 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.871704655 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.820039816 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.818766953 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.825570444 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.813648655 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.868532131 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.832322305 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.935570598 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.820468685 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.821155661 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.978439658 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818865115 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.82658902 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.875518146 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.83231638 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.820458919 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.826349179 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.406430434 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.822048432 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818478508 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.821180764 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.818536563 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.859904889 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.820902926 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.812414056 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818371334 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.936873247 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.82059378 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.817817394 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.820721417 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.819914883 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.819830983 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.820109465 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.821200827 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.819709603 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.821157159 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.845212527 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.820927137 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.820967503 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.821309934 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.822243956 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.871587886 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.822035735 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.818828628 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.818815178 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.878584474 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82778188 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.822780056 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.81830457 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.82239293 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.818339317 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.979190459 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.870041034 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.82149242 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.870449578 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822213796 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.822832333 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.822083305 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.821959984 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.877268655 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.822985664 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.870624775 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.820716617 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.980815265 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.847554472 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.824430633 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.825700394 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.825695158 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.823235442 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.822802891 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.830677317 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.820386875 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.824451116 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.828964332 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820901584 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820736501 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.93125191 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932247066 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.820882762 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.836779142 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.831474859 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.820322548 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.876068726 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.822226436 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.820458849 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87586882 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.938589005 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.880190403 seconds)
  done (took 201.072325922 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.828170583 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.831160907 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.825917533 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.83985653 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.824026922 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.823807392 seconds)
  done (took 12.728442778 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.825912191 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.824090313 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.824186568 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.824251035 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.825568229 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.82461705 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.826069501 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825494246 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.828327977 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.823394264 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.825786117 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.826611138 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.827292656 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.825818311 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.82522148 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.824380617 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.825368717 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.823656419 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.824566165 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.825943896 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.968490366 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.8249046 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.826429643 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.242924718 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.829692191 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.825428537 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.834061999 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.825605579 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.825221446 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.83423998 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.829735469 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.826931333 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.826505596 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.831215271 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.829273557 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.827826593 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82919351 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.827467205 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.822760531 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.826730435 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.827952349 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.826916549 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.824946099 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.827244652 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.828308666 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.831247834 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.830369616 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.834730008 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.827310718 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.829073451 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.828813809 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.825784642 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.827158119 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.828440199 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.83156954 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.832977756 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.831563676 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.827890231 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.827466035 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.828026142 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.829160685 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.827118276 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.828988354 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.831648126 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.833908023 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.829138433 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.829558337 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.831073709 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827793945 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.827190385 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.82997688 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.82493533 seconds)
  done (took 134.908018138 seconds)
done (took 546.148072264 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.131213593 seconds)
  done (took 8.891509643 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.920825378 seconds)
  done (took 8.792568392 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.217385981 seconds)
  done (took 9.977141606 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.837521253 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.855843837 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.834590092 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.821627017 seconds)
  done (took 29.119715737 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.890007175 seconds)
  done (took 8.650559447 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.834459797 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.820457564 seconds)
  done (took 15.452865609 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.914966683 seconds)
  done (took 8.675805913 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.90848992 seconds)
  done (took 8.680570022 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.842987745 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.837988515 seconds)
  done (took 15.45588551 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.808515417 seconds)
  done (took 8.570282023 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.562774412 seconds)
  done (took 11.333620544 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.829958437 seconds)
  done (took 8.60567653 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.912704729 seconds)
  done (took 8.674977857 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.992059989 seconds)
  done (took 9.753161551 seconds)
done (took 162.393564381 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.824868467 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.822278337 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.824072674 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.822353238 seconds)
  done (took 29.054977755 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.864427729 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.863517865 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.867470421 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.87536735 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.867781506 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.864701609 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.856619682 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.858054962 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.876229407 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.867530226 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.867576576 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.867558146 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.864462757 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.859376282 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.867681542 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.869179319 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.875684774 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.880845215 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.868112126 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.867589237 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.83243323 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.875651105 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.868407418 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.835344785 seconds)
  done (took 46.524063688 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.030410223 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.902894584 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.986656894 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.883801321 seconds)
  done (took 9.567266754 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.883780779 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.886420998 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.897692364 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.935761992 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.97343672 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.900584825 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.858848984 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.853929075 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.83971535 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.886195517 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.960341198 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.901622026 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.9677132 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.832416835 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.02135542 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.832059637 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.83189169 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.885248536 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.939913471 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.950288011 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.834347598 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.883621052 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.889408437 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.902045648 seconds)
  done (took 47.31514803 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.833579068 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.839778396 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.837765789 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.832743957 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.832475581 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.833306492 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.840094328 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.83286895 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.854118924 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.833171571 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.83238804 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.833678036 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.831959767 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.832792198 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.832309125 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.845210682 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.847801032 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.832793587 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.835542818 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.839488224 seconds)
  done (took 38.499928412 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.825628291 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.77692153 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.178048099 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.090006516 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.832866118 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.832656583 seconds)
  done (took 32.301883844 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.846201054 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.89672223 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.84136778 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.891802141 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.972028354 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.843465815 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.835357539 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.901484095 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.943984901 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.907685695 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.853462882 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.859601089 seconds)
  done (took 24.358198213 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.8394072 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.828471943 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.828503189 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.844864674 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.844650217 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.841911459 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.840376092 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.827516631 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.846499779 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.851431143 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.841792652 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.846294847 seconds)
  done (took 43.850744134 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916263681 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.874247289 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.8555784 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517816986 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.206812988 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039804147 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.478674858 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.158782033 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.833141083 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102352838 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.97859729 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932606943 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.084360327 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.316522368 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.862354254 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.292022651 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131784474 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041236948 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859228106 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582443232 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895544027 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.999109402 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.702191317 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.889213274 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040641987 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.957307813 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.091199305 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.828587361 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968450903 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8689275 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840301473 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.829181376 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103499447 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211419161 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935944834 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840079932 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45286425 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.542667316 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.824233909 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.63645313 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.651777864 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.972646469 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841162542 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8312739 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.764808402 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.971716033 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206378255 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.8354918 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.541083517 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.830518285 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841627577 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925982141 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.834356726 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.646700112 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749905023 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.833379365 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.827817077 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83720147 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403015206 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.024895381 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.014010553 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.805744582 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.924727282 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.580901788 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219162236 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.982283219 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.834868005 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835494546 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766274966 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.663748334 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889994301 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16201222 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.85332287 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481809839 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151773024 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.039782208 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77597984 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102924918 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.367886099 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.807640667 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059741915 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832783821 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768976433 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.776489259 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.768546811 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097525092 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87293036 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.581756107 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876911563 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160219899 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.845369883 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850159449 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856835215 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058535123 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.718003885 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834997797 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.770393965 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991402765 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856093678 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162474687 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769490408 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.839289302 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092637509 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.046268342 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.906949727 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.336049367 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00375475 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388379205 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.888968475 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.980803139 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.883828702 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.108932759 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894811117 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.024605367 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890456706 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.835820673 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133144012 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419917444 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.973659814 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.995374333 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962720527 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.15302194 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865596851 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918414137 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838677985 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.835568648 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.68919921 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.389699006 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.836068022 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.839628343 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909838802 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.884845961 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.837706446 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780549469 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.454454116 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005177849 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.851416189 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06181312 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.390698901 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1487965 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77104891 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165387569 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928029972 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.059954909 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.49165331 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.925422614 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097880927 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.903844137 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.942364171 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885904326 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856146537 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935399024 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859803613 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.967011506 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130844423 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.841908292 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.842601215 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.656618084 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875526493 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844371439 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.842280094 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.593306193 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111171247 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.86370199 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.846547864 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.726989359 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.851753865 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902034864 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844324916 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.848278641 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.371420941 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576847421 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.846213354 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.418500775 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062306949 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849227402 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.588227418 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957824175 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.922270432 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111109856 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900195263 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.772260369 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.549573922 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.535506378 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838099956 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.774417147 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.840486256 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849076006 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850571183 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.035980469 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115120203 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886264338 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.593392719 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.883936518 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851242123 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.844995074 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839853005 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.349539081 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.035554269 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.016819369 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887696299 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986045695 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.853908222 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775782966 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.844012383 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844066149 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.839981012 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.841112025 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874040217 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.602412497 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216475172 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102336145 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.491158771 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854503597 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.656858041 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.901011768 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.841439516 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.808850339 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996829972 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.874739239 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982611917 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.854472107 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.67066826 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.55010651 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408269321 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170333186 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143376823 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281217896 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.042737582 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870084902 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183320179 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776020876 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.398987375 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900524124 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182132838 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787078945 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926600253 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.499161432 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199224562 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855994653 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069595371 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233674745 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.862051728 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865676344 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054201928 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877696585 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.981859623 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.803708388 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.146514231 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983765806 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.639489126 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066595452 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175378478 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.79945758 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.856610493 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.844761149 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.524707717 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932567232 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.556157173 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.014555588 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.021482957 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.055490784 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192125317 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.850587857 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06987642 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191483221 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.996309448 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.964773911 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779786521 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.855632138 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.855235481 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.846859623 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.841132651 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.722324608 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.098484602 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85575515 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777569368 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.946664648 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136068852 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.762279426 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.849346225 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845070947 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140214532 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.367739351 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022356474 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.93937847 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.362088193 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854035118 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779216609 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781418881 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.539039912 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854030994 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.824641267 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05612308 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.949701228 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.765216814 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923351438 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928715766 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.104158522 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.858740688 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.116413964 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123741817 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.548738111 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872275737 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.947176418 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.644112024 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.974341137 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.849027463 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085849123 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604885066 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.075205483 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.882380747 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.811692634 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.848273032 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062175789 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848253915 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.853680715 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09785398 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.572164079 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.847932358 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300144816 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917667471 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.865418244 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.907932467 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.940524424 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857857703 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926814001 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858644829 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.857478576 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.857212658 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894913113 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86434145 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.988945316 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.860688333 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941163873 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.04764702 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.370385466 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.853671487 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121366394 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218279054 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.180141884 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90651517 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.846847391 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848536344 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780618325 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995013182 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073125358 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12065552 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.975368008 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.961957149 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877601493 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650715902 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.069448255 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091347972 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125032209 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.74405341 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.346845914 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.889459665 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.850087721 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862197737 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.061813539 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06178799 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15234568 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989539451 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.924248098 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209526417 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12574127 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.850903569 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850231068 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.444343299 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.854658004 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.663078531 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.894233244 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88668666 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142136701 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860157962 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231238003 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.873229481 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.009469469 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.622724893 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643148674 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140345635 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.846055531 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917552954 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125132431 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23231669 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163921149 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919786687 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862508422 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.956541645 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999753756 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.762723533 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.850773565 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.851990499 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938214491 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.560906637 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.859675959 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127280465 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161024732 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.847873175 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.768821706 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877515973 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.860680401 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074781924 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120547514 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106231768 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862256971 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.858457749 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.667790787 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124642713 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911313523 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785904041 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.856827974 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961841103 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112596561 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883322369 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.307534927 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.564061724 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124456022 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.856638326 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874212454 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.003204521 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.218946811 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182521451 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.385354994 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06413109 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.442674205 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.422460209 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155587981 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.857345248 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.995083564 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157142132 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.858788546 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.927822527 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892151623 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.124118695 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166610146 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.864146887 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742742719 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.825068518 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.195152711 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408112697 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792937131 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863606845 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.914848564 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.855046984 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.98557573 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866116673 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.784383286 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005404647 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.617577991 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.130786842 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.861180709 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.850524639 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.693902998 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.147741882 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892793758 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998465984 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865782502 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.531255011 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.20875687 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114197981 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.932900271 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.864872869 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.860603943 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856242883 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.844451998 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.054910535 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.054644422 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133957268 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.964632996 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.896351329 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.86180213 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.073740702 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069434319 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.867543541 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012856811 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.9330349 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89943774 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.763907021 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.36183594 seconds)
  done (took 1665.38721924 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.867538832 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.881325543 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.864789241 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.911541053 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.881375948 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.897975531 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.933400698 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.943991093 seconds)
  done (took 56.977390195 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.861456595 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.081016492 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.874889163 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.865097928 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.873606208 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.866468263 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.032247256 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.875979439 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.87602353 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.874528132 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.866155355 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.863927404 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.182302273 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.887864498 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.865370138 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.851860298 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.873019951 seconds)
  done (took 74.278177837 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.864550272 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.087007486 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.897395426 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.880359248 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.851165164 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.869612642 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.636134776 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.878588716 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.867799855 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.98219348 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.500759468 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.879660183 seconds)
  done (took 86.998705248 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.87351701 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.871893513 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.872754433 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.872533989 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.871656145 seconds)
  done (took 11.167165162 seconds)
done (took 2168.072202423 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.154007628 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.085359125 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.093912783 seconds)
  done (took 5.981536841 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.015190216 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.062661839 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.182895514 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.187952756 seconds)
  done (took 10.253533427 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.150108844 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.235307465 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.070453739 seconds)
  done (took 8.258234586 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.263787471 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.879467808 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.979170263 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.863536297 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.865687862 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.867906428 seconds)
  done (took 22.402273641 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.870008736 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.872808458 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.870110158 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.873515007 seconds)
  done (took 9.289730786 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.853008262 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.586070866 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.850856481 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.867727226 seconds)
  done (took 20.96134304 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.621704264 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.628147357 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.613475835 seconds)
  done (took 9.667784242 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.569535987 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.808504489 seconds)
  done (took 9.181334563 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.128690538 seconds)
  done (took 3.932882668 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.001025011 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.134928152 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.346525192 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.378647758 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.446607445 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.746466252 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.176828416 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.111888201 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.270306895 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.311466767 seconds)
  done (took 24.728849829 seconds)
done (took 139.736118061 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.244174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.107831827 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.06561803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.198505372 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.090319968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.065234614 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.292084097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.183432646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.709214894 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.707337378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.200299217 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.090441528 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.021703613 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.105479897 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.023816596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.107977468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.088188274 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.256980363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.934826765 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.096633845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.292080346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.839976022 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.045723914 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.849660387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.088784025 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.016978984 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.420586845 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.109451592 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.08390096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.426719057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.020573422 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.246706432 seconds)
  done (took 172.837578723 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.774992044 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.868498811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.866972155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.868878319 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.30802271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.869611251 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.867786605 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.868274666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.071724885 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.030999844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.868952928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.321506812 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.876475231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.869143076 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.880746123 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.868983567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.276129751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.88863646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.897026439 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.899130371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904019269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.285978646 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.899171406 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.337677428 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.277892585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.895242447 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.86871751 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.901427504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.874069403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.876976991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.879762925 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.870451153 seconds)
  done (took 208.721490627 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.869740372 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.869998187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.868860267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.870113888 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.870976725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.868860091 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.868356207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.86855187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.529227864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.530222291 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.868067147 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.866849078 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.872898029 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.859058333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.862171334 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.859466753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.864226468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.860804453 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.860163747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.858733965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.862345008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.770588748 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.863538305 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.768924967 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.854778529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.857156381 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.846611028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.856229358 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.856941201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.858077987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.857107328 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.847536217 seconds)
  done (took 220.566397048 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.040258952 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.852573703 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.852741467 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.789579965 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.853105726 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.853549873 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.848572352 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.042387521 seconds)
  done (took 18.932154116 seconds)
done (took 622.872824179 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.311248254 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.147691463 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.031280576 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.878863417 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.129365089 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.907387522 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.874798084 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.934675118 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.07811874 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.946594751 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.520617902 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.892649949 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.612038749 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.895766581 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.99991387 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.928576219 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.444494947 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.53118021 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.051393436 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.953168462 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.045822626 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.807855505 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.948611383 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.115150476 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.627025268 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.854474848 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.036805954 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.450194023 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.884796838 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.036984933 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.612141944 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.258227272 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.883692758 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.872463277 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.927186213 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.907451805 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.20674506 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.882187914 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.997852366 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.613055434 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.938697152 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.967473788 seconds)
  done (took 103.731141138 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.845041736 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.84379713 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.844270801 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.843866605 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.845889927 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.84412561 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.845963176 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.843485035 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.844159735 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.843882302 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.844180593 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.845085832 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.844175576 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.846240224 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.844824031 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.844191311 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.845682788 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.847411259 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.845231388 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.845265085 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.846023761 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.844622988 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.845864574 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.844566285 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.845754779 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.847315701 seconds)
  done (took 49.773729192 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.856566743 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.000536582 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.083112355 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.876585914 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.858640499 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.860543055 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.87647228 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.864729457 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.860704896 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.859306054 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.950116546 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.865711546 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.876536543 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.080383562 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.872615173 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.858345432 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.85867082 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.858623148 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.008323346 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.876423784 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.879132587 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.864228974 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.877179233 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.87303712 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.861071433 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.858583396 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.862933532 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.290599884 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.867068568 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.95175389 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.901118965 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.882534061 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.243105077 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.090748196 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.91166878 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.867406064 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.860228581 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.955044132 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.864661692 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.860025463 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.877710677 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.863715189 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.085650384 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.357281183 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.872768446 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.860657968 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.301378971 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.96139693 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.899545115 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.871340363 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.084945473 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.875178991 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.861257878 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.860813303 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.897263184 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.870935532 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.859896676 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.170504979 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.871114153 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.87872702 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.864270803 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.862119008 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015080808 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.86847206 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.006546107 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.868758757 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.868903541 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.860145938 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.080549889 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.874637054 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.362035707 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.870817291 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.860610263 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.948342752 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.004482723 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.323500433 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.870100777 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.010447813 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.254116809 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.875374519 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.859188285 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.276549534 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.879650955 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.859221476 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.852658792 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.852098928 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.851439613 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.895127438 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.865729075 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.285561714 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.349919982 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.171663748 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.872402189 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.86174529 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.847041344 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.154806669 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.854552484 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.847565287 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.061138157 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.352783722 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.856618914 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.85227684 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.330261719 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.854479474 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.859735576 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.84923252 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.067671976 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.8585895 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.883284799 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.839954161 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.846817232 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.843827212 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.863928179 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.845224412 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.838878221 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.31110439 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.947565295 seconds)
  done (took 229.8503453 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.830447311 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.844861216 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.827828919 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.827466236 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.827090635 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.833503549 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.826987825 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.827679138 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.833720953 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.827917445 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.826755211 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.829299577 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.828590588 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.831616087 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.921179452 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.889191039 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.492948094 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.8850419 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.882380741 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.897066375 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.529092039 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.886127236 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.880901047 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.883080072 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.883647239 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.887734356 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.896618709 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.914738467 seconds)
  done (took 167.127111608 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.888717422 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.000521583 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.903177911 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.916067904 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.89535426 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.885761303 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.912969523 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.902589888 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.89238973 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.886174029 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.886054966 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.947415535 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.899339459 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.985008762 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.917595725 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.91870287 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.988868929 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.894302536 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.886745683 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.887151737 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.917217639 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.883283681 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.947828941 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.01113905 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.905997331 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.002153762 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.893137828 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.890560868 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.890347471 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.004385764 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.904023213 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.947266007 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.916215936 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.907673164 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.007851272 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.004156156 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.991931588 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.919245445 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.892414201 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.887960496 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.887659515 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.878181517 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.002415473 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.907863873 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.891366102 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.994289363 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.907849854 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.891306779 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.898834596 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.887813911 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.902542491 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.9075744 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.953425375 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.016362727 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.922048217 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.916615465 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.916320574 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.175794629 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.901815008 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.988311143 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.883833974 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.004955056 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.909941562 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.880691057 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.890377029 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.89533418 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.917575873 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.92107437 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.993852871 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.897439808 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.988962593 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.923657642 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.89613498 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.889556561 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.892380904 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.004845248 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.006510169 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.924695109 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.926622689 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.920725489 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.88660039 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.891359219 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.881296651 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.909296835 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.895600832 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.004922292 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.007721667 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.898372224 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.893306209 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.893344864 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.894437657 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.917891011 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.012022659 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.926357646 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.987693144 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.956901841 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.963226613 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.904990436 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.903955764 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.89582918 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.954358748 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.905692385 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.90275247 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.224543987 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.962185391 seconds)
  done (took 204.635590273 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.983782084 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.357602151 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.946803612 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.94753843 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.180543582 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.317684392 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.679366354 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.939790088 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.940698246 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.966286695 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.098113959 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.004235531 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.959343001 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.927269919 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.321458 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.929518244 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.941702831 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.962273314 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.943864845 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.506314358 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.25276065 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.059216708 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.939930778 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.058880304 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.920048801 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.243465929 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.438110739 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.328915763 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.976730161 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.282704805 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.267105604 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.625830414 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.15653288 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.183618411 seconds)
  done (took 75.416367218 seconds)
done (took 832.318008989 seconds)
SAVING RESULT...
DONE!
