cset: moving following pidspec: 25324
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.373125784 seconds)
loading group "string"... done (took 0.566735118 seconds)
loading group "linalg"... done (took 7.752992386 seconds)
loading group "parallel"... done (took 0.173186542 seconds)
loading group "find"... done (took 1.301735021 seconds)
loading group "tuple"... done (took 1.986697569 seconds)
loading group "dates"... done (took 1.429683547 seconds)
loading group "micro"... done (took 0.24731081 seconds)
loading group "io"... done (took 0.986842503 seconds)
loading group "scalar"... done (took 42.369721228 seconds)
loading group "sparse"... done (took 13.991145554 seconds)
loading group "broadcast"... done (took 1.093904074 seconds)
loading group "union"... done (took 15.027762403 seconds)
loading group "simd"... done (took 5.178155446 seconds)
loading group "random"... done (took 10.448869231 seconds)
loading group "problem"... done (took 2.089129703 seconds)
loading group "array"... done (took 24.710535993 seconds)
loading group "misc"... done (took 2.174569124 seconds)
loading group "sort"... done (took 3.815186815 seconds)
loading group "collection"... done (took 20.15509544 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.58056557 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146058929 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.153765625 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133408636 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209679079 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158410219 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158844026 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099657246 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.972191 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175839137 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156673267 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.532666083 seconds)
done (took 5.21985474 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.219694444 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095669595 seconds)
    (2/2) benchmarking "String"...
    done (took 0.107014425 seconds)
  done (took 0.888317248 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.079350703 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146897046 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096658433 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079587633 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09743331 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078555099 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.098075589 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079578605 seconds)
  done (took 1.371151364 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087036264 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099809613 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082713656 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098550012 seconds)
  done (took 1.062425679 seconds)
done (took 4.320474706 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.742421928 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279155583 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205557113 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.470439503 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203561876 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222291467 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68793182 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343707211 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.257806194 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103049834 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147974475 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39589557 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141346286 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.689882475 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092435408 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127774931 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.183833234 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.457801403 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085175996 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111689634 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118701062 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144481857 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132095886 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093707667 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186893661 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081919575 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198126676 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110034256 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083077588 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.282644944 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202636037 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688054616 seconds)
  done (took 11.002139412 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11093827 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13408865 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09962931 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141196399 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137310652 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102024994 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086820481 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098220788 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125224294 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180130769 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13238338 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123181872 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096934208 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084490009 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117777196 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248489492 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121693203 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100661404 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101987485 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089966213 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140662668 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11553636 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110569528 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094723837 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169406096 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225121922 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113862569 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128687688 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09978907 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114921199 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144288191 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145953675 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096898613 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082074485 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175612908 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127207576 seconds)
  done (took 5.22462606 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.10871707 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194652391 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125305777 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.176464864 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082188458 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147367839 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096798066 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116218363 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.262961663 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.101473943 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.491007759 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145239862 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102037309 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102014017 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.130645171 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083791393 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.101195877 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.621471405 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.125893619 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155099091 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117603811 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10449389 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.091176721 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367491343 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098073878 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082137405 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100254826 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067503492 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165690282 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10015047 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.158793414 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103670097 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105204179 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136828203 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197986914 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127965389 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1382144 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080249406 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098418087 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180322284 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087696619 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097625638 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098762318 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105704064 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138512775 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138305017 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098589189 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083412438 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.206014656 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09913084 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116172965 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.937522606 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183899169 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093196145 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098664265 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288888972 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11742535 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104097309 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079836379 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.286267771 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193566842 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100959664 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082438345 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09977364 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08252693 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.402493569 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083071293 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.745865879 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085131718 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110107837 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084576982 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09921765 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10571602 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089821736 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118055477 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081146709 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.102098277 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080817965 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099819013 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082682108 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111632306 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.216654021 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.101658404 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08086735 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098069308 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118449688 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113066166 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10197682 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09729658 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107958433 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134624443 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103495213 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082364737 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137313154 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09983228 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094487296 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102324647 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146543449 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09918354 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07968845 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.15348775 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081064345 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127999584 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101805783 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116545147 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115950695 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101706717 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.172721376 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080104722 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097800773 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081535925 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098226422 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082967666 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102752312 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112019006 seconds)
  done (took 23.079671231 seconds)
done (took 41.106370969 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.334990635 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106846609 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108198832 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107355809 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104992825 seconds)
  done (took 1.528531685 seconds)
done (took 2.266640781 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291225505 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174240055 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098568615 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.173151246 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09529504 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170532312 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165099015 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096054295 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.225595576 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096389368 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.167398654 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077744319 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096834251 seconds)
  done (took 2.691243604 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094438509 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117418518 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08560812 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11191434 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078598894 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113426669 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095018158 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119162997 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11195223 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087383839 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095551645 seconds)
  done (took 1.84754621 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094574652 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116456863 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085037199 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113461286 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07885754 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113459296 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095254213 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119687723 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112833308 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087943096 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09636457 seconds)
  done (took 1.848434747 seconds)
done (took 7.114737188 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091998238 seconds)
  done (took 0.822370688 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.961793332 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.789034153 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11338596 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152878532 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.326860744 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.177125167 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.473703258 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128514854 seconds)
  done (took 11.06966844 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.147963291 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089429037 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.104412041 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088404498 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107245228 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088180844 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10392164 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10437301 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088477041 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101283108 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085397206 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103460313 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102552708 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08862459 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102105042 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084999156 seconds)
  done (took 2.392180692 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121878883 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120611593 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110711633 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112050113 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088718944 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108372838 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108976023 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091746833 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104403002 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10599468 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093298223 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108694535 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106333896 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082776686 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109246435 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110840676 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08866238 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110319212 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109792625 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.093568875 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109665205 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.0984375 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089437862 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109611961 seconds)
  done (took 3.345549316 seconds)
done (took 18.364670836 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160257406 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108970862 seconds)
  done (took 1.007927094 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096322567 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116264551 seconds)
  done (took 0.955743211 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098132229 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097668399 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12641541 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112819816 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082955895 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099730287 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123075485 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083606165 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0998765 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082381276 seconds)
  done (took 1.755377198 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084148246 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112682138 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103921673 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098686784 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107886436 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097653811 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091751937 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101391394 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113022476 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079533803 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10506577 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11764446 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088588884 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11854273 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108005836 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085828122 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107243279 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10103271 seconds)
  done (took 2.572288072 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080210019 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100688781 seconds)
  done (took 0.933611216 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082134882 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095852062 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083850978 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100423931 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097458732 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079271022 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095690979 seconds)
  done (took 1.386243843 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.494892122 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139073164 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26837688 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104866074 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106151389 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.306701798 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101264499 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086459445 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107232972 seconds)
  done (took 2.522661638 seconds)
done (took 11.878871608 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093801893 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116385734 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.119468964 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468455873 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107742069 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099052343 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149184989 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254988525 seconds)
done (took 2.165565324 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143750228 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.604438504 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.430572065 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.237980934 seconds)
  done (took 2.026579593 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.403678539 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099386391 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086082214 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083751469 seconds)
  done (took 1.431633201 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080058402 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102103618 seconds)
  done (took 0.93929422 seconds)
done (took 5.299665448 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081317455 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.13087747 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082804348 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.100016214 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081649042 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.099268531 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079260406 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.101790819 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081857572 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099836167 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098174099 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082203179 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098988818 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082658497 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096480693 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080703714 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096801046 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082936354 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096697111 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080417595 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096416246 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083012212 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098684092 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080005126 seconds)
  done (took 2.981614886 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101065173 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098405645 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106787135 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089308717 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104250795 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087504306 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105766951 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09987812 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088916662 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103370756 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104456777 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087663001 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102142672 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087154883 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102199735 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104483747 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08936038 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100628588 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085074566 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105109997 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104797557 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084180508 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104444065 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105329107 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087246337 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103749074 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085203085 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101427374 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10532418 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087675518 seconds)
  done (took 3.682237301 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085885275 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094107405 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078999074 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104745149 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081157744 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100271562 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079951778 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098493693 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081350441 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098226314 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081627825 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098306957 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080397042 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100123306 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080584286 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10336423 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114741872 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081820842 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097343979 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081638709 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100678393 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080397493 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098267602 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080259427 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098724575 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080469562 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098312313 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080277481 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098732334 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079627876 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102106828 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083819471 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097914202 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086793624 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102377197 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0795494 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101467896 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079499314 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099025443 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096718717 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080244029 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097707394 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081628517 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103911958 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080694012 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099559026 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080558753 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099632188 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081249146 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101796349 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079855549 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097597013 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081915794 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099333748 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083293698 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098196683 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098766077 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080308997 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098210103 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.083408505 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097035717 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080576306 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099901049 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0814976 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11439467 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088200246 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097907061 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082645865 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099185502 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082682735 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099997393 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111825241 seconds)
  done (took 7.359011204 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102867024 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126073551 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.099635826 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09866588 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078301584 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098363404 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085609529 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0985897 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083220561 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105648117 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098314039 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082366667 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099296333 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096766764 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099196703 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082646204 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106022366 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096089143 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081115407 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102210506 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082088441 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102349882 seconds)
  done (took 2.874339593 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209815686 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105096766 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142165459 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107978986 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085971077 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.1094455 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104984314 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089765036 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105664561 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085496409 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.214164801 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104524245 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08557964 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10436913 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102625413 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087577238 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105056983 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086926301 seconds)
  done (took 2.807141251 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093916592 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098842322 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100476744 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10195337 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101305439 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086488216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107024212 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110664623 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086506476 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100961973 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093117835 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104150298 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104558215 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084836248 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103089466 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085382479 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103880338 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084401404 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111316299 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107585223 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090344347 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112334909 seconds)
  done (took 2.947164254 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098021999 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100894094 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118108583 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085308431 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09639643 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082543986 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108590834 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083388121 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110969981 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102593181 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084319556 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099520896 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090491082 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101544943 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10762736 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084495937 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102618684 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08429691 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103763155 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079783412 seconds)
  done (took 2.700150301 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102916226 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102655303 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102005543 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095247023 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103713317 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083754172 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11409858 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102468061 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085855713 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129168486 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102684888 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084757727 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113144963 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109205792 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102401015 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094865142 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111702192 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112862884 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085383872 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104213487 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128743358 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084972129 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112624215 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102925343 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084541518 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103405376 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102665388 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091518729 seconds)
  done (took 3.631897044 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08125262 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098355954 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08085025 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098090254 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081507024 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099398724 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08165265 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098730142 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08358905 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098288916 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083696226 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100327336 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083928329 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100926026 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084294134 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101439519 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083734986 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098951574 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08169852 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099282084 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084034503 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101564738 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083896236 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098890846 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08054155 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102115614 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081487113 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100097281 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083111994 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099210062 seconds)
  done (took 3.514077731 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091002143 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10629421 seconds)
  done (took 0.975340819 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079357848 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114316454 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080755589 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105874453 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088256367 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103459048 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110447982 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089243498 seconds)
  done (took 1.548040445 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096915566 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110749035 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084414882 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116354062 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112335175 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100139173 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172214812 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100883837 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088900986 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099619021 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116494162 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08471542 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108685793 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08451979 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10868712 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090598479 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100935682 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109538248 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088339971 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.104717107 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085785031 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11209247 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085546991 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100436107 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105332638 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094431872 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115858045 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085415253 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10674486 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109946597 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091419078 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096625638 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085084146 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103555497 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082579575 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11286804 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120617002 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088102034 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112420075 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085852242 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116330817 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09838738 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089580643 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109448601 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112588269 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08588372 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103992351 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079684465 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099810361 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.0875893 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098386597 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084087244 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097782427 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092030152 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107417643 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114013915 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084148542 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10437457 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087966698 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107318586 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091225627 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106359207 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104733585 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084934022 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109680755 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088943709 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113759971 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098408612 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079323 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100657376 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096572344 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127648407 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109342174 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086558853 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104199092 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083221485 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106572075 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086555331 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108967974 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108842234 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085573724 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111030476 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092538673 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104071106 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086526024 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112105214 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101010906 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08729278 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.10149944 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120619348 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08401275 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100964564 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082904343 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114749869 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088410814 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103354056 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0820424 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110848077 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096711667 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085822097 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1048247 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085719828 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115557108 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109186568 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091851943 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113024234 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091051798 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104046571 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106409009 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081974107 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10427757 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08759633 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110187765 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078655324 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106178206 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08479033 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104675196 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11250257 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083085974 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103485596 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092774967 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10946332 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101575765 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08231556 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105931272 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08544655 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107162267 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093023149 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103020803 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079477498 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099118488 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106572891 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085765903 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10725633 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090867541 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107052103 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079035002 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101713161 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10797283 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094794276 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103364482 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084714583 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111104878 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103732026 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085103983 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109818343 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087870101 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102413072 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09144732 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105037627 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079916039 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108192238 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106353187 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085022473 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106560024 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088685203 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105624105 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103954156 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084036245 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109111179 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086096715 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102244733 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084420833 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102497779 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114223667 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088097565 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098436176 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082963911 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.112227284 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082243283 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10400624 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084254937 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107526954 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104564791 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.084025372 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103625808 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087722772 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116524874 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108272011 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08711435 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109020404 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097649807 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104203133 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087543268 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105493006 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105529804 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087249351 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113521541 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092158665 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110880544 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105606296 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082179058 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110365023 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093099106 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103836873 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083124184 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10347962 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10753648 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091910024 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107824351 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086375171 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102394817 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085153769 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10810807 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10580872 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085866268 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102478972 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091384817 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103971994 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111000628 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087961884 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115428019 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089269453 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.10001567 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089016504 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103733047 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110619166 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080951154 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101426138 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084839017 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105083467 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085718979 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106664648 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079432363 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111694592 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111895665 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085806508 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102468609 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085965531 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110439681 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087233746 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108783859 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087802217 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111065781 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114123353 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085730202 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107645091 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09698326 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105239674 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09710397 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091324373 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103083506 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085746463 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102746592 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083467364 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108143922 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11345977 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093709464 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097730144 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089656776 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102258902 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084457138 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099820888 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089470152 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108352044 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104261684 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093066421 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105585672 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.090220776 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108290963 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084539025 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106327527 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105731417 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089260848 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105409581 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088227571 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10344226 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088102193 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103638403 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082236434 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106382098 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104434923 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086213141 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110636433 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08579227 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104945852 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087503789 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106228507 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10390002 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087328519 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104155392 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089595314 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105033522 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085424256 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107640784 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08056351 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113305526 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084443542 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11416683 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103440712 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082503168 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.11015396 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088740357 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111282009 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104960044 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08788155 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106181313 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086067565 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107523032 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092163819 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.103472837 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116777419 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095515659 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105231395 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089366364 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10526668 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087115672 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104707359 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085693941 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106601637 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104398799 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086743082 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109405416 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0888184 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105972362 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087391175 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107061528 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103495982 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08790998 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.098613841 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085702784 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10391419 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087094896 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116908069 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105300038 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089091026 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103835497 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087573022 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104073799 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083205686 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113846826 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11422859 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087346549 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11266555 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084480784 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107569773 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115742018 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080508944 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102672002 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084715735 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102430603 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094789074 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106492128 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.104128652 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106391471 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103686555 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083747667 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106090208 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08546221 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09987467 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084479747 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109281906 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088513209 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104157374 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085489497 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109644173 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106497767 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09745168 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104798691 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086226174 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106867768 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082542208 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104862139 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083613077 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109298648 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10629586 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085146159 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101549317 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087394464 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106312623 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086994246 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10602788 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087301168 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112633803 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105129589 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091549759 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10883157 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081604661 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10810825 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085198899 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106499506 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10300802 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091325252 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108173167 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088389537 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115388933 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085310261 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106845533 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104981499 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08456774 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104571374 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087319779 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105126466 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085800514 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107501278 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093752694 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103661839 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107988587 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086281733 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105326679 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094352852 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108029525 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089212443 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113985481 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108768509 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08856966 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114047498 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089650893 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109368378 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106712382 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088667329 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111567282 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085913855 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113077339 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086440049 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.108712954 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107094593 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084894923 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10517482 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087292383 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104765485 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093168117 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107625238 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084791121 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104955989 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083693969 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10774212 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108975115 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094252733 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108782419 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089853503 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101814833 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082559483 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107253519 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10254883 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088706998 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108567221 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093065063 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108532143 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086329127 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105322817 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114611843 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094070714 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10956947 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084482424 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109612529 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087450679 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109357371 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086726983 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106332767 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106933674 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091919191 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107932687 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085700662 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114309942 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088834062 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109300113 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106891142 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087930253 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105772228 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082447587 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106964989 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088439454 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112581547 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088274336 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10715524 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117058462 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086696835 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105629777 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090356648 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105893478 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10987156 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082685872 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106822038 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088253006 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107279944 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.08288745 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105662909 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084550984 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109243405 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085469888 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102090379 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116612158 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096518804 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110038534 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085553567 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104990362 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081875142 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102683726 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104064353 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088988771 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107847112 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098374445 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105787778 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085753434 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102052809 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086463788 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109186153 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108623029 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085047565 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101703367 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086236827 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109803555 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092492499 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10634466 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08616855 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110471489 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107880777 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086331584 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109583363 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083847935 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110193266 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119297214 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088676395 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106293416 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094335893 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11555286 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087310673 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10257249 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107550811 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09155589 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105921772 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088716544 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10790881 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122654923 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090825444 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105238451 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086130541 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109190187 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086856804 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116907055 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087612075 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109736819 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110287399 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089243874 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116798503 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088817366 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117118296 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109638005 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091060735 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10636391 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086998669 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105456483 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08488761 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109045175 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107089731 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092497853 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115803544 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086332536 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120262936 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117468999 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092230725 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103537511 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087022542 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107224986 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083054172 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.1115177 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08493763 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105973876 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104146843 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087835952 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107580223 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093796328 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107846645 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088390373 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107226907 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081528093 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110081459 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088748721 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108532649 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102999213 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08857849 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108078314 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091759652 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111445912 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087539806 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.111109656 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088173031 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10984093 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102109237 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095391244 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10608614 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090703137 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106540087 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087996967 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109522156 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090288673 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114202731 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10890123 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090244732 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.12009744 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08940951 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105519863 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103228659 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094056081 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105255064 seconds)
  done (took 59.817712834 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147668666 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082116805 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102487016 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083870427 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117391354 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103347267 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083456901 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103445471 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084342175 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106478852 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083082675 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1036459 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11302194 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129876287 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097693179 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108984408 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082037937 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105556832 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102520985 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085374631 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11349426 seconds)
  done (took 2.967261832 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104688428 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122923576 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119815308 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122724371 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093719612 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120433963 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119830901 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118971281 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102770953 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116592523 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122336291 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118258226 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095612368 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11563004 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114580675 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0972881 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123048111 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113733307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119483292 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100019097 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117720438 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119563946 seconds)
  done (took 3.327741616 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085181981 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104891581 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089799979 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101904596 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088806447 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102637422 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092352296 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105751208 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090909528 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.107603053 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085856996 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.107160996 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108200362 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.084248587 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106506844 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085606084 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158023188 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112890041 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086345779 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109846883 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.081965716 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111124963 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102944227 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083386578 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105844834 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092802795 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108869247 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085708253 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108338135 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085229129 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108794197 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084024789 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109741683 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10694365 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087203597 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106069959 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08804115 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106917432 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083610291 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105349796 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08811109 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.10384128 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088314144 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109419917 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085345307 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10617638 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088653747 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108506413 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102163455 seconds)
  done (took 5.679362434 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105490853 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16591806 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089922894 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148574458 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126875315 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117639367 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091855089 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148413816 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107648747 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085905131 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128051579 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125182039 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108593691 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093733161 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113114108 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108575001 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09022868 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106943074 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092501744 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108557621 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112707328 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094097567 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124882628 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123354806 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111690711 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087867098 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108082379 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113639352 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102948487 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114787964 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113331573 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094485394 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124782482 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110663526 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087005613 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11261826 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127275525 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088050969 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111893449 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106210118 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09194164 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113997374 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113784794 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107309324 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110417216 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113532545 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088590204 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105729189 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122265671 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091375357 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117952428 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124275547 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092606599 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109833986 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112838261 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104773495 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109716599 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106605076 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091937499 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12281865 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105181245 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092544355 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123505091 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110504093 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097281064 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124442964 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114259232 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112712838 seconds)
  done (took 8.446429452 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09387846 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111770022 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122550586 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124689083 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095144329 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115876874 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115372792 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093825442 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116493011 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121474861 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115098689 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.139486784 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090108088 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120295072 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115832151 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09539738 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116777018 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115349035 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095435297 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116698281 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116630647 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125074864 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09605939 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124329725 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147272455 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105638608 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093016572 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115955741 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123084204 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109948627 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123049666 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091285903 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111657882 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120448657 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123581005 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091236546 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105322678 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109989394 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092342001 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116251565 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109408364 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105685991 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115944625 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110731497 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094645921 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115503101 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125374559 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128429536 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119132331 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100814895 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116266123 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125821793 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114899709 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095750668 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125683433 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.151995381 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126027892 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1258202 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115347299 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105998651 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125672691 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13236684 seconds)
  done (took 7.897810966 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108252751 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115560247 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117800539 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099692229 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084359201 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109181511 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082799078 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.106117982 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116807651 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098206695 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122859646 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11408811 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096510225 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12274502 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114394387 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11669482 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093258615 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114261393 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118859858 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092007069 seconds)
  done (took 2.985301073 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094740884 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125843388 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087809966 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117583796 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113022161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094990289 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.11302379 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111902712 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091110473 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112961517 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100215241 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121466762 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110147968 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096270903 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121411363 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117167025 seconds)
  done (took 2.574878324 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099425457 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117029471 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122302946 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0879345 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10983561 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084819628 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.111174446 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105191221 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08517074 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.126084312 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089099561 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113725027 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108910476 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086905387 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106182579 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093272891 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106627636 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086339452 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110427513 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124387914 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100851978 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109041144 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110082079 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092499519 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110831138 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094708064 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111210316 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107302132 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088495916 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110160499 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089584891 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119273439 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106474407 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088872728 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107721159 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086893787 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109968741 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089463087 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113976536 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108639754 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088124764 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109720748 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089478963 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111043896 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084184018 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110037663 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100005119 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092513888 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102615958 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085478028 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105809342 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086479069 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106528547 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11553685 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088913725 seconds)
  done (took 6.45261217 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099875857 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109329877 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080986518 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106619126 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091476058 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113506555 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112768662 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094075613 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111126343 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087605117 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112450737 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093082377 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112627811 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113484609 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092077438 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114126145 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085440618 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112310799 seconds)
  done (took 2.692373194 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090501411 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104926724 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093172246 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109243322 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088230853 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114083242 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084368833 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109953891 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107512029 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090026344 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109184955 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.09246275 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109201051 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091726833 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111193202 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088901249 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.114363023 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107795849 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090048852 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106631007 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093045168 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108958182 seconds)
  done (took 3.064059458 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119671265 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.130939346 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096220578 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.237440538 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10673184 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.138216212 seconds)
  done (took 1.678687714 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110147912 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12002801 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105956489 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108248135 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115710236 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086496005 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108686777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107381852 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117241605 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10233278 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108219195 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118159541 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116547674 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097563348 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115549713 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1156605 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106726062 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088460824 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106373674 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126890885 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088206846 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118036027 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107511859 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087036036 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113591002 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120525059 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117575327 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121061476 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087883071 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120256985 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113776574 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08841087 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122012108 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124093913 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110174258 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099532264 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113658932 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133707275 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119153907 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101507252 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114591498 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118177383 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100314665 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11865537 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121697154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107547133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093824355 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108448025 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107497896 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135039658 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09437077 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117403444 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11544093 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117568321 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097014082 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15407362 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103159959 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121318076 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116507509 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124705806 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117315958 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094353091 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117000367 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123661949 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114118286 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096329589 seconds)
  done (took 8.194210145 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102633146 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126425817 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107942458 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121841762 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096876907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108371534 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107471657 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089338429 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108556541 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105666992 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151971208 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088178593 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118281897 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118068275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087199268 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108298251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108478518 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118004901 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087675809 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135053129 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108716462 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116300691 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116400458 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097873197 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123171791 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115118354 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107989329 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088156302 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110957391 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107667472 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093910267 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110454897 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117576645 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089393887 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123291942 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113126894 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092192874 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119351782 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11403546 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118407402 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097575469 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129663647 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108685338 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107719457 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102689762 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109650179 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110240821 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088854829 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112328698 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108172507 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102117133 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122933514 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123600398 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118597426 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10754878 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088588567 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109297533 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107895863 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088415568 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115595663 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117358141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086671266 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135212877 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10958093 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109095363 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118560604 seconds)
  done (took 8.077073145 seconds)
done (took 159.629101635 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215769802 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.20014413 seconds)
  done (took 1.268498807 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088168709 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135746726 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09868572 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173180324 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085068801 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141107807 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137365284 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098125959 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106333756 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085620514 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106671996 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086828495 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171441122 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085067882 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107805091 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106856981 seconds)
  done (took 2.674211871 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119197785 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255628719 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127831865 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104279885 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090072023 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114502626 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088362004 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117260807 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093800628 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.111705102 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092605159 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.113247782 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087439706 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.11278357 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115747872 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.093673383 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109885393 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.094233961 seconds)
  done (took 2.901168599 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113879513 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147109538 seconds)
  done (took 1.13149801 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243074211 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.167038744 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.240449711 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.454711687 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.274545345 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.368706815 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.207957079 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.217323411 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165858145 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209846375 seconds)
  done (took 3.410664165 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118995931 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178654826 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316096819 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154388386 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107343471 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12871659 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156629836 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130860423 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122461533 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101564415 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122533596 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118209628 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136733906 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094203754 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116360309 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117192303 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120201725 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11418152 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114432592 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095529386 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137722523 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083916767 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116595302 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114073897 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098297279 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119160967 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105909737 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086398821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12078403 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094588477 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114886789 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12561774 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117654535 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.15637447 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122119658 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156016505 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.11728599 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091306136 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119472862 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095111795 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122224928 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118735791 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.12410329 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098286601 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106645599 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097640915 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108294323 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085182588 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117265935 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120627131 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09263805 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.117168994 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158532209 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121394547 seconds)
  done (took 7.409028144 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.782763103 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162057259 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094538525 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.877698718 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142164498 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110084242 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.784186033 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116668769 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.261749413 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757534009 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140091262 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125385088 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212412071 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262258928 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925640238 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287652487 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.640723801 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126525696 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152867113 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157069791 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12055518 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117863817 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136222008 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.434490286 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118259851 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093084228 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123529912 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125064782 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16787407 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.13222888 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096366915 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206167192 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250978629 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205177228 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093885428 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115598007 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090640201 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.194252481 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264593655 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193388738 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180801114 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10853406 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089209268 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123260591 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131897099 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086069853 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184425676 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175198019 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169974027 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115644282 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117779474 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097828851 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12318579 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163356507 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.125801539 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314467856 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324456637 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09213098 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127742929 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132050689 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242731696 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130125112 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233883197 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14379618 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194912913 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113107245 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78465179 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169513931 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110155257 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098901795 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126403836 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121772148 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104432373 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173937866 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.412667245 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130827887 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119848443 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095039118 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232002171 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107684225 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118718894 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169133831 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122687413 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125150348 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107118298 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129242796 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175851402 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254244746 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101418646 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119836582 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116701627 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102508743 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122471435 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216017509 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22328763 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162444958 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23004013 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099737537 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184506981 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169896333 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121698241 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176377684 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122151029 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104754165 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127363744 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224023142 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145944661 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124203453 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094204696 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122597793 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15167121 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.131317681 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098298729 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19734953 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461243819 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169953118 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111814537 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129596901 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098479939 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182884064 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096383919 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261580117 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121153683 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169686381 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118780921 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08915584 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127806621 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170660145 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127608886 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126191847 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101591968 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122366693 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237196192 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215963956 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120994621 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22002305 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18406623 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118406676 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171149649 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122124865 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167096726 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119820133 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098984717 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11846284 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772782179 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122466594 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099108881 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119061344 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18997557 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089012827 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127381527 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126295765 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088724554 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793410117 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127840702 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121726613 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103339238 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124020793 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123196774 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097778004 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121649304 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168310656 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236660748 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119595443 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099482742 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.129420866 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164952199 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119860973 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.132638342 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.130210645 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109483154 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130157475 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12064652 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108739631 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196927445 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166458576 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224493495 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579204569 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116755936 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.13067975 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212585642 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116163885 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293047748 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119262744 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203454911 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185881385 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10104125 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324763182 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164408981 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188780571 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129568212 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170695951 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110494121 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120399389 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167926093 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11735336 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10111011 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16925343 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1263957 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127702261 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960462848 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089539782 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246074593 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088342398 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17480359 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11746621 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123170143 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28722572 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090682313 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130517447 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16450174 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117305591 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.128326758 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.851733623 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125699536 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099840839 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117843503 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222920447 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167560482 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126963882 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124181271 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102184981 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.191745665 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.216514535 seconds)
  done (took 44.629999981 seconds)
done (took 64.282824655 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282190248 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.222326052 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269246202 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171450706 seconds)
  done (took 1.913656822 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171931457 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.15045525 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122257132 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114036776 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157444781 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089116299 seconds)
  done (took 1.697751642 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363686397 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277347165 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24523296 seconds)
  done (took 1.785752421 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320915777 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.255389675 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474464887 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326741241 seconds)
  done (took 2.372190096 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214032378 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138167967 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112702322 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107742661 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.204591435 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246026805 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143358562 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202171886 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09839375 seconds)
  done (took 2.405193321 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199736501 seconds)
done (took 11.2710955 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.257772915 seconds)
    (2/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.259969468 seconds)
    (3/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.175844315 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.21327186 seconds)
    (5/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.236313546 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.152619479 seconds)
    (7/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.106376783 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.169418652 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.153661076 seconds)
    (10/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.203155432 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.154033221 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09408454 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.12171872 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101105741 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126223376 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120759431 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.236919318 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10730532 seconds)
    (19/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.130344947 seconds)
    (20/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.230547814 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121436443 seconds)
    (22/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.18047859 seconds)
    (23/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.145059501 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.103481224 seconds)
    (25/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.144644667 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.21844576 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.122036721 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091665792 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.183445299 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.136938732 seconds)
    (31/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.24798159 seconds)
    (32/309) benchmarking ("sort", Float64, false)...
    done (took 0.174703456 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.177444009 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116702768 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.21310124 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.125779421 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.101160684 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.252317708 seconds)
    (39/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.124851804 seconds)
    (40/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.22377339 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.216222829 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122129456 seconds)
    (43/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143860828 seconds)
    (44/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.199227004 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.07979302 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.126254655 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.125472781 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.121797108 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.146173015 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.197515274 seconds)
    (51/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098084863 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.181930515 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.252887784 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.124751522 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.142427889 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122519816 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.187329946 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.189021997 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.100473743 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.098297348 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.146960323 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.122722982 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091712218 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.147257363 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149142652 seconds)
    (66/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.173474064 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.127372785 seconds)
    (68/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.130564832 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095474203 seconds)
    (70/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.165518553 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090117396 seconds)
    (72/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.096112526 seconds)
    (73/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096634304 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.111094857 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090858138 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.140586098 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11955887 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09842672 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102782985 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.185833709 seconds)
    (81/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.12612486 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.162468822 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.177656145 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.141989128 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.123924293 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.091742772 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.203721149 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120946068 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.176416681 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.117517642 seconds)
    (91/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.231343325 seconds)
    (92/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.191060994 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.113035537 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.184548063 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.200685975 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.19357769 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072177022 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.195010113 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132089124 seconds)
    (100/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.120216591 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122416811 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.162987738 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11681828 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091079366 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.122861119 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.099319662 seconds)
    (107/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.096468571 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125761389 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.223251015 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.141540422 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.183474507 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098395577 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.212755836 seconds)
    (114/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.095038909 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.241384672 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075078428 seconds)
    (117/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.088901586 seconds)
    (118/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.36938906 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114690315 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195848071 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11748089 seconds)
    (122/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072456348 seconds)
    (123/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.159150613 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191954163 seconds)
    (125/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.071193022 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097897263 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117728392 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.071689828 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.183605777 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.186727355 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.124270071 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112335083 seconds)
    (133/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104553861 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.100271562 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.140814244 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.130025828 seconds)
    (137/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.146885803 seconds)
    (138/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.086806566 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.222218914 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.190350676 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116237234 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.114075141 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.097519618 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083536905 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.115408868 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.175975058 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092069756 seconds)
    (148/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.071235376 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.143762758 seconds)
    (150/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113254583 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09978073 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.116963228 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.091552246 seconds)
    (154/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072518913 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.116434948 seconds)
    (156/309) benchmarking ("sort", Int8, false)...
    done (took 0.194634001 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.142282651 seconds)
    (158/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.157729153 seconds)
    (159/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.170490123 seconds)
    (160/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.081631796 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.116391278 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099257913 seconds)
    (163/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.142196626 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.163966754 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.188396961 seconds)
    (166/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07283613 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090902655 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.125335761 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.104313926 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126532621 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.070888264 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.147373441 seconds)
    (173/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.127973326 seconds)
    (174/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.096998324 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.071525561 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.095287937 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.073179635 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188956038 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.221560718 seconds)
    (180/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.12319282 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.195400428 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.07133301 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.126826435 seconds)
    (184/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072944117 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.182794859 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100180122 seconds)
    (187/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.107484677 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.092723455 seconds)
    (189/309) benchmarking ("sort", BigInt, false)...
    done (took 0.250853926 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094781855 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.072989596 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.096581016 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103963508 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120650765 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.098020483 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.145290357 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.125358099 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.073432807 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098114025 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.119004496 seconds)
    (201/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.14595285 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.102951116 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.115546416 seconds)
    (204/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103326685 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116542993 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072779858 seconds)
    (207/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.146351518 seconds)
    (208/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.170183723 seconds)
    (209/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.104023542 seconds)
    (210/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.072274585 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.116912564 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072218627 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.117509429 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091188772 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.132711707 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.129863227 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.102871869 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.123570171 seconds)
    (219/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073596792 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.141186816 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.101662525 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12556261 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.073719981 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.148484233 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.226508001 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088284344 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.117071709 seconds)
    (228/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093365465 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122382671 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.157397692 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.12682546 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091139201 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12434391 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073242886 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.114934754 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092820463 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117032419 seconds)
    (238/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.101090154 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.097388436 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095061006 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.120859151 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075125601 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072775339 seconds)
    (244/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.098097847 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.196872731 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093195046 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.138056698 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.161984356 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093321172 seconds)
    (250/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134831373 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.103345783 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.117875749 seconds)
    (253/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123336821 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.195436389 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.123446868 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.08255142 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09148863 seconds)
    (258/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.097663953 seconds)
    (259/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.074288575 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123987374 seconds)
    (261/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.100677458 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.1403049 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.093787025 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119127522 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.0735569 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.116990146 seconds)
    (267/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.083903349 seconds)
    (268/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.082504891 seconds)
    (269/309) benchmarking ("sort", Float32, false)...
    done (took 0.18318021 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.124999799 seconds)
    (271/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095908289 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.187785914 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07216268 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.125053107 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.230660633 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072704072 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125923137 seconds)
    (278/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.073045356 seconds)
    (279/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.081896169 seconds)
    (280/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.131825539 seconds)
    (281/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.122235653 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.101642622 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115719243 seconds)
    (284/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199739061 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108180868 seconds)
    (286/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095433602 seconds)
    (287/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.136893069 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.074328326 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.132088058 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072918241 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.144841845 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.073575637 seconds)
    (293/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097620063 seconds)
    (294/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.075755339 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.124304975 seconds)
    (296/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.09199009 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.073092839 seconds)
    (298/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.116257108 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.100657974 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117936011 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.117936073 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.099548319 seconds)
    (303/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.12108823 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.07519221 seconds)
    (305/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093591486 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.098271892 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.092473093 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.123138954 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.073261311 seconds)
  done (took 41.55698204 seconds)
done (took 42.454358712 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100388508 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150933509 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099463548 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143004553 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12931473 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097783464 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.126211866 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10408042 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.131511382 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.131979598 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104680326 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.100675294 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102997777 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128597115 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102553683 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147153328 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.131827917 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101111687 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.126983982 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091492668 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.127471263 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092481958 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.119656148 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.076184991 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.129717792 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.100273911 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.123732637 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.126570579 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.091726134 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.1169908 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.096738937 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.124614318 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093049233 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.131738841 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099919531 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.125639221 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103048743 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.127353903 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.093198776 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.117339885 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.125285497 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093700048 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.12307401 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101503623 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.122815441 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.098581846 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.126157304 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104932013 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14740118 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122612201 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.101542976 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.128283389 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102379811 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.124772871 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.097840376 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128629069 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.097640937 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147803467 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.128288451 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09903903 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.125939792 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100748928 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.123482434 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.100891893 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.126974975 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.128219442 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.105844796 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.122810145 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10387987 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.124433091 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092537062 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128292217 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.096649343 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.118889706 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.102056928 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.1291157 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.11646766 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.097334738 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.124345358 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098634583 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.117104384 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097031521 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11951241 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099408752 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120646288 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.076633907 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.122050007 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.099880456 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.117052981 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.103042579 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.123870662 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.100415787 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119606019 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104916818 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117979277 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098312226 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.119770442 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.093012597 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.121213656 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.096500519 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.117781329 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096297565 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.125417159 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094531769 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.125227537 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130792611 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093609932 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.124695618 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.092763222 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.117035497 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107751954 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.128786391 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093521667 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124287135 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091066682 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126448268 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.092365238 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.118128865 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092520194 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.118883132 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098491776 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.116899716 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121414991 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.101776696 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132355541 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093710313 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.121586147 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097505036 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.117864085 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.099396587 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.118551754 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.094325222 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.120169638 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08470507 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12074672 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093545749 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.125833621 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098141297 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.126832175 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.095482942 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.128258898 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097634882 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.124267297 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098164048 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117717703 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080223845 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123515577 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096441603 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.121020252 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092849505 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.121854605 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.093067905 seconds)
done (took 17.973117154 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088127305 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.193602979 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.160119854 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.152029063 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114669883 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.118628274 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.128834824 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121630746 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119392092 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143336663 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113576483 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.139119417 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.156493273 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093910478 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119652911 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097826663 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.120208642 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109724103 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152907783 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.140391396 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.17147705 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090399969 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155480775 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142691834 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12340447 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107428763 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.119051294 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.098670641 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122624035 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12007352 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.140487329 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.094584468 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114801948 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137554131 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10710434 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.127510606 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090760279 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.127539545 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093327621 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.120748759 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.149769496 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.141774298 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099675858 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.123773462 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098502573 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120939197 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.095865694 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.128360992 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104965872 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123166711 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133045742 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160439769 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093578474 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128621139 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.090023505 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.129752682 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.127662302 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092923747 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120159692 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097760841 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.118168 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098192775 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13518606 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.148554192 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098438671 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12948414 seconds)
  done (took 9.032859302 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105646789 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14573167 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.112359299 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.149517055 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.117667138 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093401753 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.119662453 seconds)
  done (took 1.807709091 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088789185 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138151478 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118922233 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144417561 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140953354 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.116221194 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130379164 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094498005 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.138964335 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095114628 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.140739723 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161088955 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097076577 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.128872742 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14595072 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095759184 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145405734 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095139921 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124721419 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118941443 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122330097 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142878489 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.097622781 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.121276762 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110378077 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.12205572 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.171215218 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101261721 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122910429 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098934973 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12060468 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.174405031 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.112204314 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.132944093 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121225888 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111520989 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136834133 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09385238 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.138117125 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101357855 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.136664445 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095261813 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.124003891 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119052384 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.10201286 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.132429255 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.097766338 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.121607045 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099171891 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142399811 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096325405 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136378071 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095687287 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.129244026 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096192758 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126483177 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131303491 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.097012449 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.142665112 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097880911 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139758786 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11317195 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136315361 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139063411 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098801974 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136407869 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109272968 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125196547 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096346507 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124045937 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138938334 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.094732538 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.123528417 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107487513 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123539759 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120425709 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146669281 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122876552 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105334413 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.120432714 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094099481 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119714707 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113454466 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123999757 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089580944 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122406489 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091942831 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114203471 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088606174 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.122239746 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08715385 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115858846 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117079382 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091013176 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118419321 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106764247 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.121451656 seconds)
  done (took 12.463911142 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090826805 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116090869 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092388457 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118470181 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095798741 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.122530434 seconds)
  done (took 1.612934871 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115410048 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121144321 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104654997 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121497184 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157630163 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129512518 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105950418 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129687316 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107473545 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129294633 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129313996 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105317707 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136974798 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120988304 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105367367 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121250008 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.12962676 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101199286 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127468138 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097109714 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137744169 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122499532 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097102069 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133237129 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11842153 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09635942 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125987023 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102541645 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128211095 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123325462 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097144779 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118750587 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09631392 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123435151 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129909544 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095745211 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122204631 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119369711 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102307068 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119181774 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106928846 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127325947 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126421649 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096513744 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.130348876 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124349967 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096707829 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131878005 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.106692833 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12184236 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119046736 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095578242 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120405448 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095116647 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.125854709 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123899952 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095173403 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135609686 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121851375 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097498057 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121276841 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096133838 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128426275 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118375869 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105117586 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119654384 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096860826 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122900685 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122111376 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096798454 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120484254 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094094695 seconds)
  done (took 9.328053684 seconds)
done (took 35.210757538 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689559819 seconds)
  done (took 1.664455503 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.711213472 seconds)
  done (took 1.689547834 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.813332424 seconds)
  done (took 17.789922993 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.501058286 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583777748 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.883785709 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180837357 seconds)
  done (took 3.128353151 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947387916 seconds)
  done (took 1.941839882 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296842452 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25812436 seconds)
  done (took 1.537559906 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.767861927 seconds)
  done (took 1.755891143 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.355216743 seconds)
  done (took 2.336464389 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331565656 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184814405 seconds)
  done (took 1.507006351 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.554353257 seconds)
  done (took 1.545072984 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.779968842 seconds)
  done (took 7.776889714 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269742299 seconds)
  done (took 1.270247127 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301689402 seconds)
  done (took 1.294131342 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.448233821 seconds)
  done (took 4.441979097 seconds)
done (took 50.663875458 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100149402 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129810868 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103550058 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123934414 seconds)
  done (took 1.446156545 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101453956 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120608206 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102352379 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12667435 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.129281179 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100814121 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.130598625 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.108492635 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.128596286 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102881967 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12767538 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122564498 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099862515 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122465345 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093551263 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124488143 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099324311 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12181218 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124018208 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097755526 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118838424 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098013453 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124901941 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094533378 seconds)
  done (took 3.716646285 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101623295 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118116704 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098217255 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121649087 seconds)
  done (took 1.44104822 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100281853 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141317598 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140055879 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10090097 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145955259 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13509576 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092846878 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116967961 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094957047 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124740962 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091101123 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151445617 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137599518 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099562628 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126676253 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088634427 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117425748 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136795333 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099664307 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125682671 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094949919 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124625654 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090805574 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140099708 seconds)
  done (took 3.815271172 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170090159 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.147428224 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139065988 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095559927 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159924407 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140935283 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088410054 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141260747 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088798953 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131488161 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11739317 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134070174 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129255332 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087855433 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113929151 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087245999 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129288564 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129474996 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091312955 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.142454687 seconds)
  done (took 3.468615037 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097904103 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116533678 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090419937 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118139652 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099609452 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120542331 seconds)
  done (took 1.645538785 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091560208 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113940366 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090666946 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113531522 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094641799 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115420162 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089073556 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115176677 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089454936 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114639045 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089542668 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112778226 seconds)
  done (took 2.233069386 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.461768967 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093343073 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120545738 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113155343 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097442779 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114546591 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103808035 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118221564 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140151749 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089471268 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113787694 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09186751 seconds)
  done (took 2.65991723 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233359621 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125465127 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285210984 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275449258 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157949744 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170940436 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285424216 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161303805 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22566103 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160939859 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214457981 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23088297 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160861244 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198566802 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146238195 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.127041707 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231132485 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240894881 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152722375 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203235527 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224718572 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166061257 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182627156 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158937695 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120593076 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207556519 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102858743 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138469909 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217077644 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2099576 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197126608 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170574681 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152855733 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243811367 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255983256 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193598725 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285633146 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135884717 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171390843 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16789841 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262904396 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113005072 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231736874 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155434367 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130877108 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192559133 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166312974 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176430287 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153031297 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148456893 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230785305 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216844279 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.220895796 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110947733 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234305643 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15555181 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167809297 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195539897 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251434917 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222643303 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178001879 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119956316 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188438209 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190428713 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211176088 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168203351 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181353132 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147275167 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192038688 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18813686 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191926586 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187154393 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211708339 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115175282 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169375043 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198304849 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173590197 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228594376 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203065989 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09525521 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172632 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149412853 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133124076 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196175737 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097866326 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239410336 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149089162 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163617736 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217977273 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160413236 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159640426 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198281092 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220586014 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147520844 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084019814 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155526649 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157096558 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191233204 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140153385 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159998577 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161785393 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130198848 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178703853 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123066262 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175664794 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091151306 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180644153 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214511399 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100434534 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162267368 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156033999 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152610927 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179947637 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225889226 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11606449 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136937972 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210484191 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203430988 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149486516 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179769698 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201986625 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145578399 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151772133 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198817142 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247077418 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144250165 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202140117 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156581222 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135993779 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.108920091 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218135093 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162916195 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.170801215 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116868501 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.218665785 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210351199 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.129167286 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114195085 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219315514 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132081708 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105865893 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164444037 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148292842 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140752282 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145769299 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151606122 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18155092 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178616009 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153930717 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163741776 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15254885 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25315733 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141592347 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150467666 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1221553 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121521425 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192780118 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227286854 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104187995 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232737154 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171600311 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229494636 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168406434 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107936498 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176756401 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13040378 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120193671 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194773602 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16924432 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166146072 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197360695 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227576545 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178605593 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.209424282 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175433394 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175429195 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166891362 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165217651 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.147097261 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14133503 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200419654 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098739379 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149748273 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.140698103 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148083353 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116902287 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134527049 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225520937 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173017203 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199768589 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160394748 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150167177 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181570729 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128862063 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173962744 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179556142 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147511398 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226264777 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195101163 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187713731 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144060189 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226489083 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094122445 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128656185 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119075221 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198026342 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106942348 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1365488 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167826922 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183332964 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207504847 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176957541 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211693146 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195822949 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19171214 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095061303 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172329759 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192498166 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205488243 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161956702 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13962407 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151127901 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17889574 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159142771 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254836139 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168326184 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176396262 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234690627 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151219444 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105023683 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152862374 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187732926 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155426784 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17684783 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148276049 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141305573 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161635038 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13433665 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161052925 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182604236 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162566034 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216858407 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149553616 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184902066 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126698489 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165987546 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158470935 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164789612 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081847578 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179322504 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233029457 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150570291 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168098352 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192853952 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131839092 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311150671 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20766703 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218068297 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139911939 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160268885 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161488992 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164019116 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172377693 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178725429 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160196268 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187558515 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158255647 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135924451 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113549572 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148866641 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151141313 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131136132 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149292622 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178144059 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140251727 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185519882 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16192941 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161489451 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17532963 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150806266 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117999806 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152068443 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243406251 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177588192 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23859506 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15203506 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180796731 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205292965 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12677351 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104630287 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134202294 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180257311 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141583127 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196319364 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.226199054 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20679312 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206054745 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187744712 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141669988 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09302109 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159700225 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17610511 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235205067 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151940993 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158122486 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202364718 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.14351255 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11132266 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180666496 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233051541 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14550806 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197096522 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109688074 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274407294 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099762364 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134081775 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164460217 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236104459 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109659051 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185879397 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169815813 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168609251 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170328001 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152442971 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194032787 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242729814 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202059512 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208940921 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.112089264 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165087646 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213344117 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198218144 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16430831 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141950378 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204327062 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197208817 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.2276443 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114714269 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198333039 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172479781 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165065336 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194826711 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142041887 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208151668 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135371948 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19274197 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15341 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14245756 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177139075 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.21487114 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141461686 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189886464 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182046759 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141140482 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104611431 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200762712 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178850608 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159355532 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101484987 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211679279 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099840972 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222269528 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22893854 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134717439 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155711854 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147204287 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13487613 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156537597 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157928748 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112480583 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164509108 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202078393 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134957544 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218319167 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203582379 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169092941 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20214429 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117222953 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69348867 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130833231 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194780083 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155980763 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235356258 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149022864 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175254587 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158298926 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168606266 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194785577 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161715503 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232615631 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218990681 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180188542 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104225762 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184459164 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161833454 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.115660079 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151117743 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168899 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160517354 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151944078 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178482459 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19617383 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107347795 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141895524 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199114043 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156187062 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208486627 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178534015 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111323189 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173566253 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216671941 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133235323 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180837285 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234034995 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115147535 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152580827 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134473958 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15592683 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260361278 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097218434 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229994417 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17688011 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158420591 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168349752 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147619073 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192420368 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157262241 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178762051 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145604869 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15911681 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156188366 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138204058 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129936947 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154615662 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166872039 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121432073 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184945105 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138184472 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192367455 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124676292 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144429494 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199137041 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215069155 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215173241 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135851358 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107327965 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163472696 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151685081 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178063093 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204553968 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107427215 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13715973 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136818632 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131455653 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138622456 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154826647 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19754546 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166471114 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234759539 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109747282 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280005935 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141040038 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154858373 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089203141 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132487242 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150737024 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146458956 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159565434 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192559426 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262168125 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14658779 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106431712 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150454801 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125529892 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108253505 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166643778 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163250142 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2034489 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117708593 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109658656 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157941374 seconds)
  done (took 83.222950862 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162573536 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13157402 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145947727 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201285311 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176002644 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270461714 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209031783 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254523289 seconds)
  done (took 2.649545066 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093438384 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145972266 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158895656 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13252655 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091613184 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119187935 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34429254 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.140291274 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114695091 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121521041 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172397628 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093207401 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.561147757 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.098242488 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.129079754 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107715908 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092204229 seconds)
  done (took 3.807879027 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.472844646 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.717790086 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.517763294 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097136222 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.109961618 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113101609 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.650700735 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193211543 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113883463 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.472818709 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.773250451 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157656693 seconds)
  done (took 18.487041856 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099097775 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120488162 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107996031 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136205498 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095730954 seconds)
  done (took 1.663926804 seconds)
done (took 131.247682686 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104029947 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.415935707 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.079496042 seconds)
  done (took 1.627491064 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10759724 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.1370291 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112550417 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.140865504 seconds)
  done (took 1.607297389 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098237601 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126475989 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111285628 seconds)
  done (took 1.438624268 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.326243282 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189080743 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.165221896 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106035628 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128930889 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102831523 seconds)
  done (took 1.440805637 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097890921 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127110084 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0989086 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129378618 seconds)
  done (took 1.556892258 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094710596 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071996177 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10465711 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078659324 seconds)
  done (took 1.448848036 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114579091 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132240117 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104467566 seconds)
  done (took 1.455793749 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130080888 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138116275 seconds)
  done (took 1.37271345 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105955731 seconds)
  done (took 1.205765833 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119076327 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.17021391 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.199134753 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.171642895 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.233414201 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.168290227 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.149195687 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.122984735 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.138988924 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.153151374 seconds)
  done (took 2.730874189 seconds)
done (took 17.772126863 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103249689 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.514664008 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421158165 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12062841 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.733010264 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388752176 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030667821 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156914744 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175907505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10114362 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149602753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690854649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.05537317 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.478078334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.013584861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.472846212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702632814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092888763 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119517783 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094879117 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.00490606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100151033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132103193 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100471295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.713581724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.434998663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.104584472 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.474855676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100237182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134606837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.388535474 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127368159 seconds)
  done (took 17.526479137 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095247215 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175036299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.107169127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141615896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133122028 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103586345 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.133350879 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102416063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188684663 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131985003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120808341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.1294353 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127498596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096112676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141772378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092752731 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124782149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09353174 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121780639 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121059938 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111476529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11966313 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094290716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120884562 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094469665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134579118 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121860469 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094782309 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119788266 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099275828 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127491285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095397169 seconds)
  done (took 4.926123185 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140386755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182875979 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133587901 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126960446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.173047217 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126204348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198534535 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124535968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184218084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.132583786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14858843 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.100558765 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.166093921 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.130933627 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117465562 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.128835425 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102723789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12148435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092453344 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122400542 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139268294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098759222 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123001647 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092895199 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122852448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107585066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123105924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120793954 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093110814 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127047609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099349157 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122743632 seconds)
  done (took 5.238836721 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097163819 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125863666 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109169341 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137977465 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095926647 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12481221 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096762598 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124026505 seconds)
  done (took 2.021314257 seconds)
done (took 30.814126047 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111920024 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126466115 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.110595902 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.141833718 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.105131512 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139518007 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.095329854 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.140984452 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.141696537 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.109234732 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.145193272 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.098026164 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124889341 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092454928 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134895601 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097832889 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134526118 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101946049 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13777661 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131047501 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094035756 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132414939 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105617794 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.140396149 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104001055 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132804877 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137580621 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101741324 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125139074 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094777178 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124998843 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111268746 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131611625 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111511399 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12871445 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098174874 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122978835 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094836964 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132387565 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13216437 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.102896208 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.140324002 seconds)
  done (took 6.126233338 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108772943 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.150277082 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113832684 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.089764616 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.123838516 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08041333 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138336242 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.085976523 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109906394 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10875364 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.080841813 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105992023 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078122424 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100827307 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077783671 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074807394 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108045138 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075462052 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076257729 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105524381 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079818025 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07294985 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.112587416 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07800918 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074948582 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110443704 seconds)
  done (took 3.643315163 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100139765 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135894885 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113096496 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184026905 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162420603 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100669978 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132158614 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139074225 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108734278 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119932448 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096200464 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149445546 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110465338 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128489744 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091672673 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136946261 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135023426 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094726573 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128038451 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113254913 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139025443 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101767667 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142083595 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132171159 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091692726 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122414476 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09654611 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134529359 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098026238 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130468475 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.124255088 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096954579 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122592429 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105092197 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130835011 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093687942 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141842202 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10241254 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13038682 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120114247 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096537901 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121338826 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113513986 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167232758 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092489546 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128620148 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.130384102 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103093635 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121524435 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110864105 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131402193 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092025374 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125248848 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091335168 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121580337 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106741126 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124135521 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094455447 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130489819 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123661094 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105315903 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124253355 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108579772 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121887741 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100257894 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121098359 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092925344 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12070664 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142958743 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096720475 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16367035 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099897565 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125657144 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100815201 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129122036 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127072478 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093297909 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137373885 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105981894 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.131240936 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102088977 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125757759 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095195625 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140870485 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123174355 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095130967 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122105544 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100265891 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124780749 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.10222828 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136522038 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093335399 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124635342 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139139377 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093455553 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12292708 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100591466 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126722279 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092559856 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135033799 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098576348 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12270832 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.1317232 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093802448 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124896798 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103336951 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126301652 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090788424 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126617196 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098890504 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122574121 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093377754 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124249109 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093747809 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131625482 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12778428 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.09806817 seconds)
  done (took 14.84799833 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228119753 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215942537 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.236723048 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260924849 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135334669 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114678534 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211802554 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155170293 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123256332 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159942495 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162558692 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181299659 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.14170942 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.184991586 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.139635661 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121777272 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112328693 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164706134 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214172959 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.288782963 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112463357 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132060854 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161071639 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160373206 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106397135 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132983671 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139211799 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105379562 seconds)
  done (took 5.737411835 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108154894 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155895086 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098756775 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14376813 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148337764 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093254587 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127150773 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094251127 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135768547 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135569622 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092581238 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129307369 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099981237 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131399475 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12239885 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103147812 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131340722 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094338147 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126115753 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09679574 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129182067 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100896068 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127268558 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12030203 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102954748 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120525775 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08657166 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142071996 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12119583 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115721966 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.11996243 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098748502 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133478707 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093071124 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12288343 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095874611 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124594382 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094992667 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123815636 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090730969 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121628672 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077524929 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121652487 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134790529 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099946425 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079668906 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131396036 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127237778 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095422623 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12010607 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096764833 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124276837 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097448586 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130112226 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098327474 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123576006 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097208412 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115603688 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100159772 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125343372 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084806028 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128231029 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098416183 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117612119 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101024274 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127583881 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092179854 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124948631 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097059295 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129313182 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095273412 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126707346 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091545776 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125533156 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095258514 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126861716 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096571742 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122227987 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121330253 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094327683 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075711214 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123414225 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074501774 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125962215 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091521013 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122212582 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096027758 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129351771 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136693836 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095552454 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131903572 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094359654 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122475493 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097041774 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115078797 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096256648 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138539951 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140711267 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093517336 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120641326 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10734178 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125129279 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092608517 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105765755 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100646367 seconds)
  done (took 12.945276685 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128252971 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.158544512 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094903369 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14270139 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.161244026 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157235057 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10126758 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129971764 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095368563 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142426164 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093341079 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131299991 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097423331 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136564349 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15921249 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106484024 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125780403 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107000203 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.137987463 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170614937 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11382164 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.147654194 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.112880038 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127664642 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127324945 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111105419 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16102354 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108278903 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136601176 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141053685 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108215734 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160347197 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142601435 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098916729 seconds)
  done (took 5.521587069 seconds)
done (took 49.93302826 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.223913828 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422886999 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.208437174 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.157689712 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.266397516 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.242631179 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.223030074 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.209771864 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.523981653 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.206731876 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.470029796 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.78999874 seconds)
done (took 60.08273871 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.229998878 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.342107409 seconds)
    (2/2) benchmarking "String"...
    done (took 1.47197278 seconds)
  done (took 3.950277597 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.559708351 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.126712688 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.479217647 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.206774028 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.223175898 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.50618277 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.788027227 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.507441933 seconds)
  done (took 27.979649895 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.217326955 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.582195209 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.625664902 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.624703441 seconds)
  done (took 18.18581606 seconds)
done (took 60.041235928 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.218901575 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.28010111 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.251228894 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.194440904 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.317971265 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.241184288 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.535105336 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.232168516 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.225467044 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.198118813 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.233180865 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.226841351 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.210172387 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.56002476 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.216530098 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.203532266 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.234469982 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.780569734 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.572891148 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.219762994 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.223493873 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.258626316 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.229151368 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.206997058 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.267272022 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.207908925 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.211281513 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.225958902 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.252507656 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.210048989 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.306938789 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.71951253 seconds)
  done (took 190.606848781 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.201687643 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.119945659 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.224739132 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.229824727 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.38568745 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408993728 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.337390377 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.642424289 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.226952977 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.229624639 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.339404095 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.214259986 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.421134911 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.256831358 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.221758 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.204592084 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.424163148 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.453481588 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.228922055 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.435207954 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.220725654 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.301577737 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.220957646 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.333153764 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.261720179 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.231403122 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.235102721 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.230973266 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.402069303 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.337484974 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.231274658 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.228149996 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.742712175 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.072131868 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.210579455 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.222752873 seconds)
  done (took 148.824457937 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.482267772 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.201545777 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202295903 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20246948 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.230520442 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.20194142 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.692510717 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.700812456 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.695929506 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.417188778 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.273615733 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.43642159 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.211443777 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294970298 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.202298861 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.216310661 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204469781 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218685701 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.243168097 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211780687 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202263419 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.693554308 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.22458773 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.273483608 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209523918 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.203766247 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231078568 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589537845 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202886786 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231817294 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.523511294 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.253242532 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204586963 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.514859692 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.270673684 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326362003 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.220124046 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232333761 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.216279935 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.479448652 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.219133821 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.213956576 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206402525 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207042649 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.799980621 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.214842399 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.698013752 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.217731937 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.110673067 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.216111058 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.218299464 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.511406866 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.754756005 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.231448601 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.217197018 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.21249788 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.208372555 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206856486 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232684781 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.465549515 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.303185979 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221344395 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.209572128 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232905496 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205871719 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.242256146 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221148478 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.736564221 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273222598 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.318335977 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.698417711 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216977954 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300254483 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322650615 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206263563 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205958498 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207238114 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206768457 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.313656937 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.206710155 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.581301221 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212352324 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208899668 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.264415304 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303182757 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.207825737 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.532714764 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.219315667 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209605017 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.207706602 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.92172014 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311673517 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207673856 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20615594 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206897575 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.585090278 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.701055039 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.387998825 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.221072302 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.21483475 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.483286524 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.222572421 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.610062276 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.690970676 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.82759548 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.219894543 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325789172 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.218672488 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218945514 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219610663 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.249166422 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.228280672 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.276660715 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21040521 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.610847486 seconds)
  done (took 345.237223819 seconds)
done (took 687.291098914 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.877567554 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.854812155 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.969309814 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.84797904 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.835865082 seconds)
  done (took 10.530058508 seconds)
done (took 11.666276006 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.392361622 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.377956269 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263211545 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.379610504 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236339298 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.394825159 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.357908321 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.229266714 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.313151766 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282287367 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.303465445 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259038037 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235529861 seconds)
  done (took 18.172227884 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526002955 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.501219838 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272366531 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.527154552 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249207702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516527324 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405990042 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417954145 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422885479 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239767328 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223990087 seconds)
  done (took 16.446390744 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.523152159 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528607166 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277124268 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.5188043 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250877004 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53753584 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.41025909 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418840682 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422775146 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24213273 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231908651 seconds)
  done (took 16.503691492 seconds)
done (took 52.260693207 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.228910376 seconds)
  done (took 2.371990453 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265488126 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.416777394 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.238646818 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224591274 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224449031 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222010676 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.229134773 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.221545422 seconds)
  done (took 11.183723081 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.220087936 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.220544109 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219765934 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.223624781 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.220598884 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.221682859 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217827215 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.220318694 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.224454014 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.218990767 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.218011857 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219775292 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.218526636 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22304541 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.219638613 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219622946 seconds)
  done (took 20.66691009 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.220864868 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.223628324 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218976378 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.218845858 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218797949 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.2194037 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219262481 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219507591 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.218525474 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216915443 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.219229265 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220005345 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.218943478 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.219852934 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.219345199 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221102658 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218125523 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.217806351 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.223641598 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218443456 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.220896202 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.218875311 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.22019276 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219689575 seconds)
  done (took 30.41334762 seconds)
done (took 65.780523678 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.150974779 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.783463617 seconds)
  done (took 9.075413383 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.221561624 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222025184 seconds)
  done (took 3.586797496 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.220926231 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221411234 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.221943403 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.220964877 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.22249831 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.222243696 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221512479 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.22177712 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.222795383 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.2223364 seconds)
  done (took 13.361280941 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222315667 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222565834 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.219574287 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222556814 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.221198994 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.2197581 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223040451 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.222885693 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222394931 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.221696735 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223184129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.220550715 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.222033938 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221755942 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222440879 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.219936646 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220323632 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.220102193 seconds)
  done (took 23.131724806 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.222217036 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.222651051 seconds)
  done (took 3.586850076 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.221307552 seconds)
    (2/7) benchmarking "second"...
    done (took 1.221647605 seconds)
    (3/7) benchmarking "month"...
    done (took 1.220072612 seconds)
    (4/7) benchmarking "year"...
    done (took 1.221303333 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221603159 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.221210682 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.222910939 seconds)
  done (took 9.692561478 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.22506898 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.398115462 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.469468517 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.829347015 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.227283227 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.227177481 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.090316158 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.227907383 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.228868251 seconds)
  done (took 14.067445928 seconds)
done (took 77.643690024 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.208697926 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.233672003 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.357024289 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.223290462 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.234707129 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.56180373 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.271821928 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.343666295 seconds)
done (took 37.578343535 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.238832108 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.927387524 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.943241867 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.232735337 seconds)
  done (took 11.24868133 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203664976 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.080629118 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.209417618 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.169656852 seconds)
  done (took 17.808822579 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.163415464 seconds)
    (2/2) benchmarking "read"...
    done (took 1.567637405 seconds)
  done (took 4.877486652 seconds)
done (took 41.317879007 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227151311 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.22400475 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.225553253 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.223896535 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.226853973 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.224126794 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.222963956 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225784463 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.226133961 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22639613 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.226914724 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.225542016 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.225763676 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226626286 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.224615396 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224450774 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225485702 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228258453 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225552188 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228432975 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226736882 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227714295 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.225678511 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.225133518 seconds)
  done (took 30.567252581 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.226485189 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226370315 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.226198628 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228591511 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.224423724 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.226622651 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.229315548 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.224738087 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.227315771 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.228048031 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227119066 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.22566601 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.22838782 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.225911692 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227267134 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.22555195 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.228581465 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226117637 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227785679 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.227945586 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.23068099 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22625288 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.226031726 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228037547 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.226032919 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226860617 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.22933473 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.226596124 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228345526 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226229612 seconds)
  done (took 37.960688533 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232344702 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.233725576 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.228417612 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228191757 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.228920375 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.228258567 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.228618025 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.228400225 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22900571 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228556587 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229168428 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.229901907 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.229648504 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.229375737 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.229198526 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.228807335 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.229087757 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.228800203 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.228642056 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.229266266 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.230041706 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229571473 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.229552921 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.229968003 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.22976899 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.23139505 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23082779 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.229985058 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.230118092 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.230187855 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.230629933 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.230608085 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.230771625 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.230466332 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.23139554 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.230438388 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236501472 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.236516697 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230468855 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.230818887 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.231831918 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.230076121 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.230581985 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.231274982 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.231517487 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232449614 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.23185887 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.231236667 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.231525543 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.232905674 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.231026985 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.231558483 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.230695767 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.231693893 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.231404437 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.23276247 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.23178568 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.232245612 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.232280142 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.232561135 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.232567335 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.230709658 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.232868807 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23204893 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.23367801 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.232997808 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.232658707 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233568589 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231889478 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.232303777 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.233884623 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.232786274 seconds)
  done (took 89.782063369 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.233350603 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231020494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231390588 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229986059 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229829692 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.233066417 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.230797853 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232273781 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231286177 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234153456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233330456 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.231048171 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231587735 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233845824 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233588817 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.231028185 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233246784 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232078834 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234648922 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234596105 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232936298 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233037116 seconds)
  done (took 28.265243627 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232292593 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233547329 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.228186352 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231944121 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229947998 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232999089 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.234612503 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225833939 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223097499 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220830667 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222430588 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226912618 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222235712 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221619723 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221802842 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220345068 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216370017 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216396893 seconds)
  done (took 23.216896201 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.214691884 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.213818891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.216448098 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214350693 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.213690878 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.213704707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210541307 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.213307859 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.213162238 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.211129995 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.214201867 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21401911 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.213908833 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208067352 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210594057 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.208514106 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.211232948 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209410564 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211071781 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208246529 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.210569494 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208164853 seconds)
  done (took 27.801338979 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207413064 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.207307766 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.205610478 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.205698149 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.205289242 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.20816363 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.207117548 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.20327196 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.206442092 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.206086408 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203341438 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.205585489 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.205454922 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.204834613 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.204432646 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203767694 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.205211845 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.202832381 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205667339 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.202609971 seconds)
  done (took 25.234632931 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206344778 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208525338 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.205496312 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204883344 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206060187 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.205306564 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20505451 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.204885676 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205996376 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.204988305 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205169885 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203357392 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203598821 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204065126 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20423631 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204444968 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2041557 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204664969 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.204628358 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201503393 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.201991422 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.200420775 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201290697 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.201003651 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.201379702 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.201394387 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20320348 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.205981306 seconds)
  done (took 34.841121901 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215995335 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213107381 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.212530854 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.212621819 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.213494295 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.21253485 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.213488479 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.21019952 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.212658609 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.208812517 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.212258283 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.212627019 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.212527817 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.212854392 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.213882644 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.211174502 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212266613 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.20992718 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209997381 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207727263 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.212157545 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212598328 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.211663454 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209159904 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209175328 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.212043528 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209700312 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209909004 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211229837 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.209700331 seconds)
  done (took 37.477825437 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.231000157 seconds)
    (2/2) benchmarking "in"...
    done (took 1.231960175 seconds)
  done (took 3.588509932 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.210281792 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213955642 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.212410954 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.211102856 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.211008959 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.215230757 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.212085567 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20952243 seconds)
  done (took 10.820544359 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.211001348 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.21178469 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.211928872 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.20965586 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.212525806 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.20598494 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214406309 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.226086122 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.21112806 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.212520094 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.218275248 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.219296211 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.216057399 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.209559189 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.209565891 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210962965 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.206382801 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.209962682 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.208368914 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.203521188 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.206059094 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.205443923 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.202640581 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.205690315 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.205379468 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.214366537 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.221472192 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.199488476 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.198904053 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.211035146 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.20734868 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.205065262 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.207976904 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.207920192 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.201389056 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.208336207 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2138302 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219438876 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.214152332 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.217208882 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.199981646 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.200855227 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.209073435 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.209814034 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.212676109 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.21112416 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.207304917 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.204069555 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.206319917 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.211438111 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.213217382 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.206729104 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.207136434 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213895261 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.212114539 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212423102 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.222998305 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.206824631 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.21919309 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.218418606 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.227590031 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.229401281 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.209844895 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.20731152 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.21715234 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.230666721 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.218453119 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.225224609 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.209572614 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.210987717 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.215682654 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233379037 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.229833482 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.211963855 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209752372 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.205155104 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.211350742 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.211851366 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216712893 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.226758878 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.211769736 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208109765 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.216747177 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233024593 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.211554261 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.212722552 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.20925031 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.208427275 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.213013604 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.220874802 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.223995075 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.211717216 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.212057549 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.213619895 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.213629547 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.214657809 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.2048896 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210830785 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.210476618 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.210616152 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214010134 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.208176248 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.219548362 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210550889 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.208116393 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.21431498 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.222663021 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216028124 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.218081132 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.209623104 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.215483183 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.204782643 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.211388032 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.211168616 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.216494591 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.217083047 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.213095533 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.209003638 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.203760383 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.205286576 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223346574 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.234257143 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.209229167 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.215621966 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.219323388 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.225813264 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.204071094 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.214544213 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.212529218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.21365856 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.213381437 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.217012576 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.214782153 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.217001753 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214550465 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.207991092 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.211893722 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.215621902 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.216114732 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.210111507 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.212517403 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.21359553 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.217010478 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.218973058 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.214415205 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.211079733 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.221510115 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.227271499 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.214868919 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.211930756 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.207197189 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.218015692 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.217667145 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.2162197 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.21212463 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214404908 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.21155797 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.217268888 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.208321102 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.218281071 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.212128396 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.214987411 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219352988 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.217671207 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.212809795 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.209364234 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.206318764 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.217207174 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.217948852 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.219094188 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.215380829 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.214564022 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.221230374 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.222800699 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.212672361 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.217746154 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.212244629 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.216877037 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.21260431 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215257885 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.215757758 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.220906693 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.21852202 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.219556061 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.232148323 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.217792778 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.207785317 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.21480476 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.213820905 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215192408 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.212101704 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.220643302 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226005956 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236824145 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.202407436 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.197563776 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.19543434 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.19864 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.199086787 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.19356745 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.195745446 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.194445923 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.196787833 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.192969329 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.193543345 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.192668151 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.191479682 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.192286712 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.191961773 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.192847483 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.196304131 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.196434191 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.202643699 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.194140294 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.201835548 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.207760519 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.200217508 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.195951196 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.202601261 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.196149259 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.188002608 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.190896846 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.195908723 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.187528579 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.19105471 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.190892301 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.19107525 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.190014389 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.190493003 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.191626006 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.188860086 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.19769065 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.206121361 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.1914624 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.196574156 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.207819849 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.190405704 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.193720041 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.190617442 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.188121259 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.193946306 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.198454424 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.191916432 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.190588477 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.192648729 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.191189747 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.191922056 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.197750977 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.207590324 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.191338555 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.192211715 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.192412778 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.188982336 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.193107578 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.191139955 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.192927914 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.192711583 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.192749238 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.190776671 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.193437775 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.192863013 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.19202515 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.192019627 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.194642704 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.200320621 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.196958596 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.191279074 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.193249588 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.192569904 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.194815459 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.191314912 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.191796814 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.193060643 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202811857 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.214740986 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.198102286 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.21262004 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.194913796 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.197386927 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.212217138 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.195746256 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193595984 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.195277453 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.193656607 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.193866101 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.190914294 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194124819 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.193882924 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.193623968 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.193396275 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.19694952 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.194101301 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.194236773 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.195228544 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.195433504 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.1950291 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.195170098 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.192272287 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.196552934 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.195383811 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.193733209 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.194904974 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.201035881 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.213833192 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.196383966 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.195580401 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.195096616 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.196260722 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.194778361 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.196149536 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.196831419 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.202232962 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.198136661 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.202628178 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.196986842 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.203499255 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.194830982 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.199099907 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.201787967 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.194014454 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.194427627 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.196759487 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.196486028 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.204216075 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.214787126 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.197807623 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.198961479 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.196228832 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.196843733 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.197567816 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.19609642 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.197803733 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.195940566 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.203540964 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.213133032 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.200112749 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.198193145 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.196244189 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.19715629 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.197541068 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.194952145 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.198987109 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.19618049 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.19751759 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.197980585 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.196433436 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.19644636 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.197217183 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.198300518 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.19529649 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.198537176 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.202834225 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.215247303 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.202898264 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.199838527 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.205475657 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216898634 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.203933311 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.216593858 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.200188391 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.197769915 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.197263319 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.199722117 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.197218043 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.200658063 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.19815666 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.199626569 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.202822903 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.198906891 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.19988708 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.199095407 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.200626653 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.19878439 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.207930969 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.218796704 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.200965158 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.204991703 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.198602887 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.20119894 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.203655355 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.201186317 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.199213576 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.201248316 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.206914842 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.204958863 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.199056627 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.199531514 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.201509447 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.201370605 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.201652581 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.199522321 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.201308468 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.201123693 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.201371863 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.203013518 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202680459 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.201237894 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.20238412 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203137389 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.202395884 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.209244303 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.220649369 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.204818872 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.202841071 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.203913315 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.202171598 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.200937537 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.202381151 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.20309765 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.203149568 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.201881188 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20641776 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.207532224 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.203227739 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.201849291 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.202458422 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.202880251 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.202440389 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.202313446 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.202485118 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.203608578 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.202469158 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.203358661 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.20343261 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.202302959 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.203247274 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.204583336 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.20245428 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.203538163 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.208063244 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202394207 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.201749445 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.202193163 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.203941271 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.20218391 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.203892333 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.208631842 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226181709 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.21178359 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.2108106 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.207423663 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.204913413 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.207386842 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.21113613 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.20182297 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.203686441 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.203832149 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.206356526 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.203977236 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.20843402 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.203408609 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.210738224 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.224013427 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.204055354 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.212064133 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.223423902 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.205722207 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.205192498 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.207088943 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.204235282 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.203605877 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.205143436 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.202995014 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.211507872 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.225576572 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.206465889 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.206839756 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.203452771 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.207729931 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209206822 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.205186155 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.205426752 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.202653402 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.20480822 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.206568952 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2062232 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.203328839 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.206498376 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.205547487 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.209615696 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.212866904 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.204794467 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.207693517 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.20583168 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.20669937 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.206974966 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.206675954 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.204027275 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.20426724 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.205089355 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.207247331 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.206093773 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.20917214 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.20750864 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.207157557 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.208638945 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.205984767 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.209587823 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.215610326 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.212029406 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.204919569 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.20847457 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.207994541 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.209453514 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.207566526 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.2093576 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.208617047 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.209326647 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.20855073 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.210476397 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.208637276 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.20983071 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.222696142 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.225470442 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.207342488 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.208796572 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.211186168 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.207756277 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.206044966 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.208456814 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.210710692 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.210471719 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.214651899 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.208561637 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.214253823 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228032056 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.209542329 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.212994089 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.212773567 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.21496005 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.211431013 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.209401908 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.210306143 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.213698261 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.223031119 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.209590117 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.217559376 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234857627 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.22949528 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.210458624 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.211165256 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.208357471 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.209850156 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.212804869 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.211328976 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.21214939 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.212432395 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.210493157 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.211397489 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.216564774 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.210953702 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.212870171 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.210516017 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.209657708 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.212533998 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.207991289 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.211551183 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.211829118 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.210141691 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.211031681 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.211741969 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.210427755 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.222557515 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.236461926 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.211366732 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.211238806 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.209154474 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.215058235 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.214259874 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.222258345 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.219248406 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.213264648 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.212596848 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.212313261 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.212289502 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.211419706 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.2127294 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.210373004 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212203423 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.210710635 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.222419725 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236359233 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.21568353 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.212428782 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.213378823 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.212559411 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.213600004 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.212776963 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.213448285 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.214228535 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.214201244 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.217780774 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.213390677 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.213365537 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.214369844 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.220737219 seconds)
  done (took 720.503808541 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.210016374 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210969149 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.21047815 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.21034864 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210772793 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211011902 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.210037395 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.211880149 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.210531465 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.211240291 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.210569619 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211974866 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.21193002 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.211689295 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212687134 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.21142568 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210919826 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.212047012 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.210575943 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211961068 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.211954333 seconds)
  done (took 26.566713113 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.214650757 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.212335068 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.211775473 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.215326856 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212175686 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.21624893 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213590228 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215566424 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215859631 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213003313 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215618593 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216646175 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.212996343 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.213729427 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213376426 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216494452 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216777595 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212553231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.217644073 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213217385 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216415596 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.214298518 seconds)
  done (took 27.854177808 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.215694262 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.216828646 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.216473123 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.213508513 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.217113855 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.214377121 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.21678627 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.215694581 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.217703204 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.217168701 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.216644355 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.216525828 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.223151351 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.220878146 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.217530137 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.217607157 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.360609328 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.217187527 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.216996311 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.215616887 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.215244966 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.222352318 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.23469759 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.215493144 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.216439502 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.218928248 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.219160813 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.217894763 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.219038187 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.21850288 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.221255189 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.21894263 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.217676286 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.219142691 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.216375654 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.220072775 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.220875739 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.218399015 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.215683086 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.219694343 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.227550046 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.239561058 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.219980304 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.224354006 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.239588464 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.218182365 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.220802777 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.226000125 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.217516071 seconds)
  done (took 61.038004382 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.220207109 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.220676075 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.217009535 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.219614133 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.220239471 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.221232481 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.220035446 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.221263389 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.21872637 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.216800264 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.220946205 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.216921436 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.218156809 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.220289076 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.220896383 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.218601238 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.218765194 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.220211375 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.217608336 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.219022872 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.218347422 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.220293175 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.221156124 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.218727961 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.219677371 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.219237463 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.218042144 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.22205236 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.219913824 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.220067467 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.221200801 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.221393945 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.22171113 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.219702565 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.217335292 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.223232799 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.223732398 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.218651114 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.222439268 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.221091407 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.224964612 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.223106273 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.224106167 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.222871485 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.220677785 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.220156701 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.220745626 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.220233405 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.222458499 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.223623715 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.223728589 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.221986037 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.224837339 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.221535527 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.222904747 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.22530561 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.222265763 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.220528227 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.222594875 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.222218321 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.220689612 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.223074435 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.223622434 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.223937107 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.22334665 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.221745367 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.222373321 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.223963049 seconds)
  done (took 84.170501201 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.223079989 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.223626938 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224455978 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223069163 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222750086 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.224292129 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224258332 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.224389735 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.223308011 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223665377 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223694806 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.223935384 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.223088367 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.223055012 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.2253959 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22301898 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.222655349 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224313833 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222378632 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223128605 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.223810957 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.22492579 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.22467405 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.224266849 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225494614 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.223631228 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22502584 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.225073754 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224766798 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.225032257 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225162403 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.223670765 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.225410677 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.223635677 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.225341783 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.22421016 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.225650467 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224460933 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.22552428 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.227277507 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.224983352 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225024284 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.225045287 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.22557159 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226998279 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.223559104 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.225425644 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.226191067 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.225951317 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225928253 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.225126948 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225392123 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225214084 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226651323 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.226988804 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.226778442 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226349697 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225450016 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22574448 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.225737228 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224919315 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.227356273 seconds)
  done (took 77.08096553 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226509624 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.227383254 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.225377357 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.224525022 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22703758 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225022911 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227444527 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.226737669 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226496357 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.227619623 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226616791 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224361727 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224812214 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228493965 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226924376 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225393937 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22465575 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22536952 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227712725 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224473025 seconds)
  done (took 25.66638985 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.224295454 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.227990039 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.225988694 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.225269509 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.228122232 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.224988168 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.228111246 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228451443 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225596756 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228240216 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22900808 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.228813329 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225212422 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.225681926 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.228579431 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.226331674 seconds)
  done (took 20.775552298 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.226460407 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.228458932 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.226699222 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.227096782 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.226810184 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.227864436 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.229666184 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.226710405 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.227043257 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.229375212 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.230231735 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.228308639 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.230167037 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.2313928 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.226951585 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.23132667 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.229185412 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.229788319 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.230738237 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.230654804 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.228582337 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.228459476 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.229116053 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.230814127 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.229135461 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.228401862 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.229360433 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.22963843 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.227086712 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.231451836 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.228452422 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.22905979 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.227223183 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.229249312 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.232504706 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.228291876 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.23181384 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.231391221 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.232227182 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.231421159 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.231863139 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.229836822 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.232306115 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.231587966 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.229403766 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.231697493 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.227774334 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.229608234 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.228720049 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.229943564 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.23345362 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.233059373 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.232045743 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.233700637 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.231936825 seconds)
  done (took 68.780856414 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23165614 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233319258 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230761255 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233970049 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.233392604 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.229163815 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.233088693 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.231056841 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230939193 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232321524 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230704588 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.23375166 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230364891 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233454063 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231031996 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233172496 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.230961316 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.230127409 seconds)
  done (took 23.321361207 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230758699 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232401048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.23338682 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.230823958 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.23088186 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.234131556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230997417 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.233343945 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232960792 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.230915395 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231258772 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.234325624 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233962957 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.235093816 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232155214 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230688396 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.235388449 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234927051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.230803218 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230497057 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234168732 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233195353 seconds)
  done (took 28.266503276 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.232730404 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.233019525 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.233055747 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.250055115 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.250163179 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.253865501 seconds)
  done (took 8.603197271 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240469138 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236120652 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231627305 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236630221 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235965231 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232643687 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232399305 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232783861 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235087225 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232808866 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232208801 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236530932 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236102451 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233589642 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235377751 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235369286 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233180143 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231892304 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23377367 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236087747 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235489825 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235607055 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234375526 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233948175 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231766787 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235639776 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236068693 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233604017 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233335618 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236177144 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237153521 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233716463 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235943603 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23533692 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237329502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236596036 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234521332 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236628161 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236399912 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234112948 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.236473958 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237372013 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236873429 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235176876 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237301327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233775668 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234600996 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234795263 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235434001 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23795088 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239305696 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234599101 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237456933 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237099073 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23802705 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238302753 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235331179 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2347232 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237302101 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236592528 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23529816 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238822413 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236576021 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235454203 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239156342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235645191 seconds)
  done (took 82.727503482 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236024106 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.23617454 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236483917 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237360235 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235844925 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236795293 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236299077 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237050446 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236739437 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23537087 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239643523 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237448759 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236653523 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237598284 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236862964 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237185107 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237503744 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23611029 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238570788 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23948434 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237386231 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237801123 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236954582 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236676394 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239707514 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238800652 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238122714 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23850476 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23773918 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237806955 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237835934 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237459132 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238359327 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.237531941 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238347727 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238898045 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238402649 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237772575 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238967625 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240971942 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239620375 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242141715 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238552264 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238376941 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239351266 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238145651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238372235 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238027286 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238508552 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238884049 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239589438 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238945263 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239325739 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238883445 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239096712 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239142963 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24022068 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23974246 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239666016 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241213415 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239767573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240121574 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241198718 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239116285 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23932397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23995726 seconds)
  done (took 82.886320931 seconds)
done (took 1688.946655416 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.286082394 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.29504835 seconds)
  done (took 13.737208622 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.403913032 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.357873808 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.240254098 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.289644569 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.240586569 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.261092523 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.237451471 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.24049404 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.24151201 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.2419042 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.241400245 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.425538124 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.240764558 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.240039438 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.241358832 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.335993969 seconds)
  done (took 41.63975 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.26536741 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.25016972 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.354390218 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.270608496 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.272684786 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.423856477 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.307015609 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.257522113 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.408054467 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.290493067 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.710560093 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.272620157 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.253484735 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.287328827 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.266105975 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.426805968 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.489035743 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.723195065 seconds)
  done (took 28.688844796 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.664071803 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.268941315 seconds)
  done (took 9.097159436 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.258235599 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.268633971 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.289649562 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.275847571 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.257960061 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.283054028 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.267232424 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.269746389 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.26327322 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.269337943 seconds)
  done (took 63.869203106 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.268217203 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.254048152 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.252962001 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.25031958 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.244111168 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.243286653 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.250290493 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.247215761 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.642715185 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.374403331 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.252280762 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.259221481 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.270153772 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.253455309 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.249945494 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.285410236 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.391564539 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.249916656 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.249547233 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.258060865 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.252095992 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.361471564 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.289759008 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.255941682 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.367721574 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.695336115 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.25460227 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.260038087 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.377179687 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.251522613 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.252227304 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.251761447 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.254001366 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.866995674 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.749819205 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.260830167 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.275328763 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.261962224 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.250255088 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.417201075 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.254493218 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.261303377 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.24693311 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.748689194 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.388714287 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.366605415 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.375691237 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.270395074 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.254906754 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.311106169 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.256373661 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.255044275 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.28229829 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.985576574 seconds)
  done (took 106.380906244 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.289632446 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.635717355 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.412359901 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.263830836 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.856436794 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.867602303 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.261676997 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.513828521 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.317002882 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.248287781 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.532224039 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.732508054 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.269193619 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.271799107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.948875043 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.332779866 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.253828328 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.960498813 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.270003188 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.252966316 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730931014 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.255858001 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.247882392 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.426441464 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.284486548 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.681660136 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.525783712 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.509078436 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.263484919 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.248677618 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.694173418 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.265753396 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.269267007 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.251062689 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.500546016 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.582985783 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.576725592 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.268546164 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.287642872 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.250048346 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.265301507 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.677143718 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.582984011 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.265144209 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.271054654 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.68145467 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.264111414 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.253380758 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.252663254 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.447374818 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.849601973 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.250897778 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.52949596 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.258357918 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.611018901 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.251343206 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.327108579 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.712769064 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.265762425 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.173648485 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.31004131 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.250326749 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.250273014 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.250466531 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.255041358 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.575599624 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.380230723 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.249368209 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.575060559 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.703112123 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.268468067 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.757466962 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.170848269 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.274079434 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.337074988 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.250559482 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.768184177 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.718830888 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.269929245 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.250183744 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.562478164 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.268085103 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.524826905 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.266811771 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.267619098 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768500394 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.265590774 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.314145367 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.251333072 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.259289014 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.871092779 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.249934935 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.523201836 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.291217708 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.252819215 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.251727423 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.272367352 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.252715309 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.268430647 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.252908978 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.752349039 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.278917433 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.212030192 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.269745075 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.253401887 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.277434338 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.252558862 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.253515871 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.467469222 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.746610683 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.273502178 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.25285421 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.253295878 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.278077377 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.416963535 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.258054996 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.543196092 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.277011526 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.254599765 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.2699704 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.953487289 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.293228454 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.254367474 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.258612921 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.123437451 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.457218851 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.271236614 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.253917476 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.253465175 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.267835319 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.404646905 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.271605574 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.291242652 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.256269535 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9366497 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.29880154 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.26271931 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.50617748 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.25842219 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.124786097 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.27802584 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.254024963 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.551784219 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.510108845 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.306640972 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.258551217 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.273845718 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.922722934 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.299588283 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.400288774 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.271602813 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.296352324 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.451688854 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.684707416 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.254784824 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.886421667 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.255146883 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4626753 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.256586359 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.564157298 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.724052888 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.271488732 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.260145678 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935300326 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.947149233 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.928955517 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.257769333 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.523944371 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.223760123 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.738300976 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.256416135 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.258963568 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.673078282 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.258445706 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.260621167 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.256897115 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.258352039 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.391862041 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.427987808 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.439285533 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.260220881 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.688709566 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307899263 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.25888053 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.257687236 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.260205979 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.602630052 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.352933018 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.258037626 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.29966898 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.25736875 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.256838331 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.710195277 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.212477707 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.258337441 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.409918543 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.860919456 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.280562296 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.259455032 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.911920792 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.536563383 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.749013139 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.335367524 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.548040347 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.285704186 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.294654651 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.824876259 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313678158 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.713904295 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284900167 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.258365357 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827546468 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.274368159 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.605564569 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.259019383 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.26133943 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779433585 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.274517023 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.261923129 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.414936943 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.277596687 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519074544 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.267432568 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.276971555 seconds)
  done (took 1091.062520508 seconds)
done (took 1355.6316654 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.260157158 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.260119798 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.250094649 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.268539858 seconds)
  done (took 26.221222563 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.270500435 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.266900715 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.267711856 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.266290202 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.269552759 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.26769667 seconds)
  done (took 8.791678574 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.33779045 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.262232729 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.268387354 seconds)
  done (took 19.051442845 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.458121348 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.525286026 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.603149519 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.382311586 seconds)
  done (took 10.15311382 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.268052712 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.268411246 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.269009095 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.270398402 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.272005829 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.272429854 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.271242124 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.27081442 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.272767065 seconds)
  done (took 12.620417697 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.033265625 seconds)
done (took 83.051980033 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.264375282 seconds)
    (2/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.582573176 seconds)
    (3/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.287590667 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.254607886 seconds)
    (5/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.844435047 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.289834692 seconds)
    (7/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.369010561 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.684541979 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.13903227 seconds)
    (10/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.472514312 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.085644891 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.31344632 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.275752594 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.535300971 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.323960927 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.288878852 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.244891756 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.000182689 seconds)
    (19/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.318884821 seconds)
    (20/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.249530326 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.266961802 seconds)
    (22/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.674697437 seconds)
    (23/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.308763507 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.263529314 seconds)
    (25/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.290347884 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.245494403 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.59559538 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.091890161 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.284288569 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.628406407 seconds)
    (31/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.554547886 seconds)
    (32/309) benchmarking ("sort", Float64, false)...
    done (took 5.560615039 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.245105389 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.358537451 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.645656808 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.311232838 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.367945246 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.250558634 seconds)
    (39/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.292479478 seconds)
    (40/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.245089979 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.794282628 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.790360338 seconds)
    (43/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.299492524 seconds)
    (44/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.112210988 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.031518631 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.307523006 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.265243766 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.826571275 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.518076644 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.705995249 seconds)
    (51/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.299783857 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.656607828 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.265094747 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.393725404 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.523093868 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.265699128 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.301127101 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.36918308 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.315230119 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.096603598 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.342981683 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.504586623 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.337634275 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.098069484 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.209734349 seconds)
    (66/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.055104487 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.253506841 seconds)
    (68/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.442499087 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.331755225 seconds)
    (70/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.603022653 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.613393275 seconds)
    (72/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.249006494 seconds)
    (73/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.412727403 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.828427603 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.9486792 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.150853377 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.101137101 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.247331313 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.675350477 seconds)
    (80/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.267214038 seconds)
    (81/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.37548609 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.40438734 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.274488475 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.139845568 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.371360703 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.266761074 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.286633114 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.293873272 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.259823764 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.412662903 seconds)
    (91/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.80097595 seconds)
    (92/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.983574758 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.644646637 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.292515958 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.28126421 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.382477068 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.250041176 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.248885861 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.583642961 seconds)
    (100/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.456070193 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.28356911 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.253866335 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.907294591 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.988988406 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.70082411 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.268453754 seconds)
    (107/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.258575572 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.336940454 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.268874329 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.533637785 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.460595907 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.488619345 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.250235373 seconds)
    (114/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.866288015 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.37024097 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.267774391 seconds)
    (117/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.791698051 seconds)
    (118/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.459767986 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.317165492 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.270645601 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.27595304 seconds)
    (122/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.801671581 seconds)
    (123/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.256091834 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.26702028 seconds)
    (125/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.465572047 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.368769585 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.868073436 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.454230748 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.259843404 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.782760885 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.309050352 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.641320566 seconds)
    (133/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.654015214 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.531785671 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.288377575 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.257208778 seconds)
    (137/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.448674932 seconds)
    (138/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.283503024 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.273024573 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.25136761 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.011318111 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.530537949 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.252387426 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.266190179 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.274295764 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.254327283 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.2605364 seconds)
    (148/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.321655042 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.686337103 seconds)
    (150/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.294749833 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.403192281 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.356209664 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.374199869 seconds)
    (154/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.779009718 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.165867706 seconds)
    (156/309) benchmarking ("sort", Int8, false)...
    done (took 4.32208356 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.317002658 seconds)
    (158/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.643547712 seconds)
    (159/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.27260435 seconds)
    (160/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.494383315 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.001692175 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.29940746 seconds)
    (163/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.288374129 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.365202389 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.254284203 seconds)
    (166/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.253255382 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.899607861 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.299324858 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.298825417 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.295865812 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.471837372 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.882276333 seconds)
    (173/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.647911634 seconds)
    (174/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.680094677 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.233322604 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.783448333 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.255260172 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.099992632 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.395245405 seconds)
    (180/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.872214469 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.281106034 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.511631105 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.390262546 seconds)
    (184/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.291487868 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.474107371 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.683000459 seconds)
    (187/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.539886921 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.296096522 seconds)
    (189/309) benchmarking ("sort", BigInt, false)...
    done (took 6.275472925 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.31500043 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.254963156 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.093384405 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.412845011 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.277069056 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.079949777 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.320764066 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.332820616 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.628998431 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.324653726 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.398110589 seconds)
    (201/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.632529936 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.381647171 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.161969682 seconds)
    (204/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.283187145 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.275953228 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.273519647 seconds)
    (207/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.372038074 seconds)
    (208/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.255339611 seconds)
    (209/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.284621168 seconds)
    (210/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.814584909 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.333699869 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.256204721 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.693885399 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.689453922 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.598147175 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.979795606 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.322457802 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.082356676 seconds)
    (219/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.256880077 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.321239473 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.485807433 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.935596844 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.284900886 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.346029272 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.290127524 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.478767625 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.30890424 seconds)
    (228/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.360062727 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.29973309 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.313264149 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.303502999 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.359944675 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.362381978 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.258149236 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.318654479 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.167438811 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.285351121 seconds)
    (238/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.288383773 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.259005836 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.284723145 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.359497552 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.258518885 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.260232436 seconds)
    (244/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.610721717 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.302556991 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.621775633 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.652531109 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.288005036 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.042887169 seconds)
    (250/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.589914846 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.383540481 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.27833795 seconds)
    (253/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.108972707 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.295989894 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.304855679 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.618613227 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.625793455 seconds)
    (258/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.078513923 seconds)
    (259/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.262057586 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.399077115 seconds)
    (261/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.364264138 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.680841867 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.371872386 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.338715072 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.279253668 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.486453132 seconds)
    (267/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.062304513 seconds)
    (268/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.016629605 seconds)
    (269/309) benchmarking ("sort", Float32, false)...
    done (took 5.266333142 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.311260742 seconds)
    (271/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.28855186 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.387784683 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.260997239 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.306857913 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.280218619 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.968693191 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.682827904 seconds)
    (278/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.274892304 seconds)
    (279/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.510178785 seconds)
    (280/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.976607085 seconds)
    (281/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.3239644 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.30646716 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.994406274 seconds)
    (284/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.281588314 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.654126804 seconds)
    (286/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.362788883 seconds)
    (287/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.13177021 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.88431468 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.460050073 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.282199114 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.746961416 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.006157277 seconds)
    (293/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.50071944 seconds)
    (294/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.261867741 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.370728604 seconds)
    (296/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.364068288 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.262788028 seconds)
    (298/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.394182187 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.089385114 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.742707939 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.389257508 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.324447001 seconds)
    (303/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.38620371 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.269313024 seconds)
    (305/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.389591134 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.378395628 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.930926767 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.305527302 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.067070803 seconds)
  done (took 1012.036242462 seconds)
done (took 1013.222173909 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.316193007 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310849384 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.294289049 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.314202834 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.404576569 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.31847594 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.303644489 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.295130076 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.342390091 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.34362478 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.291831751 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.315891069 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.294822559 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.296194456 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.294632026 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308335222 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.285120479 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.294438324 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.310908479 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.30293248 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.310202831 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.292624053 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.344141017 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.316029737 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.29811932 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.296898658 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.297208821 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.313946601 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.406636215 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.297398039 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.298293687 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.305241402 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.292684023 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.293446063 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.290241941 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.314096981 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.305790381 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.303879914 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.299425494 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.326467125 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.671374806 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.311004911 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.296666719 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.296960717 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.296335681 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.298910715 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.296817393 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.303163977 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.30983368 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310784915 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.659536394 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.325101682 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.298793973 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.297147288 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.306562992 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.296829761 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.300170627 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314533065 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.316008171 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314500432 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.274925933 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.302223041 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.298916268 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.312865002 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.305173791 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.698438154 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.308829099 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.302156859 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.674848317 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.318899878 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.69862938 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.322294765 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.300061587 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.312246798 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.330336995 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.290261881 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.292297837 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.297060366 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.305104022 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.296176186 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.308003048 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311953964 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.303454972 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.29956188 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.313226675 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.322586389 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.308697792 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.300788173 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.307433242 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.318786901 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.307181372 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.310082367 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.303112818 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.295255253 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.308950327 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.302522684 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.301783657 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.302315054 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.305608564 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.311108045 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.675890768 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.334934832 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.297546544 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.29620435 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.299508964 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.314236378 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.676833661 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.318049171 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.322149693 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.347061834 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.302624391 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.279038386 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.303589249 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318478018 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.308996897 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.304021118 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.296108418 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.282707941 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.668700202 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.330584252 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.303831258 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.298541021 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318353125 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.303281143 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.29846986 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.298554961 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.302627869 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316705537 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.421700825 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.312181481 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.332356877 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.300520206 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.304896084 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.324574882 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.320064591 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.333351162 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.305095491 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.319664832 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.318164446 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.30010653 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.313545349 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.312297744 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.305173181 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.309123643 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.297603384 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.326078179 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317154279 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.317260254 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.324932974 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.423065865 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.301715633 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.284860049 seconds)
done (took 219.297545007 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.361527202 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.299132764 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.383126055 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.300107829 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.399563894 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.397795913 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.298149133 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.298863851 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.298185334 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.705030007 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.298607962 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.297720919 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.292447391 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.29738081 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.382724237 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.301052488 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.297685435 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.636615378 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.300390871 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.370291644 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.299535898 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.299158445 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.301063227 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.6806636 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.295511252 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.293328288 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.37017066 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.300823949 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.647886576 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.303938113 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.297875029 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.64698007 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.393550356 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.318723617 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.311204714 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.308740724 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.401197414 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.317423542 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.383329197 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.383508847 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.385962691 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.34021986 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.296778615 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.296502252 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.304152386 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.303564193 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.301785942 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.328779069 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.302237978 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.300796693 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.639671731 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.313068362 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.310070426 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.300987932 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.301596428 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.323984445 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.300040202 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.303027254 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.395109809 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.303246444 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.366190042 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.684716211 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.708250727 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.304638257 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.299166391 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.301501705 seconds)
  done (took 146.300536653 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.369519975 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.377816628 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.413502436 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.320592634 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.353028587 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.419429405 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.322030986 seconds)
  done (took 10.792180687 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.309171735 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.305248987 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354315001 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.3544495 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.30627245 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.451401173 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306548027 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.315661867 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.302171196 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.359471297 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.306997932 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.306957364 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.312286815 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.298620368 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352632682 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.316306148 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.420129701 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.30756321 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.306467216 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.461668928 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.304689965 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.31332705 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.357448484 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.317211942 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.307189381 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.310835439 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.874042908 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.305614104 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305061749 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.305890135 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.304873723 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.345772837 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.308030864 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.30253124 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.304939222 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422835388 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.306686265 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305492332 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.307463758 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.3044423 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.30691958 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.308440899 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.308394894 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.305099032 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.308443807 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.328943886 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.308455157 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.307577584 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.308926876 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.308284073 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.358017978 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.308108188 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.307077354 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.305572716 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.364057902 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.315377439 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.308453727 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.304658704 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.30837638 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.306686005 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.464572168 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.3558892 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.307796475 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356024906 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.308557455 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.309149504 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.308354486 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.309598653 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362630865 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.309748888 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355459119 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.307126919 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.462830106 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.331797834 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.311431753 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.311122545 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.313727218 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.309988156 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.30432841 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.314540798 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.309615511 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.311410652 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.315896931 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3075183 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308613944 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.411130998 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421147799 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.307049616 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.32094779 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.316961435 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.308530775 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.364581341 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.310788595 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.308704979 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363882918 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.42713791 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.363762991 seconds)
  done (took 150.667091766 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.318976933 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.320052737 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.312418471 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.326903247 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.311656699 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.310667148 seconds)
  done (took 9.124898827 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.312598106 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.312111185 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.31247776 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.31133008 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.312080645 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.31289343 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.312483574 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313972491 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.316785357 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.31249187 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.312638485 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.313987473 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.313140134 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.313260255 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.311184912 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.313004573 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.312919601 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.311178756 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.312066448 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313228796 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.406074814 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.313809462 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313145174 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.315327672 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.315855064 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.313299548 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.320863404 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.312994959 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.313330852 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.319108163 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.331513176 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.31622322 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.315263243 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.318742873 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.316625917 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.313599666 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317308185 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.315670854 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.31131958 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.314193075 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.315219912 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316560097 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.314465387 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.313547634 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.317080975 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.318695788 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.318007278 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.321780467 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.315042263 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.313904261 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.316412012 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.31520947 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.31471662 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.31536272 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.316545915 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334199186 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.319293366 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.315277036 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.313798069 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.316422162 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.316075622 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.31534332 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.315992818 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.31822504 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.322551198 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.316576887 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.317365443 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.320287592 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315223781 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.316787379 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.316667351 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.313779122 seconds)
  done (took 97.043040222 seconds)
done (took 415.138377196 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.624776077 seconds)
  done (took 7.852657093 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.39132421 seconds)
  done (took 7.620576815 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.228457082 seconds)
  done (took 21.460314673 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.324898752 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.32272386 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.328168929 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.318097357 seconds)
  done (took 26.522835829 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.458074184 seconds)
  done (took 7.687117965 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.321093458 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.722220534 seconds)
  done (took 14.273402897 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.731833771 seconds)
  done (took 7.96018596 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.427479759 seconds)
  done (took 7.658153048 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.312219408 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.327772867 seconds)
  done (took 14.130537236 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.292727577 seconds)
  done (took 7.522568367 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.053294075 seconds)
  done (took 8.285826604 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.325458224 seconds)
  done (took 7.55699235 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.363912419 seconds)
  done (took 7.595216362 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.153812373 seconds)
  done (took 9.385079912 seconds)
done (took 156.7370461 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.311165314 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.321996561 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.315709587 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.313922686 seconds)
  done (took 26.493012656 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.352851889 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.35169562 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.354190171 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.363915521 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.357305833 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.353730887 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.345561779 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.345256932 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.36393262 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.356276526 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.355067784 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.354169805 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.354924243 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.345378875 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.356086111 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.355314118 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.364775112 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.354971031 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.346658196 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.357060889 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.320694599 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.364601084 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.357214523 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.321042756 seconds)
  done (took 33.691092637 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.839915517 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.39271963 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.474171935 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.371403318 seconds)
  done (took 7.310998686 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.371792392 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.374425145 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.385055549 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.425053321 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.450017707 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.38342432 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.348467119 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.343125086 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.327834718 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.374438412 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.450571391 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.391734173 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.460366288 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.323102422 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.570851429 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.321172428 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.3215191 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.374576187 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.428310027 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.439163179 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.321470394 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.372139166 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.377373775 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.391359688 seconds)
  done (took 34.560646659 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.322251603 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.329004846 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.321057714 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.320446492 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.328654892 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.322530946 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.320873469 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.321553153 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.321136632 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.329626894 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.321597082 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.333435639 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.322313557 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.321392279 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.328140967 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.324969938 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.326677543 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.320499916 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.321993544 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.327160064 seconds)
  done (took 27.719113782 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.315304797 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.171865563 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.666975736 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.572583308 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.317137338 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.323853333 seconds)
  done (took 27.601917673 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.387913626 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.536883063 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.321477397 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.665983646 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.755492758 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.338667848 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.322647357 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.553699477 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.865225618 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.855134325 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.384408476 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.389474956 seconds)
  done (took 19.617105867 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.323995522 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.32673377 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.327381797 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.341498733 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.375552539 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.343147359 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.331397961 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.317928841 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.384719975 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.395614712 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.344952374 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.379275678 seconds)
  done (took 37.429487909 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405833071 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365282244 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.201445503 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318280812 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041063769 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532346466 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.345478643 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.771622137 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.324110969 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595236037 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326715101 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410507246 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.578618183 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321498154 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.331144599 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.274491432 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57448651 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774254364 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326616092 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.207215082 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355771608 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322700103 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.306572248 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.359650275 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534119441 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.462817004 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.583268435 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.0997429 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611156528 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333207927 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334806439 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324118241 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597483398 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980232915 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445530503 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333979437 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323420072 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.87201515 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.306000971 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.235321162 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.20027611 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333426779 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335793105 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324429587 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.259396865 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328930976 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.765296851 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.331370024 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.036525239 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324237984 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336437653 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417817639 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.329950503 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.898954917 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326226018 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.332139658 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.323270616 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347683649 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917313598 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.700824482 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335521369 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.267716104 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338922064 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.331790763 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942659192 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.443107924 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.327209973 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327929164 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260367401 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.281515224 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351579322 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473124123 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.35074 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976125802 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011270585 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.354621642 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.257961883 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840156429 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327953548 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.268107408 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555680742 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104902948 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263929678 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.285815922 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.264659387 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002833735 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334718826 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.666873053 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34438848 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.786322291 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.341020899 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349758617 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349371863 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557427563 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.209613103 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333168235 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.224929569 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476167316 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347753177 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.754960616 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265205712 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.333593727 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584074753 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.539638675 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327027436 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.311658498 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550041387 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334153495 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.353059967 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.328466625 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.360829965 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.891382175 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357981033 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.710344724 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354342661 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.11136547 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026011887 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338096029 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.441108376 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.33623201 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567053093 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.054859108 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214392308 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400022826 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335800675 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337365673 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.325467422 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929261915 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.213896764 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.330616346 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338098263 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.348045281 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.3310291 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278670111 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.331032018 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351012274 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.110177942 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.554579583 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331002035 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615422208 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264934096 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47993637 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337669844 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.554341661 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.526626125 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.351548984 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595758585 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341659094 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344653726 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348719247 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358465456 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440084328 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35917536 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.339063027 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598108559 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.334333353 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.340281999 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.35655507 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.119071999 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342796835 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.342206628 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338573948 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899153772 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328493234 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342920159 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.228899597 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.348612715 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402686082 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34750134 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.348355555 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.10249555 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360958891 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.358259787 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.338631625 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557418722 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347532637 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.345094115 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423821129 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.533321092 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.901466658 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367372486 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.273659098 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.047643376 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.030332536 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333030491 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.522515226 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334757615 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348367271 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351014201 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342330213 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917006956 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354211671 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.295675777 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.342158526 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347416234 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.346325447 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338071323 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.100197509 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.755895572 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352715226 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.353728694 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484831057 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.356689755 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.275607558 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.858982256 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347967226 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340832318 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.116927494 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376252718 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.265847558 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821794672 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595703961 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352217504 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349030882 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.428129593 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.376462672 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.346931182 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268775176 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358785511 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.351799909 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364803873 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.35297001 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.356102938 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.729207032 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907613994 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042793059 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881644819 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266716862 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.339285904 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.242929549 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.776231081 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275781187 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.999000267 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523689255 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.800206309 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283753646 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534539419 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.522838172 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105845618 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350675063 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571362622 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245576847 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.285335923 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367795005 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557725257 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375404529 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350363413 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276937992 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.858487854 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584748885 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302243544 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419782781 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781318105 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279419512 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.137310235 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.401268727 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.624261122 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520173039 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.888068839 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.732327686 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34165699 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347795649 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841426055 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349941669 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.872890108 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948597513 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361570714 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.543801026 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278918504 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.354832261 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.357351141 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.342974263 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.602642424 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.346847701 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.595959427 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353826742 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276998732 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345739546 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85564239 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.209343102 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.341247656 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33100981 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027570439 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343952316 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618831793 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.337259929 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.09530143 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343411968 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.261054923 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262126472 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.019784427 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331233559 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303998556 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798000334 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.336051568 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334946709 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332287243 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177044551 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583838289 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.343785586 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893161825 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570336886 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330964817 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369863972 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.429099631 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285442765 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.334987965 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.222476416 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.563512903 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327368594 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.561922773 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.226721183 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.253746992 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.385901162 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538539838 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.233839148 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330263867 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583715249 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.057002758 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.333944685 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013191562 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377385526 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331102636 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.349284097 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342560179 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349139381 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420054584 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339811203 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.341285679 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.340054514 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495501437 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336216482 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339590395 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.34331136 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423454273 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.736712545 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.087103976 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.103397396 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899153337 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063409064 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.920303927 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367168801 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.330020099 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331298579 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264294367 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482492346 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.856612275 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604513099 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461211779 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.337126231 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361770777 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28848476 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357520566 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564275158 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606180384 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.302293427 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333850075 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.125144464 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.21280752 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3423041 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.541786646 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804083327 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867852114 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447418107 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337185936 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.769067436 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606083524 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421504739 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331792041 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921561194 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.344849756 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.611974801 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.356089593 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335224539 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487481648 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342644002 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993490243 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.368522021 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.491845553 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.106489274 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.363861262 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598059755 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.799265301 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.354245511 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903625278 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.037561702 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604393816 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404162988 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343207192 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.438254941 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481563265 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.333943415 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.235592153 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333723834 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176967561 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.042847794 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.343536504 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905558482 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613310667 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.331650614 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.332799823 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364279493 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.344362098 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558687732 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00121236 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557784589 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346089501 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336695035 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.903688548 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904628042 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363648755 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268482647 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.338006275 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581920298 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589204434 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358311618 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.7901569 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.046084667 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856413682 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.306827298 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357420207 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346724153 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.02863802 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90525906 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.110065413 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808543169 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.995249273 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338450312 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617718614 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.340786028 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338197593 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620565691 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.338952895 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342499305 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357202192 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.906353813 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109684394 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.348216158 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.310074952 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.281962059 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.561576844 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338466979 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274624204 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33946745 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.508245248 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338114914 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466914963 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348865887 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.334866151 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353604533 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.098115179 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622255538 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.343765552 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.317982852 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.329971086 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347921906 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369683032 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59391795 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343018945 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.011386961 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.690398814 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.593704299 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.338160364 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.326341056 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.343597749 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339686438 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05639677 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.349160786 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.351837159 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877649032 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.342050875 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.357651533 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344631783 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.555864796 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551612614 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34205941 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360597964 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33871496 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363729211 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.23909443 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107130464 seconds)
  done (took 1637.086893888 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.343230207 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.34794139 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.364932804 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.341758858 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.355172591 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.380658956 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.357207747 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.361671059 seconds)
  done (took 52.108776538 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.341095606 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.501229006 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.370793637 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.341587015 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.355340103 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.350479975 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.788304694 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.358937117 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.350019568 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.349046821 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.348132849 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.344158369 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.969402498 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.349307955 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.354524232 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.337580908 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.34938818 seconds)
  done (took 65.415521406 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.340282211 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.864225483 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.430509908 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.344158936 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.319594884 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.374024292 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.998715761 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.350632334 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.344068128 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.632560124 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.010166606 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.376353127 seconds)
  done (took 84.641974345 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.348632285 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.349220045 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.350180139 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.350634145 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.350130622 seconds)
  done (took 8.005957906 seconds)
done (took 2062.913554397 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.59027431 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.002711513 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.971666718 seconds)
  done (took 5.232940909 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.485491357 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.53387325 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.654277524 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.67197677 seconds)
  done (took 7.605020013 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.616570502 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.71243018 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.531184955 seconds)
  done (took 6.114385566 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.702105805 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.351232438 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.353452665 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.337896266 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.345097644 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.346659202 seconds)
  done (took 20.284458187 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.343736786 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.345922048 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.344828476 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.347272597 seconds)
  done (took 6.64095047 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.319888812 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.017101021 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.320637971 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.34232867 seconds)
  done (took 18.255074994 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.088448509 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.102403665 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.086739129 seconds)
  done (took 7.53345682 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.347569156 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.191890404 seconds)
  done (took 9.794701258 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.638109526 seconds)
  done (took 2.89341683 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.475174642 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.669974069 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.356016217 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.251419742 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.375312108 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.038772408 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.929420725 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.512009702 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.233371131 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.428944114 seconds)
  done (took 27.526960529 seconds)
done (took 130.134714276 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.088734784 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.719863286 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.54436013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.097190534 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.577164132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.542564783 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.54453158 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.063887235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.569425165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.560730939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.100823488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.57650106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.703213793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.72046438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.702993591 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.723517286 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.573818968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.130516324 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.740622179 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.977670276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.539861325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.694720138 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.927921864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.711287678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.570609065 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.498698012 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.275811257 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.718630258 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.913472028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.288369912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.498280298 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.148087401 seconds)
  done (took 190.301365604 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.342425579 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.340921928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.343982843 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.342560614 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.359669462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.342935248 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.348873639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.352513464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.342992451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.348630433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.341671139 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.347959468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.342814116 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.342409685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.344128915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.343158917 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.344387255 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.343601753 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.359290452 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.343654617 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.343510548 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.359519638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.342623056 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.343338467 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.361543003 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.344786309 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.343359249 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.343438266 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.34381056 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.361078564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.343802105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.348328157 seconds)
  done (took 204.356959135 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.343550578 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.348262593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.346032974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.345216502 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.343650814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.345823755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.346441519 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.350936146 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.345804378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.345307993 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.345277025 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.361455756 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.360321189 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.34399046 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.363232731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.368561961 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.344992305 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.345172427 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.361504516 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.344841855 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.347570923 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.345617971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.345922298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.37250542 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.345334616 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.359754704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.346195185 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.346184928 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.360888382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.347503462 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.345516239 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.362491011 seconds)
  done (took 204.487107933 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.547983888 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.353612596 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.354732364 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.308470917 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.354797682 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.355022969 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.349348797 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.542952071 seconds)
  done (took 14.42896589 seconds)
done (took 614.833379789 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.589310614 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.303188825 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.553094253 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.37374847 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.113054672 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.391202131 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.37454237 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.536231854 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.273000718 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.543516942 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.574973426 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.396077749 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.705845509 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.377901586 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.622565015 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.469731494 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.216622456 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.337256942 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.682811923 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.874877588 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.632100059 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.790226384 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.556604611 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.262929813 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.711976056 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.786693823 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.037779815 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.20518418 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.389804553 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.685647662 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.932848358 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.293824979 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.432192946 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.438925689 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.496043146 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.476116211 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.266935178 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.428472224 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.581674213 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.560373583 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.882463611 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.084474594 seconds)
  done (took 91.507057738 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.340062997 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.338226469 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.33875935 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.338538584 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.339543163 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.339317405 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.338512952 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.338514362 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.339194559 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.340562789 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.338506862 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.339652673 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.338357167 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.340654341 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.33950405 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.338768795 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.339835071 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.343105362 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.338958862 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.339237193 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.341321642 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.340503638 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.340799408 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.339757615 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.340872755 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.340583507 seconds)
  done (took 36.098529327 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.358569472 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.604980911 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.767849932 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.37129812 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.359803458 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.364779846 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.433856428 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.36702572 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.361639931 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.362735887 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.525883227 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.362519487 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.394061262 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.79047844 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.368756444 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.361128039 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.360975723 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.359933855 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.611795848 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.368447215 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.457533551 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.361353813 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.434103032 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.370338557 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.383677053 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.360014784 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.365089895 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.877224995 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.37849283 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.527693564 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.127664816 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.440187661 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.828689991 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.789120717 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.132527425 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.372450884 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.362755813 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.529348147 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.362176193 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.361503969 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.434534026 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.361691635 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.76933649 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.985617471 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.378281605 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.363499691 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.895945215 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.548858125 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.598009626 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379854428 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.79233698 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.364080471 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.365313872 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.365511632 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.599492238 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.378704307 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.362012916 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.894272858 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.385754894 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.436674838 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.366944358 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.363052435 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.62160651 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.361973115 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.610766453 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.366252194 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.371863605 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.382778253 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.775016312 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.371163287 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.00152949 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.380072308 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.364296636 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.529973464 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.609710707 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.929250007 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.394086768 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.624095518 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.841866325 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.454116701 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.368337375 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.868810694 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.460499271 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.377581345 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.366774759 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.367708104 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.364887334 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.414885864 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.438295349 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.939825818 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.008851244 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.912503075 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.467679806 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.38554071 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.365385396 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.895789334 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.392780866 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.36574593 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.767802499 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.004210242 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.382700632 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.374523676 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.004811055 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.384057851 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.441743046 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.377618187 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.78386535 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.366062688 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.417301276 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.36573339 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.372486624 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.388381444 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.44188248 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.373890358 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.367603488 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.976745894 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.566797702 seconds)
  done (took 179.248590126 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.363925877 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.360807257 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.361027761 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.359089671 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.359438863 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.367676045 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.360930515 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.361816779 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.366579702 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.361316741 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.360849953 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.360137459 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.362655194 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.358452973 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.371343379 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.366995697 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.97084676 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.362707916 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.360781697 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.360658772 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.14929919 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.370626229 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.360660644 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.36237321 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.361917442 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.361817124 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.367270482 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.381022141 seconds)
  done (took 152.854775918 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.367545556 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.916924976 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.394929001 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.492688369 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.397439666 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.36626258 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.491556253 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.432317769 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.385215421 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.366329023 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.368135761 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.663658504 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.379655867 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.871371544 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.560815149 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.518976352 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.879722992 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.394746575 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.368897242 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.368767544 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.495840488 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.379435126 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.663721 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.928795107 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.399738856 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.919854445 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.3627149 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.370021748 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.368827931 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923536296 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.392580654 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.666179543 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.452081165 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.435983942 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.941362437 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.894948144 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.883108683 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.512553634 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.377656688 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.369068294 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.370102252 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.354529508 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.921492294 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.396427671 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.372314707 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.914586334 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.398323296 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.372170103 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.378953251 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.371268645 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.428392107 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.443711894 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.686426745 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936927466 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.471070242 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.391966181 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.497040109 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.76029907 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.377735616 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.873931529 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.363582064 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.928128335 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.40039299 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.356383601 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.374208587 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.376015861 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.514830742 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.508568518 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.882849615 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.397455278 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.874210264 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.541658931 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.37941747 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.371187983 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.373337841 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.927652485 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.899762531 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.535229409 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.510581265 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.566225919 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.365296929 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.370925741 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.359529079 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.448148308 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.379074665 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.929202479 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.897788758 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.390983976 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.374728065 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.373742528 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.375211343 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.542242553 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.955847504 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.472971873 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.875739642 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.695065729 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.679032838 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.383093531 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.429142487 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.38808294 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.674670888 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.384285965 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.427563378 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.816218343 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.676042725 seconds)
  done (took 163.471528965 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.612374638 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.541827102 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.470414166 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.500796002 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.962986391 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.943076446 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.596401859 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.520690472 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.481473814 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.62922163 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.520009715 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.472345422 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.538241009 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.455135311 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.083519967 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.468346074 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.477908984 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.524983899 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.482687386 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.380302392 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.013768321 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.665374987 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.550209356 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.228324264 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.472448864 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.125797009 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.942159761 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.906834122 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.557335837 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.655451778 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.907026769 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.489206751 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.334020308 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.057748208 seconds)
  done (took 65.857198908 seconds)
done (took 690.298392996 seconds)
SAVING RESULT...
DONE!
