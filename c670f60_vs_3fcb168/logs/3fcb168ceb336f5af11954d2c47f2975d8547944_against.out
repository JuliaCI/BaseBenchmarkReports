cset: moving following pidspec: 4251
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.319540813 seconds)
loading group "string"... done (took 0.594765207 seconds)
loading group "linalg"... done (took 7.267861535 seconds)
loading group "parallel"... done (took 0.173010207 seconds)
loading group "find"... done (took 1.151437728 seconds)
loading group "tuple"... done (took 1.805040523 seconds)
loading group "dates"... done (took 1.239464577 seconds)
loading group "micro"... done (took 0.230500036 seconds)
loading group "io"... done (took 1.027995595 seconds)
loading group "scalar"... done (took 40.675815968 seconds)
loading group "sparse"... done (took 13.339045525 seconds)
loading group "broadcast"... done (took 1.034710101 seconds)
loading group "union"... done (took 14.124589784 seconds)
loading group "simd"... done (took 4.67084549 seconds)
loading group "random"... done (took 9.244811637 seconds)
loading group "problem"... done (took 1.986709293 seconds)
loading group "array"... done (took 21.519292617 seconds)
loading group "misc"... done (took 1.956426937 seconds)
loading group "sort"... done (took 3.23468601 seconds)
loading group "collection"... done (took 18.33550681 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536286955 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143683176 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117235022 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139436619 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188202809 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132203362 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145845146 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084876697 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.085471041 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.169988502 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142519223 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.485208548 seconds)
done (took 5.238126719 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.205459748 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086208676 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096310711 seconds)
  done (took 0.994363237 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065473993 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126432962 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080881445 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067826697 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066620316 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083982432 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068002704 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066790888 seconds)
  done (took 1.378541309 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073441673 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068234345 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085253137 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068018539 seconds)
  done (took 1.113525723 seconds)
done (took 4.584073683 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.903608504 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.240915756 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18752587 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.455611802 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.152822347 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.194161337 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672193604 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311559074 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.214795121 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103369934 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106920366 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389430904 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108740443 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669655003 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075932859 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110199813 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.164998995 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.412596331 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082016042 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082246167 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103681907 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14197529 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103978672 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077251309 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168803839 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069566862 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149189995 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.098664616 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06766774 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.248302646 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192888125 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.683672696 seconds)
  done (took 10.600669808 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098975278 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.116679268 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069799118 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14387885 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102853881 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089565808 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072349868 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086559194 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093255364 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161890974 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11736976 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107880203 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.085063132 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070867765 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104358485 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214733326 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109575726 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087111627 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089944176 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077434106 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12575 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084447626 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097545971 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079777495 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.156040157 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199320257 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115005688 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112606531 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070489683 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083257607 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.135127616 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145940952 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068334272 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084295428 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140501991 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114200867 seconds)
  done (took 4.739846672 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.036056559 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159979254 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090875384 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152727097 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08600174 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108966347 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08334671 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10031392 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248372329 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.148590686 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.463652252 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128223991 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102435365 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067680575 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084344168 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067512528 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.513188581 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146796205 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105374824 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10561164 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075750042 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090072974 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362344987 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069060764 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068336561 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087468534 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060802702 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148849847 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069694214 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.237967821 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08839475 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087522893 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101704072 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195483324 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.113953671 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115750095 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128727285 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067648964 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065708355 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191751799 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077437919 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067309252 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10814189 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120518415 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106964024 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08544705 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070151438 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184152734 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067920417 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103114659 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.891281128 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167479319 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079531869 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066945988 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294644883 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085520874 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087199388 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064953264 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.262329241 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.155971155 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068669587 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.090203467 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068254361 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069082316 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389860533 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069811032 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.727599914 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071485753 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07960314 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087813035 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068989676 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092101773 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07421518 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103421325 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068017815 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068197847 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085255305 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066985861 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086459356 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088084575 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083719469 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208231455 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069208382 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067330834 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083637504 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08648581 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114562119 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071585771 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084495173 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100710068 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087682012 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068607926 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122572094 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067994708 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083305166 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08738375 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.089117944 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131026186 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069941292 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.124332737 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082458424 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099034732 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.090066979 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117338847 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.0865296 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081762206 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069293985 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156359672 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065026675 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084622435 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068459236 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083355235 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069462268 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069674156 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101625285 seconds)
  done (took 21.266278363 seconds)
done (took 38.460919179 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.296887786 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095608145 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.094204729 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07464241 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093499406 seconds)
  done (took 1.545900558 seconds)
done (took 2.407844726 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120304881 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118551631 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063901397 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115432255 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064436639 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.122012684 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118861478 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082956219 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122180891 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066689238 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116385979 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066312175 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065085449 seconds)
  done (took 2.134506401 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082668776 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08590403 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088968762 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083433303 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082552295 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084728536 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080869634 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109002477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081186304 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090920201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065494727 seconds)
  done (took 1.794140333 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081699692 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084048065 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0880471 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082002153 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081715047 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084716954 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080851345 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106247076 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082046791 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093320667 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065776036 seconds)
  done (took 1.792169657 seconds)
done (took 6.575348781 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078251449 seconds)
  done (took 0.9333667 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.71917207 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.782270787 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084156171 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134483916 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.229116978 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.161215599 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.459591662 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113466024 seconds)
  done (took 10.713074717 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103381179 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090462537 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073115009 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09160349 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070661668 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091588305 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07416544 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072141317 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088587718 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069447921 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090247504 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071660047 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087840188 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072735399 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073186568 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088302381 seconds)
  done (took 2.226959505 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093126151 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092533471 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092442182 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076261556 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091015344 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073912555 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093216782 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074645606 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087796279 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07267329 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09288956 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074481659 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090159438 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065703398 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09428515 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079288461 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090515255 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076394285 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094753701 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077193627 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094249888 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066662492 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09214553 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076617068 seconds)
  done (took 2.979780216 seconds)
done (took 17.713839663 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134107596 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076434888 seconds)
  done (took 1.07205001 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08193276 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099424847 seconds)
  done (took 1.050262501 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08338172 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081842211 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089946924 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094886223 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065416988 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084032995 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104012311 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066261082 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081278101 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068058369 seconds)
  done (took 1.687049439 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069780312 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093730507 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071892851 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099248273 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074507609 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082475595 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07277497 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085831239 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07800484 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080489435 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071550451 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100576357 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070886772 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103884822 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074652331 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088561067 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090186338 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070528318 seconds)
  done (took 2.347927094 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066545724 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066523283 seconds)
  done (took 1.003774921 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068731938 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062925475 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083615583 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06659769 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080817013 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063414159 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082269289 seconds)
  done (took 1.379155598 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413076678 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111148711 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251441189 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.092932255 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107487 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267502152 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.088295329 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072981002 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091575166 seconds)
  done (took 2.408507215 seconds)
done (took 11.81532672 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080450779 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08520205 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112517108 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.427062507 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109210315 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066336562 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131764561 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.227073045 seconds)
done (took 2.111072073 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127076081 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.614670075 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406624744 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219973267 seconds)
  done (took 2.116932195 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.377021773 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092843281 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076737612 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070097367 seconds)
  done (took 1.495058452 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066347543 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068914789 seconds)
  done (took 1.01338807 seconds)
done (took 5.628631898 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085345124 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085305015 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06492724 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06682441 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086270071 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.065245469 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066731182 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.085914851 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065757425 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066963808 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086300018 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070469882 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.084295759 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068651208 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065705031 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082796745 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068458708 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067197516 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.083593851 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066044821 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064736908 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086052693 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065433258 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066060749 seconds)
  done (took 2.678604133 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086177044 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084121326 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07309269 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088930628 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074001398 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09041524 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075005547 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067947213 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.092190447 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071602438 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09107886 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072149421 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088267176 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073117799 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087666757 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073648588 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091253796 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069786354 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072705341 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091115182 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073407066 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08731391 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071855695 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092124027 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071758966 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09076019 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071168925 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086155518 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074745668 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089264732 seconds)
  done (took 3.303908451 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071768933 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063080235 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082639797 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073152281 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064819268 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085755707 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065613844 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083542018 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067183717 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065452175 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085720305 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065769545 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065145316 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086028716 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066885647 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086253862 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084268087 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065351883 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084257259 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066675632 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067943717 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084957634 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066243999 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083546566 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066596262 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065394336 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08489563 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066358793 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065765957 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08515301 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069028461 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068191912 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084783068 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07238049 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087074819 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065893115 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.0689167 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083394306 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066948845 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06412935 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083429078 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0655826 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064332412 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.089935976 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065409107 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085660792 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066124961 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065722381 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08487952 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06823273 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082870908 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066610825 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066595492 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084892452 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069455353 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06421634 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084721865 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064807604 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08380842 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066333036 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064443523 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083273423 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068702423 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065649649 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.099524158 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072274392 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082559119 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068978391 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065845915 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086367617 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068196567 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079020084 seconds)
  done (took 6.20835111 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119179462 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091410623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084261787 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065815375 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079811875 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065410436 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067080723 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082877379 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066048625 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088523902 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065621794 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066419964 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086434985 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077908502 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084983211 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06832429 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089611173 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06472845 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065821826 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088103703 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066142036 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087687986 seconds)
  done (took 2.608789138 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.188251037 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088605433 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108600464 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091905808 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066878092 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092583351 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069045369 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088878223 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07015479 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086858083 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06765552 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087636245 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067669354 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086192074 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068763737 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086896753 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071012616 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088324183 seconds)
  done (took 2.461155233 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078183922 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065124137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107703579 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065713524 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085471106 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068613054 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090080118 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074439828 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086773455 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066829156 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09232667 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068994461 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085206011 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067724773 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067939606 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084567141 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068853976 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085783416 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075516088 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091303632 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071790748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094122637 seconds)
  done (took 2.630726762 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081784461 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066226784 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102350948 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086392936 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063942851 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064087702 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091103525 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067600887 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092807862 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070238221 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067577794 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085699677 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072663288 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08729295 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073243751 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086627462 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070104768 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067485232 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089213479 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063842511 seconds)
  done (took 2.438578707 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087590753 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084816222 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067608255 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094049115 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068876785 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087219121 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078595249 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087793475 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070122636 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111549114 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069537113 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088309679 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078677599 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093519208 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069270643 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096138449 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077470024 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096541245 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068814799 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088686564 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111577524 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182336488 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09543501 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070525342 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086686287 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072036069 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068484658 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093871139 seconds)
  done (took 3.33879022 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067752819 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066639566 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082857084 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066678667 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065145186 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085258397 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067240259 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064876467 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087785815 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066325597 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06744216 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086983577 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068151094 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085555649 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069102723 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067694888 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086311301 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066553447 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064670462 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085166779 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068908308 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066906386 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.086986704 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065411115 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064442995 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.087892128 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065202451 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083963523 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069208398 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064992206 seconds)
  done (took 3.08389368 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077163469 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090949789 seconds)
  done (took 1.063817845 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0652222 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079408214 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083089835 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070716508 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091326993 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068561074 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094463175 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072480321 seconds)
  done (took 1.520887019 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082966107 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078357059 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089843926 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079968184 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099899666 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084357225 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159532497 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089264094 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074842269 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085414124 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083827105 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067433882 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094569806 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068659716 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093338833 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074885271 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065966787 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093849433 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070135526 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086094305 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0704448 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095499427 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071461671 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064374166 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089686924 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077418253 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099150821 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069357919 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090435977 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076706992 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072640754 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.082329546 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067689517 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088136974 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067283054 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095830494 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085181613 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0891716 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078925528 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068630037 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098430194 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063141071 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092263362 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074603327 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096850285 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069447888 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068315659 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.084038623 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066225632 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088924548 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064794394 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068085623 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.082579202 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074881153 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090740435 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079727359 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068974713 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.08986186 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071120473 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090948593 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075164565 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088426015 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072297496 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067331999 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097418486 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072735024 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096759469 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064105811 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061706949 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085764198 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077874888 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110787897 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074440339 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08799731 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069437858 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083741911 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072824729 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06914168 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093627695 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074878623 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087565051 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073926459 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093925365 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069369144 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070137304 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095753486 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065711474 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089867096 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065711183 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103191111 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067007886 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065183034 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086246539 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078423496 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090927589 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068555824 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06572024 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095329331 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062535681 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08793638 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069383503 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086253106 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080673468 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091490157 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075702331 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095550199 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078203809 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067773819 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091222573 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064976778 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087912543 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068522957 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074544044 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.082325642 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071021486 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086672621 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070072074 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07654793 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08563154 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068654998 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095147643 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074741502 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085108565 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065964799 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070987387 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087447918 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072159631 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094550879 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067581748 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063187257 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082675615 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071621568 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.087213565 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072640797 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091118771 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072518773 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063074916 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085876598 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073154836 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097263959 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069366881 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068955481 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094639863 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070174641 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087376535 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075597269 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.0892206 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069500519 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073941269 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088697795 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064144886 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090576223 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071631489 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066239805 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09143459 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071562666 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090125417 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070325159 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066897054 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093369996 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068795284 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086631776 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06871047 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066445808 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.099388382 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069327497 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083453437 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065582264 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094032028 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066835399 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066871413 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087069323 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070935294 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088370779 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067615159 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06711067 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090248541 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079215484 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092657075 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068967443 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092988978 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080307563 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086867693 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071431757 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067506743 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088918486 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068945078 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097113754 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074082298 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092362249 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071802354 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064783749 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09410929 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075232494 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086547541 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067147004 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066405969 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092113269 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073453055 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091665656 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069389752 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084784085 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070295728 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071521113 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091378618 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067697831 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085861796 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073601501 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066657654 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094899637 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068493026 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098291388 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070950991 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083458609 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072657553 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084480486 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075619832 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062583756 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08590613 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068176883 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068543902 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087502823 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071193733 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081932049 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076093128 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093263395 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07005981 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067588002 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087768429 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075713264 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087888929 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07303172 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070959397 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09431231 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0784181 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087504202 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072142193 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097465924 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069277563 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062063968 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09347929 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067438656 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085999765 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069461172 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066037346 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091296982 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077189953 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09562057 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062985327 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069505845 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086778686 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06764885 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08290735 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073789919 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070336709 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089262613 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07475162 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088913601 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069555978 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091027812 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06939126 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069021526 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089171783 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071696653 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087940358 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071537951 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06687326 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091850866 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067042821 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08534526 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071604822 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067874552 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088244599 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073890003 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086667515 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069508428 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069637492 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089377112 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068586019 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088625307 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068200139 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070984084 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089713995 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068798966 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090686816 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064805974 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075621959 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088201508 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075589765 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088537189 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066076177 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072860513 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091388733 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073175382 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089672414 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06908962 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089617008 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068544449 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070379931 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094913908 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066434567 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099325823 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076063799 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088220234 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071921212 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068128013 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090396319 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067890688 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088207737 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07011772 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068024379 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088561445 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072569805 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089877953 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069779613 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069418983 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089447434 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068002779 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089259199 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06377395 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066972395 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088290483 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068703501 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097703141 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069505708 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067269639 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088816706 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068855791 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087369719 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065528915 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09502365 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0780201 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088238214 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076749186 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066892267 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090445999 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079012874 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082424829 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067691742 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065418429 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086871757 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075233475 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087925731 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078477198 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068433049 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088066391 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065175748 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088828391 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067264281 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061629796 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086185031 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071831751 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086257971 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068059765 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067945766 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.0919569 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069360252 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097615889 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06791326 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087184884 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070413144 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06529531 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08756201 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068802474 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070819576 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08961873 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066287153 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085019277 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068771026 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067931093 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08966859 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068089608 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089034973 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076138491 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067083089 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092177644 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071798262 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085518521 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071989322 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067209324 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088406879 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067267764 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091676952 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072373152 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088159166 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078812717 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067107351 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089391435 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06872361 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085400974 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069153305 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067646679 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088897188 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067543952 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088526881 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076623484 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065315421 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091957323 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068190282 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088365723 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077021475 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068340323 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093181889 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074207825 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088680953 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070336122 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096092699 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072134503 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089985828 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07073082 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06926746 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094867158 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067804058 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093673049 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069608074 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068032522 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090145737 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066376853 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087141738 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06911712 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067395992 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094750398 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068479366 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087481121 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068152895 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06550426 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089378833 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071875435 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095916086 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071453245 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070165244 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.085348699 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065317633 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089277185 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067140264 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069431717 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092681948 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074045475 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091117093 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068790622 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066883283 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.098257317 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074112929 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092480092 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066940074 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.0911182 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070365458 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069659605 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090243509 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068770177 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088914495 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07343611 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069535695 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088516539 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076104895 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091979132 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070516447 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088324696 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070783383 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068247737 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083707395 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069818624 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069819898 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094791972 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070171515 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088586241 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079319525 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085425389 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069907904 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070930226 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089067657 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072736172 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083563882 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070939436 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068631076 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089823436 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063470646 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087812168 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066839174 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069456913 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087824687 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063945821 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099152102 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078146491 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090774011 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0689526 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066497285 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0849336 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064311194 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067197837 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090542686 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069804364 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099243785 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067651387 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086088135 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065005081 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068232769 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091891925 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072469869 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084591552 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064909841 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067471835 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092508477 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074859826 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065546247 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089670133 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071070413 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091520839 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067118089 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091477701 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066169294 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071915738 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102985855 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06889786 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090274358 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074886119 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096386389 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070437815 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063623887 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.090102574 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071285733 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089315858 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070737247 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069187372 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105183082 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071016367 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088443675 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067077715 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090680055 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06843486 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075156506 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091034181 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068856734 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094166482 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070941227 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097113679 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071094895 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09611669 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072789007 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07074772 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.088482387 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069131442 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086121518 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068694045 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06967867 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090283877 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073480983 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09695903 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067464169 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099377523 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077954313 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089833743 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066318822 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067318947 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087945217 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064305177 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068950048 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087739168 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066020079 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086549236 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068511405 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068483999 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094924268 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069948388 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.090352837 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069471533 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062322404 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091670291 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071340372 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088497242 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06728098 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067907485 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090247058 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072778033 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092575488 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067975841 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069636114 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091083689 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069470091 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082748134 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076692272 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06768521 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092061034 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067886536 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067340099 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.091341958 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071858326 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095477396 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068912266 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090813418 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077971624 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089951922 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066686642 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065643458 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094252294 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066979199 seconds)
  done (took 47.80516386 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10710027 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084027252 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061815848 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08146418 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074675142 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083413481 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063026551 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062452498 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082822718 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065490557 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082994499 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063536659 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09197827 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087747376 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096436813 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067814511 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082613822 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063195166 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081948878 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063491676 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09118173 seconds)
  done (took 2.584905759 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075822219 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090406205 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073636472 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096446615 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067074316 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091823636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072523258 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090928534 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095067724 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068177992 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096515545 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071236106 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087553772 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068583444 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086616858 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071999757 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096068432 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067833932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090778605 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073295944 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090713613 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072193493 seconds)
  done (took 2.736075335 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068540178 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065411811 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087292064 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061911899 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064784162 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081281732 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069380858 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083666534 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070072447 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064563055 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085900778 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065446752 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094776302 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062338911 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066206041 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083735912 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131787227 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070087434 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065002362 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088405572 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061490799 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088152792 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06223187 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061455568 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085556872 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070132027 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086705246 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065165764 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064902821 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085967477 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067780356 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083834432 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070000269 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06812767 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087215291 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067719279 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06654136 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.089116589 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063385836 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086120654 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069541275 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062980999 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089149497 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069896832 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064929303 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.087062451 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069361681 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087823123 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064562861 seconds)
  done (took 4.624627893 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086466193 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130308119 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088707708 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091309511 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104359005 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096142173 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071953765 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115138729 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065019057 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087047348 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082541359 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105482738 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086819289 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071495054 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068602855 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087590453 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066616976 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086350552 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070161439 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086351931 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070128726 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093523651 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100060966 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082139952 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091912753 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067141835 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087104629 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074257145 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102875355 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073269821 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093942132 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073964636 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.104550031 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072878607 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0891259 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070043767 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106215039 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067205492 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091990163 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065190745 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091731074 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072900232 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.095157345 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084418329 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089775269 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073194127 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089038694 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064933867 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.103432167 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070079967 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098143671 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103333242 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073213293 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087444077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07394256 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104765921 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06843417 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08614356 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071994624 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100975253 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066961513 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091160607 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083978939 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090521146 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076212282 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104542964 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072963966 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092630081 seconds)
  done (took 6.879614346 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075326373 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09203567 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080673666 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101342159 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092111515 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073886751 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092878489 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072578351 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092983173 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077572069 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093170517 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113156037 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068269206 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096157018 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072477349 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09409676 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072557592 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094468476 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072216384 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094009717 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092481205 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081014033 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093637933 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100351675 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103923208 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088469165 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072510034 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092588808 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080625632 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093487628 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105764727 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075013453 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095465715 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101591655 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087360401 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095662908 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067209282 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095323791 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075147562 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095920131 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070214156 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104850161 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073675105 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090977645 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074263534 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096075884 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103755044 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086236702 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098202498 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100293565 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074446793 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10152811 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072407899 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094506954 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101210337 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105812593 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102570489 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101001389 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072552952 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10305956 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103215736 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107694967 seconds)
  done (took 6.505417528 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087556023 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09633076 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096508052 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063312961 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063696106 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09103804 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064783754 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083783462 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076366008 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096092614 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079287905 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092840091 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074755625 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101306803 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092771517 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076082044 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093360345 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071984289 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097666705 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072500026 seconds)
  done (took 2.624370853 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076222491 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103320087 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068003792 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071942758 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091493456 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071741278 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09026782 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068748022 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087649166 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069720235 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097595669 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076398631 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087661905 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072443725 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097252139 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073344814 seconds)
  done (took 2.262413591 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079203243 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097247542 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080218183 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087569239 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064912116 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084599011 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067817972 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06367452 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086454542 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082988206 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090896397 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071362288 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.089854341 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067151398 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065183195 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093213875 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064881691 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088188866 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069214027 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104404871 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079535838 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087827457 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070035871 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068747338 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090930449 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072874779 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090972146 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065820335 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088824947 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068237992 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.09008042 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076729308 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08529733 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067530301 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066197433 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087207263 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068052815 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08960841 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072155125 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067514251 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088733001 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067342104 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089167923 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069320493 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084644029 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069713361 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063861179 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095734104 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065642931 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089576517 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06827175 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090046974 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070503313 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077392108 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094190632 seconds)
  done (took 5.297779724 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080375725 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068476451 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083193288 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063831465 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089871691 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069030704 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069377093 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090141543 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067726155 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08642304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069654245 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091285776 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070763166 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070504064 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09167436 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071477379 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085103756 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070154358 seconds)
  done (took 2.350661557 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073114851 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065988914 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094425991 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068072444 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088892491 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071703608 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063646513 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089088325 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067063145 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088502843 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069665807 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069586716 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088341163 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070774339 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088743016 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069066645 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069847978 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08829443 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068323969 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084489978 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071857856 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065585291 seconds)
  done (took 2.639142537 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072193173 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092283356 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.166648052 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111734841 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083421282 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.104415249 seconds)
  done (took 1.596033282 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091286252 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099259731 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067645117 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107528856 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075008779 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087445344 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069073189 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087891956 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077510125 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102716436 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067706769 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097839663 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096809033 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077265307 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095410214 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073604352 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089511194 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06769167 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089663962 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107401605 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071206951 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099080706 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070640538 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091192401 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070161507 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100203663 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077845714 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105137525 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090309464 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078439984 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097118406 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069567642 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099635294 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10343406 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071696055 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098728444 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071141254 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110024974 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074097965 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09781609 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068942803 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095714551 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096744938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07362597 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097040411 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06813454 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094667532 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067497917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08963306 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113578959 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073560168 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097548242 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093844267 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078457701 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097966766 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113139244 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083446606 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101244943 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096671175 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08446143 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100945704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074923946 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100572462 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105591162 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076050203 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102108639 seconds)
  done (took 6.787975585 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085477206 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107620062 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068628066 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103562236 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096702271 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069554327 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0889604 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06975838 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088655852 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069521134 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130375619 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06875764 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098238671 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098006638 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069270101 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08912212 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068996442 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097283927 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067800366 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114222693 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089216364 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077572443 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098341652 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096461288 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082825001 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095633196 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068783109 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090287699 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069413099 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08963521 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073322175 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089997525 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096887723 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069148651 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097020753 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068727045 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089003644 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073745151 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089121801 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073720848 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098625517 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106668726 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068982601 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089073582 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082393767 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089629228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068018454 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089470274 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06875102 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089784422 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081570137 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103264654 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103102274 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096023831 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070515853 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088933851 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070282585 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088660793 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071466263 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098226396 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079465001 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092733778 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117501262 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070981873 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091810877 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07888315 seconds)
  done (took 6.65385093 seconds)
done (took 133.563521134 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203924025 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187099914 seconds)
  done (took 1.35699781 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069419068 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094530904 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100502762 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1308345 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088482113 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100412484 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119743185 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079284379 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065739679 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087905437 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066832998 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089232193 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133380625 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066639442 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088066703 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069199428 seconds)
  done (took 2.423849294 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103903961 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196840957 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113606324 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067449972 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104460475 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080677759 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089027302 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079654257 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098566792 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068667224 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079020779 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.100422939 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066676252 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100071685 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075967372 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102847253 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066994128 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102284508 seconds)
  done (took 2.673703036 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104555794 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145254002 seconds)
  done (took 1.225332102 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201667493 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124994541 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207210746 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.424286041 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.208469041 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284065852 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178747049 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177377848 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159887658 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.176387453 seconds)
  done (took 3.113451845 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098644847 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17117366 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312674729 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141784921 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087433081 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12125662 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.143756131 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.091913284 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.103292391 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104527213 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082816174 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.10252154 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099439014 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100374045 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075979569 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102354222 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124665901 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077077396 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077313878 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101032922 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121496084 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069605442 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076614406 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098657308 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079119327 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102345251 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06781504 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090578597 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077879149 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098929522 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080840228 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118819714 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.101059532 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.136107653 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.084043547 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.137800158 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10288637 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074853263 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.099413329 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075334996 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102569958 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079027521 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109027925 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07906039 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.090124229 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079215615 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090189059 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069776533 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.103194598 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080711797 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.103570287 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081494705 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.136555714 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102674251 seconds)
  done (took 6.495990295 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.748543673 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110449012 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096783907 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.823793243 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090042782 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10914536 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.723737757 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121624371 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214128766 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.779685326 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091438988 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102696671 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.184409955 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218397053 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93319762 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291452155 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.649183433 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106169563 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110796415 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.134811039 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142218508 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18001766 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153416909 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.441792165 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077605387 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096192132 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140710695 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076191133 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141610178 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108682216 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073188845 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179691846 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.231655618 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.157342567 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100021293 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07224974 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093694262 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.151551579 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225785453 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194473676 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159768346 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069619156 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070990357 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165857692 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134434785 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069931165 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141698929 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.154723008 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.149820904 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097773008 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075343851 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.165529475 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141576242 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14445955 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10217883 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.277243094 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288143441 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071553251 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123031015 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10657838 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217381704 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106697216 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179556244 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.161449034 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.172187689 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071039161 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756894475 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1516196 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093213878 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077036851 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1230994 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075567469 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.162764261 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.127193927 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371344993 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.14353975 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097142653 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071050325 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233740994 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085747568 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092995294 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.144425121 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078082203 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124247894 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.147468809 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142562732 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170812658 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.215860054 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145318608 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140772259 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097405742 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12496955 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077465502 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194155382 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196441716 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.144089765 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.190923682 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143173352 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.142216561 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170837203 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078010637 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153035431 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121748187 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101941008 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141752074 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171987213 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125251056 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106868312 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074069373 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142700309 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.127220426 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109731819 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143276239 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152198947 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484907977 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149491194 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07007104 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109971857 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141192522 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144145074 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076304401 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242186849 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125972339 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.14970239 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12439053 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069166769 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1232697 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.143002947 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102174484 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124043923 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141781833 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077948716 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238189089 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.174459493 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099528735 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197560237 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.163441105 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075595199 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.150423017 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121978143 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147318333 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101954324 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14071109 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099149864 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755073251 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144391758 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123811305 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097435276 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177737101 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07423239 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082436818 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108341045 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068649182 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764235659 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109018703 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082401108 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107801016 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076187085 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122935318 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138771573 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09652024 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.142144584 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204527327 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077249007 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121737257 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083917523 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164869813 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077628381 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106927678 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085133545 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108557475 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125248898 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074702399 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108143253 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15151106 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144339767 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.197395904 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.543832571 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09439484 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085351084 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204522312 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071507473 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266848343 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140783516 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202205929 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143642808 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080230934 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285159169 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.146984701 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.179339924 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109090891 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156059747 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069934712 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139726535 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.144444388 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095591056 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076130816 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142445243 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168644207 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14580116 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937649183 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070537619 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207748055 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06868771 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172882399 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077994317 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09868578 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.251051733 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094748865 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149254343 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.145268264 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073306982 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10837468 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.737817088 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108016336 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142833583 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097834802 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17578609 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144442697 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.161929613 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141361414 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076031547 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.141164152 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.191406395 seconds)
  done (took 41.172385306 seconds)
done (took 59.435654935 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.265094618 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.18204697 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.244852333 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143898567 seconds)
  done (took 1.907975303 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145138144 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103609701 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118393727 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087405039 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105725291 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090760805 seconds)
  done (took 1.649920584 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.408584695 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271225433 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237813254 seconds)
  done (took 1.918017108 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283760951 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216216515 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.455086369 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.308170507 seconds)
  done (took 2.370548036 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.179362721 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118918727 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068820206 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111751815 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164102174 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.263619029 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130414721 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.191304024 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081699504 seconds)
  done (took 2.359023193 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.202642984 seconds)
done (took 11.409535834 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.268777273 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.120832348 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.253599308 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.121464788 seconds)
    (5/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.104560996 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083312476 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.10376697 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07888855 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.249793627 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101636965 seconds)
    (11/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.245523393 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.1650481 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.150072767 seconds)
    (14/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.208015339 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.197972769 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.169420379 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.230211405 seconds)
    (18/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.186542364 seconds)
    (19/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139112129 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081859031 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.258978348 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096037546 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.174212179 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066280384 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.118467033 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067627334 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.224899407 seconds)
    (28/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.101000089 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118315463 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.177927038 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.101963065 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.200882324 seconds)
    (33/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08079198 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054340266 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123146941 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092993179 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.104468259 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.084513823 seconds)
    (39/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070735703 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100032405 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073325531 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.141708957 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089404408 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099572543 seconds)
    (45/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055328996 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069160023 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.116223686 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078558702 seconds)
    (49/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.1014472 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074548659 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.142144093 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052759213 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120913567 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.212380929 seconds)
    (55/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.159713059 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.106336668 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101798984 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093788243 seconds)
    (59/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101947734 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095043194 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097192931 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.185647708 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073145911 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076655764 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077734861 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089351693 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.209437428 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195015038 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.091841385 seconds)
    (70/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122006404 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083974893 seconds)
    (72/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100168102 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05416003 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.10295425 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174315366 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094891921 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.168515602 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119540518 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091064744 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.090382355 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191658728 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097324335 seconds)
    (83/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.141022136 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.147669121 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.163050111 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.195365093 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074204263 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.202350184 seconds)
    (89/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076250347 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077037561 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076738683 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076162174 seconds)
    (93/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169987586 seconds)
    (94/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.120134998 seconds)
    (95/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.140693777 seconds)
    (96/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.084774464 seconds)
    (97/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.119273142 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070745457 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118136762 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194316684 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11389501 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122025447 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068410515 seconds)
    (104/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.08657965 seconds)
    (105/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085542677 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074765142 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.100172234 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.149244503 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.117369981 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.164625935 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076735226 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06804848 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099928939 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144115553 seconds)
    (115/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109782418 seconds)
    (116/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.197214594 seconds)
    (117/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072787861 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075014727 seconds)
    (119/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169465143 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.15969672 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07725306 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103550146 seconds)
    (123/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078582866 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.169664018 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054783821 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.162961861 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076439213 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.102514139 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.164944074 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.100015688 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098564868 seconds)
    (132/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075696593 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118219001 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073106682 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07799276 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.091900715 seconds)
    (137/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.179588655 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.188481489 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.077537025 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.120479279 seconds)
    (141/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173689811 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099448218 seconds)
    (143/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078733884 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.10090241 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076192017 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072857086 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.140788692 seconds)
    (148/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06469212 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.179528984 seconds)
    (150/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09215446 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.093025087 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067927458 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.08037183 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068270808 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074510851 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.077738953 seconds)
    (157/309) benchmarking ("sort", Int8, false)...
    done (took 0.16986452 seconds)
    (158/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079705892 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07299099 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.078217219 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.140589639 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.079025034 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077419486 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075704711 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.16577782 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076108155 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197123105 seconds)
    (168/309) benchmarking ("sort", Float32, false)...
    done (took 0.156112858 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076712871 seconds)
    (170/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054346314 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.127101426 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055466301 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.093925617 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075844963 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067220155 seconds)
    (176/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.138172558 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053483133 seconds)
    (178/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116867689 seconds)
    (179/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055062342 seconds)
    (180/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05386891 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078671601 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101159187 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.169609478 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055860229 seconds)
    (185/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092996263 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055407209 seconds)
    (187/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070107987 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.166566035 seconds)
    (189/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102989937 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093791156 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075162671 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.153784759 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076876616 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.093253034 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069429344 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052933411 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.078710934 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06942871 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053391581 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119501771 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053463704 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052887565 seconds)
    (203/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.12991151 seconds)
    (204/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074666417 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092034927 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054473682 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.282978585 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.165715078 seconds)
    (209/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053760773 seconds)
    (210/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05434981 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.102006249 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074400585 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107688559 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077789516 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06649364 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100612035 seconds)
    (217/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114312746 seconds)
    (218/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095548716 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094238975 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090792785 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106488162 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.173444949 seconds)
    (223/309) benchmarking ("sort", Float64, false)...
    done (took 0.127582805 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098596905 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067592912 seconds)
    (226/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053488623 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093227217 seconds)
    (228/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084361569 seconds)
    (229/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062465588 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.092475355 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053901841 seconds)
    (232/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067861588 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079675627 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053119478 seconds)
    (235/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055249887 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.168511448 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067300039 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.0956282 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082272194 seconds)
    (240/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.135348162 seconds)
    (241/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06400275 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080178448 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102877206 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069342777 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.142345954 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073563772 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094961185 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068080422 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065154642 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089587862 seconds)
    (251/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053158328 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089224983 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159439764 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067177102 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168025856 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098026397 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05542452 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075965369 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.076050019 seconds)
    (260/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056222228 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054217009 seconds)
    (262/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053576248 seconds)
    (263/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.086814224 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05343074 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174176508 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149795587 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094011677 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053553705 seconds)
    (269/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071442585 seconds)
    (270/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213282117 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.119148791 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052353488 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.077829132 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056251036 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160086839 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06951517 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067758996 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116968484 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068528201 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099786044 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067399917 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075545194 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078056586 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179953302 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091852477 seconds)
    (286/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067785795 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052506567 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.078243415 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06841625 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068478569 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.10086428 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053371076 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053115255 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091611575 seconds)
    (295/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054393565 seconds)
    (296/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073526879 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.113746361 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072837607 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091478367 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068473136 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074059831 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.087258529 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073773023 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12286968 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056612533 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092531816 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.077231324 seconds)
    (308/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063675239 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139627508 seconds)
  done (took 34.109289747 seconds)
done (took 35.123005185 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082117227 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114672527 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076242326 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.12057312 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083139657 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106661718 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075580927 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.106925554 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082402749 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107796725 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082072914 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05644752 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102466182 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077249644 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102077489 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094632675 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106132366 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074732422 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.098911369 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068454732 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075590098 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092592693 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070619832 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055882504 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.10740164 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074806224 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098772712 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078154892 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066803802 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092708646 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071231889 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073960956 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093034016 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080617481 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098080072 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075968711 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100622297 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080135309 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068664893 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092186668 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076885263 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067229161 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.099429688 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074803004 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096714165 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074237083 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07504461 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.107161428 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094471874 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095968597 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075833436 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103038372 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080169425 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073370318 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.097394575 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075515773 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09677936 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09516357 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.101078329 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071210869 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075539737 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.101609153 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072615676 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.099219864 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076740745 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076811686 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1035284 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072676238 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101117651 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074260004 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067216177 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100763203 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070474884 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.090354935 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078869464 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078119625 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091597284 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074209279 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073539084 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09940304 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067084746 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095046759 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070586899 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073501192 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094841153 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057227357 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071269175 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.098181726 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067810581 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075279801 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099595941 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075224251 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093165665 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079760288 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067134573 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.097822506 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06787803 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067712641 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095090594 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072043733 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.090131649 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072746688 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077099197 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.093765944 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074751977 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081401794 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093609587 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073380142 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091361132 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067975678 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082844357 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103375595 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067280374 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094643862 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068508671 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074203121 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.092637133 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068205583 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067373381 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.092926118 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073500819 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06726044 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096333763 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073479791 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103868827 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065731892 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068868974 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092289505 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065787609 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070703388 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09140639 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06714827 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093760137 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066680059 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06962342 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.092581007 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07655039 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07015943 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101101765 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069498565 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100726714 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073316116 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073230367 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097756865 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067898658 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060250626 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095439146 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071534735 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068826019 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.093056728 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069738248 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066853232 seconds)
done (took 13.672923143 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067503598 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170022584 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131421724 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098697777 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115988667 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067960989 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104442068 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106010383 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096286384 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.131234315 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090520418 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112171939 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11833782 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.092762158 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068070166 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071216503 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.094687637 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.091429915 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.131844166 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088239288 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145157146 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092456427 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.123869643 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094264389 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.116754071 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105887653 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.094486767 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072685872 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070890997 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12057086 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.112881674 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072363014 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06820139 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129401673 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121281784 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08836795 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092165923 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087398336 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091490748 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069068555 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118771715 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102249974 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111440757 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083920057 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.099651105 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070747077 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092900304 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089365337 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118627833 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082952835 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11764336 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138286563 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070914075 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.111489335 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06610987 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115613529 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.083696833 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.096522311 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068261328 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094760282 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068944195 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071055926 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117621525 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11938637 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073180424 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10883755 seconds)
  done (took 7.573533905 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085618761 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.116746346 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085727004 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107878036 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066925139 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066150118 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090847565 seconds)
  done (took 1.691629753 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067861312 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087982639 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114442261 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091553638 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114947379 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088967426 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104718821 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069097008 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112170123 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070544699 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089499934 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134600539 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069713739 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.103127594 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093580837 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095320499 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09247478 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094449199 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072504722 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118129166 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073248889 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088935448 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.097962185 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068888682 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10951205 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069468984 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142523943 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073267989 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094040951 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073832522 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066786626 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.146197784 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108170672 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081190736 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06789636 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110416334 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08409085 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092600705 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.0859294 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098576266 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085460863 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069508885 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095896443 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068208541 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072984748 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10745967 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070051794 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094680376 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072703467 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089041495 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095578505 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083770177 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094778933 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074246634 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07010887 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101598248 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078950323 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095108678 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090470486 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070049745 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114172347 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085638972 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.110816173 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085555504 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097851241 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084323723 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109445711 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073165459 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069853296 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.098628639 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086763703 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.091942402 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071507275 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079782512 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096636607 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093916192 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.118785506 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070712464 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104714714 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070536 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069698382 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094932181 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093563457 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098267229 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070553803 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072733775 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098219828 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067178096 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067851563 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.099146785 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068085881 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069691734 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09911284 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069823017 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096765404 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0879908 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069212061 seconds)
  done (took 9.683658381 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069488351 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067563718 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09695189 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071028508 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069898065 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09650523 seconds)
  done (took 1.559296838 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098881379 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094922968 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081665214 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.096625366 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108856132 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.11035613 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085792932 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110711451 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087817247 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.108433223 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084666155 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111369432 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091041902 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.10191674 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084549278 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100097238 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085164603 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10425388 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081612735 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098985728 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091242992 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099445573 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077253338 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085152091 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.099470277 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074468582 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104402606 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080763487 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105534351 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082650117 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097620036 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070787853 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095601271 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082851009 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106637191 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072082279 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097448979 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072328628 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100381066 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071943745 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105340863 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076007385 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078753995 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100339556 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.083031681 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.097652056 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071284771 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101609437 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082641138 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.099064062 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073119461 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097048392 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071120823 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094515803 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074235935 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106662692 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072490958 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107455514 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077627088 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074617113 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.09883702 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073392364 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11121834 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07300256 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.109694986 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073045387 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100080925 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076596413 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100991875 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076575951 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073163142 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097952954 seconds)
  done (took 7.590920372 seconds)
done (took 29.168195961 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.672641869 seconds)
  done (took 1.754689978 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.781962558 seconds)
  done (took 1.865894503 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.030296178 seconds)
  done (took 17.11772492 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.644379302 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.803133705 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.832851751 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13788178 seconds)
  done (took 3.499905986 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.910757768 seconds)
  done (took 2.018970765 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237112189 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226604826 seconds)
  done (took 1.551533464 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.781441767 seconds)
  done (took 1.877211224 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.327349698 seconds)
  done (took 2.415360802 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327755911 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186229422 seconds)
  done (took 1.609725555 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.532994013 seconds)
  done (took 1.628332142 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.925257958 seconds)
  done (took 8.026231552 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229818968 seconds)
  done (took 1.34138126 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.269905694 seconds)
  done (took 1.371000285 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.376490317 seconds)
  done (took 4.475821361 seconds)
done (took 51.640946806 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078853081 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081502749 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105927297 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078523673 seconds)
  done (took 1.440044714 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07869795 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072123787 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102480948 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071894707 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10220002 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07395228 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099136845 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.0776501 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072439314 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099753851 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073085886 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097167849 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075743737 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099014385 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072344294 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07690969 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103187211 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075032052 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101716154 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073977878 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069856735 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100264533 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075434587 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09754778 seconds)
  done (took 3.149525036 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078900401 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072777646 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099612566 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072797619 seconds)
  done (took 1.428430416 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078468806 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115158246 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089630628 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076715504 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118137208 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111264683 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070570955 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068809301 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097390938 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077410321 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09123473 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099968188 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112662953 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076987591 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103662018 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06796499 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06806639 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112895055 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076893961 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103469311 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071512524 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079720917 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094165111 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089185826 seconds)
  done (took 3.261334601 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07837148 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10160702 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104521714 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087655259 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.11724783 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06574214 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101768007 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090629813 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150360998 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064747964 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096390601 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065705946 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096829434 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066450076 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076203787 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.135600228 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112557612 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094869098 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095904346 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.092004947 seconds)
  done (took 3.007616545 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076853922 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069197345 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090955485 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069586612 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077467476 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100178062 seconds)
  done (took 1.59375089 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069810896 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066614759 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091569405 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068228519 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071231246 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09255188 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067057362 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066769854 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092547635 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067343575 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06665594 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092113186 seconds)
  done (took 2.021782766 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.385843289 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097793372 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070714101 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094247116 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073188154 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09452252 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084382591 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069248001 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121248927 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06884433 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094721707 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071931984 seconds)
  done (took 2.439874498 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264452091 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076610878 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325566437 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169190097 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140235074 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158381764 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105713125 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143055875 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198917296 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138833242 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203655355 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224250704 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13362246 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166550971 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115590586 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132193444 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186160623 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221670926 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129497366 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19957937 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206893124 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155701646 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179358864 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130061931 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134729837 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149979907 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070816632 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106276742 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234184891 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164846299 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203903259 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141125134 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099138478 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237521111 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231336584 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197034445 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162746123 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08814312 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.160862044 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16630144 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256373216 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114740266 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19423815 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135733348 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106686972 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174843798 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146786095 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148137973 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141336299 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119477099 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179444706 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247183209 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169565323 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118184428 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140563536 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144908648 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145490788 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104040806 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271826286 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199772507 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163638903 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100900836 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099543187 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219156771 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163361697 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147284806 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.157830835 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123415064 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171981615 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219334754 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151680337 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17724259 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190854718 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091803873 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151125114 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200612474 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156196815 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226432634 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154831699 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074241358 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151941592 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129828654 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080530237 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170988803 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100439988 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207615853 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125587829 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138939947 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139696107 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135677482 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109972691 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22034583 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203727716 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128824444 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06774001 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129931506 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149888403 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176597444 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114398683 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136212486 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152966448 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081790485 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19756125 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079001908 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156456116 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.107233498 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157103698 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16840311 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078466702 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156414157 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128844254 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12783491 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163859258 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22000661 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091649038 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111966721 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226779197 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159063885 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136193975 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182163401 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191025151 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128682568 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129020568 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204358294 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242565484 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090171818 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224230758 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135349468 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0853947 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114205124 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154641679 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139815076 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150323597 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083256629 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181141096 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205265177 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.105150226 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09787973 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197506888 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084702136 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111619213 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143195307 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128465263 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095337147 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127484282 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133165258 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168609856 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15328047 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134629579 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152100419 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125379518 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227602638 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116413669 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129271019 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10586622 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096333182 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.1651517 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214551633 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081901728 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225942388 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155218915 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131260896 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148745209 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08338495 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168481208 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105273072 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071081507 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201108305 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138324489 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110463596 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210295764 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130122609 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156086205 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152029262 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162196198 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158038851 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.187707526 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107257971 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114207358 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139447821 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154154365 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099336545 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094736895 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110050743 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130094736 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121265911 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084753971 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170083197 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182831726 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098488734 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1399033 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123926011 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17923862 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10359725 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158483171 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147164806 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121243526 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.185707146 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212815722 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164778335 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127541247 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174206999 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097861383 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074344089 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117717144 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155711 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109512802 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085046827 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14497853 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205332385 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15828238 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166306999 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138799886 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1496128 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186245919 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098629187 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116327399 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206997289 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154154711 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.158744374 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092200121 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.12630723 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175106426 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135388604 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243604169 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143285464 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15207159 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209388781 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130910827 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081210816 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133373433 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166493273 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132871469 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209931257 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127243092 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089298918 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137226053 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107869939 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132199886 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157795995 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149745722 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162933336 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144311685 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187882456 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0788181 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146414796 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15180793 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149565514 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091223595 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149286118 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194137586 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122569832 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145958318 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212490789 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080250844 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152752002 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237230947 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201418866 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086185941 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138524801 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154702724 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158142194 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147514917 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168375206 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164248695 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165834158 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111709013 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113105895 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113572536 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098624151 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13392251 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12227182 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138985879 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145537229 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121198938 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160995951 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138909891 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138260092 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147539152 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098468639 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118775779 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123549555 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209622932 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149735182 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233836613 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129142558 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207636171 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199184981 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103347427 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079284598 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108845488 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169727814 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111846143 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165102076 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126064238 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110408772 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158960555 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205712961 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097581066 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098368059 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139673269 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165485344 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139297623 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124548435 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106936521 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222727306 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130660136 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080322581 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153389963 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132873303 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130555003 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235348974 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062158388 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125100034 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076391227 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107070977 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160291767 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18659753 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111348905 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1552719 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149453581 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149256291 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160077362 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12908525 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097710449 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140973595 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207281524 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15787142 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088792269 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140603934 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186578331 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18849512 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133110094 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123286857 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231657688 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187361815 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223680165 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116275623 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144964177 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14414286 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111537782 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198401639 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082952729 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229794732 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110735745 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16588943 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132365932 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120671907 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158642662 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12456852 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088931648 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208384164 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149436984 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125916577 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081381458 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146547772 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151547361 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134465434 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102087124 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170298646 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072479277 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194567464 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20213339 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110184498 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134019029 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096300698 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109679656 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136658349 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131352941 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086557825 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.148239678 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235017803 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118311854 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182436935 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199530226 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142900733 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167712254 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128469495 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663886018 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078528722 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214663026 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149561869 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237831623 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126076693 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148208498 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138315365 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153125265 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175873445 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13330724 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204362314 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162036145 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149676931 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10663529 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131847272 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140018526 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092151603 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134653327 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143492593 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145081878 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127920623 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150231958 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156021895 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109201014 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095660099 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219324307 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147219039 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172432501 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198378199 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086869321 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148072886 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199235097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079831226 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150179489 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216634804 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137238304 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126349282 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08168314 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13377925 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233595455 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073168882 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221811067 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152161997 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138882029 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142993392 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146920931 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189422539 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136982901 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156084122 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121542861 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141514535 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143674056 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086589042 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105220233 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10672037 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140405378 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127920514 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130547721 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.146038535 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187394152 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071459289 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123661253 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131502887 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17373998 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239165457 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117124941 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083246323 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14696699 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141774115 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144604025 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180914468 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083124782 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110050179 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082136909 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.141316172 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139848521 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144874634 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105397447 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140489759 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227533732 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112030091 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226041558 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124159362 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134585499 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070357229 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107348165 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095887136 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125493827 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137091924 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126012846 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205404269 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.126046183 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118826277 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12073166 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07536483 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083620272 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186775629 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139474407 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150833981 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100203994 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.091037086 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137621943 seconds)
  done (took 71.793533271 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15314132 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13278104 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122358832 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177727048 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149496553 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241322516 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185225558 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227217747 seconds)
  done (took 2.57989051 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070346484 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121453747 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10365184 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119128986 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093881307 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069508202 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.301480149 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110717151 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06736356 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119126703 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119350162 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095505528 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.484185083 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068330521 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.098755972 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.088274855 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069216109 seconds)
  done (took 3.383540897 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.436295068 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.657265134 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.458338074 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073628583 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.970449928 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11057129 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.55820713 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168525885 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095072398 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.444606151 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.723438595 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157389098 seconds)
  done (took 18.048103778 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076413579 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069199557 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109917058 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084345663 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098442603 seconds)
  done (took 1.631159934 seconds)
done (took 116.873938304 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080596714 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.346059729 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053047207 seconds)
  done (took 1.626853391 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083830133 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083427064 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112847586 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081767827 seconds)
  done (took 1.564506123 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075424897 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075959682 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112110623 seconds)
  done (took 1.464243217 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.283094399 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165802165 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089822827 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084295128 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077116451 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105097473 seconds)
  done (took 1.465533109 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074067392 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073806377 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100278395 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075547023 seconds)
  done (took 1.516719333 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077504936 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051901954 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054175359 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082883215 seconds)
  done (took 1.464712802 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090551771 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105459449 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082522425 seconds)
  done (took 1.477839042 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108128225 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113331744 seconds)
  done (took 1.42345678 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08302055 seconds)
  done (took 1.280338445 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092564732 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141388684 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15757966 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136377788 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166583012 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136625322 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085399266 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115559387 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104728965 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088456472 seconds)
  done (took 2.427624456 seconds)
done (took 17.522470461 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078718077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.401981195 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361022858 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115823559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668967577 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354817173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005260064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118597831 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121506217 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095508831 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083559612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675847179 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969950408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.364446393 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.957042639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.41054238 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676220075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067984282 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066832708 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095973147 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961452319 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094448189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068181452 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067132834 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675102027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370327155 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094866197 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.418769834 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066434196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097677146 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355519959 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094830044 seconds)
  done (took 16.247787618 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071172969 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143266046 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074145206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082316975 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101334692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06901943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098702492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069299809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153672598 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068408759 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112605223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068764295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100132066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071482175 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086413533 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099362464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070896492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068694032 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096442302 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067989757 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113393591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068244289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067519155 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096446916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067699596 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106880445 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06861796 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067467639 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096371436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069937526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097580346 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069244189 seconds)
  done (took 3.967239113 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115715065 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152902176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073828332 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129405595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111688397 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098029911 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169636497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09386291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.159600175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069234311 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113762898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067730937 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127911232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069442685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114075132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068690332 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068150161 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096510193 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068453765 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094694601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087255639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067540438 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096912907 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068558121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095590568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081182162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093728713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070099889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068484242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097510146 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071707712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067612319 seconds)
  done (took 4.239907142 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073440806 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074535553 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109992071 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083578342 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098195166 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073181767 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072139271 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09644882 seconds)
  done (took 1.894547724 seconds)
done (took 27.553120647 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079067048 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068827354 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099932123 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08136251 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099131089 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079849755 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066164148 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102343896 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076937089 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071807301 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103935546 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06674677 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097622441 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068143456 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07303201 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095605246 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079094993 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098357388 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081127574 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078465479 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097772198 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076655943 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10091899 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080464042 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105110322 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080514387 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081133934 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101257613 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06940764 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09793077 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077379548 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082678345 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097867714 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080793904 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09767464 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068003255 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.0684584 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096736965 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079002609 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101079258 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071741211 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100469416 seconds)
  done (took 4.782508746 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08886255 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089574994 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115686894 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067226863 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101495473 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06553942 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.11606113 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066553017 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060747427 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117324061 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056835039 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059124729 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.09107559 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054606456 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058488515 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056068266 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089764486 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055949726 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059099707 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087740888 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058477015 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053251542 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086981167 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063501156 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055769332 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087649917 seconds)
  done (took 3.174795011 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07625039 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082278404 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115814653 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126929211 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133496521 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076151952 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106746598 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087480898 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114102522 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067821498 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069773127 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124632345 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087085215 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.1029906 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067748586 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114522337 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082451999 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068394527 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102446021 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089243274 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112177986 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.07791305 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118936925 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081814316 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066322839 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09777244 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071165459 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107992635 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07313989 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07608301 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100122192 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07098404 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097096406 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080220861 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070851702 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097426266 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08878076 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105915433 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077467124 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067605163 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100169552 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068411177 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.125893425 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111800972 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095415005 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074577598 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.102819297 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078550104 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066873961 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113756249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076702745 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093747623 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071846619 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066070841 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094748412 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081875882 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068290146 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098553062 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076584344 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097402662 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080410962 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070071187 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11122862 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066597357 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102001119 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066806447 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067429324 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094375856 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091497845 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096120296 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109094555 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099201672 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070844796 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075594013 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10370914 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073286333 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094711395 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084684923 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076349492 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100058327 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075856702 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098217916 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072268305 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086204893 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098239919 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069828325 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067238142 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102666476 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070039584 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096270406 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081220666 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066302181 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099268271 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084328645 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095392958 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069826825 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072829005 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10161658 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066636114 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107855984 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073097922 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09500393 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07803475 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067561919 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099082261 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078016267 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098880604 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068162798 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072492675 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102092454 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068865379 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067469274 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099037141 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069055393 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104094632 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074838015 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071684538 seconds)
  done (took 11.422710204 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190511885 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.18562749 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071132533 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178114387 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075591775 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108758494 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178652468 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096189945 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09649506 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06958721 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068946312 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.132394837 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.12344581 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107014687 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107607254 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06775825 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113071582 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104877081 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181058306 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.175609157 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114557537 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077418569 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068922982 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098040542 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070799269 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076677746 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114298306 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075871923 seconds)
  done (took 4.360532063 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082220389 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128527271 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07361087 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088014625 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1200297 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067304807 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102146969 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069522836 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107411842 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079199735 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094568404 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075623181 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074237194 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107111903 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068646721 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105182553 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078314677 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068479275 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099827926 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073239623 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105026854 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081711668 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070955732 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069185476 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074243559 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095182872 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065056743 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113892998 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067994117 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117547141 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067079064 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073000266 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.109496665 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068970999 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094240325 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071971446 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070538299 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09838589 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069998258 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065925424 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094560908 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058777454 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066214341 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108814464 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072862708 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087539567 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073956453 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071153615 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101120811 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065354386 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097478022 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071617086 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069813373 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104284754 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07279541 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072124476 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100836232 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065899024 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102684498 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072232545 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06375003 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093851012 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073038319 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065333752 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104335499 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072065902 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093639037 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072023038 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072311897 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101919478 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071263783 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068881078 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094420434 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069731243 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099752492 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073416504 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071368783 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094711851 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067965098 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067150913 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084306914 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068906761 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052904274 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099524604 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066463634 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066023975 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099566956 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074437959 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109619975 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070095114 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101407791 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069817806 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066782182 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099155567 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064211303 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069801039 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112193084 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110031984 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069249763 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065643809 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110173858 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072836307 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067621224 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084860977 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075247741 seconds)
  done (took 9.931793553 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096275538 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090850227 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099107262 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082688053 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124899986 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092858037 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103849013 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074557034 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068551343 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113618135 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067582305 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10405698 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068561241 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075526337 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124989006 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074966851 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097636077 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077700606 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071821981 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136553426 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081230349 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110443202 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081187317 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095236383 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073814656 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079321578 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124647879 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.07979378 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106830265 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085145559 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078327031 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124617263 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085486145 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100583114 seconds)
  done (took 4.396220947 seconds)
done (took 39.274931475 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.318326032 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.515978568 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.282696137 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.25235781 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.326619721 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.297888114 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.298105691 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.298232132 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.625791508 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.285628088 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.557289684 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.997258641 seconds)
done (took 60.290293808 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.381294286 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.434037924 seconds)
    (2/2) benchmarking "String"...
    done (took 1.565544377 seconds)
  done (took 4.230431133 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.63329064 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.259286479 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.547822289 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.286729085 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.288074477 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.606816395 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.99971646 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.137932015 seconds)
  done (took 28.356497087 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.2972322 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.666130306 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.806602253 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.811012026 seconds)
  done (took 18.814110787 seconds)
done (took 61.645878533 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.291848763 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.306523602 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.300943316 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.271106662 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.3985868 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.31469585 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.614767619 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.310918154 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.287883864 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.274007844 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.30653555 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.298318206 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.303347618 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.605392594 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.29465019 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.289887576 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.300129841 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.81502097 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.682309858 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.289265553 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.315498254 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.307800828 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.311768622 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.290694068 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.337084848 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.295870982 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.300037551 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.299010422 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.682456039 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.291992449 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.391613995 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.785039378 seconds)
  done (took 193.396543945 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.288141527 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.303037924 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.40492699 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.347349694 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.805115381 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.490059321 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.424356372 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.890242784 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.307508188 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.290571779 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.420919429 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.289611828 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.479799671 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.321805152 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.298109861 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.398880683 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.550996419 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.501293643 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.30740428 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.552937046 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.295804863 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.328334806 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.277978797 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.401344362 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.32119246 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.337100815 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.321841114 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.300734572 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.481296254 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.470740199 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.308444242 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.297041227 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.893358751 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.147830562 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.299973841 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.307898435 seconds)
  done (took 152.697250245 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.578266482 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.288977336 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.288412144 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.289209075 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.3209284 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.289349999 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.831955598 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842738337 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.797737219 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.753867052 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.352767565 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.512248278 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.289552061 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.382470839 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.301587381 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.291025719 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.304400846 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.317943415 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.289391144 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290157335 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838479205 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.304417604 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.496403984 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.29843562 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.292636887 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321523348 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.685324231 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.29060575 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32120567 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.610410904 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.338299351 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.291004452 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.613443654 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.212110567 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.293011815 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.399546197 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.294111447 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322320393 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.291108302 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.561969378 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290675297 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.292047839 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.294780083 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.891693926 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.294726579 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.831060537 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.291466594 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.205177329 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.291458204 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.291969881 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.63857385 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.824798299 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.293826566 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.292031264 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.294502379 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.291461157 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.292384884 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.323013032 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.624640829 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.391771933 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.292742818 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.295497336 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322784013 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.291579131 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.311782885 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.295244829 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.325004931 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.348598422 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.51472713 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.848734548 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.295826359 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.387109234 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.412137026 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.292238613 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.292505166 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.293280007 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.292436423 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.399483008 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.294081329 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.703199461 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.292330394 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.299225112 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.294058177 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.353072448 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.387888974 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.293027309 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623274675 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.295834602 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.293116584 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.010764143 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386606928 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.293467246 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.29252448 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.291964434 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.293459009 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.705274393 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.851171536 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.498400405 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.296638642 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.667497784 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.297208348 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.717818527 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.829573325 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.913313138 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.297245441 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.294555317 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.401062651 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.298704789 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.295744949 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.293973842 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.323171922 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.294378144 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.353310241 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.294874082 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.6917492 seconds)
  done (took 355.419170762 seconds)
done (took 704.323422635 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.961258407 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.945488133 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.060688658 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.938190304 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.923537362 seconds)
  done (took 11.06851721 seconds)
done (took 12.307892002 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.489076948 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.488013593 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.356520827 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.490005744 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.324198797 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.508391058 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.469118203 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.315802161 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400924556 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.37354446 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401123657 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.347155012 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.325661538 seconds)
  done (took 19.530043254 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.610389639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.600195024 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.360498832 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.605515946 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33650931 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.62371092 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.495191339 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.505934788 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.490099905 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.311905816 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.310341124 seconds)
  done (took 17.491710044 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.616386669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.602997626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.362814496 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.61714578 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.337793942 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.651964997 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.493326177 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.508921358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.488263188 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312521456 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.310295004 seconds)
  done (took 17.54366355 seconds)
done (took 55.805721484 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.307639483 seconds)
  done (took 2.549533433 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.343323801 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.506208749 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.322626808 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.310599635 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.30834747 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.307015173 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.311351965 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.307828007 seconds)
  done (took 11.962245394 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.305644125 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.303319947 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.305297476 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.306132632 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.302909357 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.306817581 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.307688625 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.30506915 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.302668706 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.30301936 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.306220587 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.304085077 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.303804664 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.305174512 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.305887711 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.303381716 seconds)
  done (took 22.119718689 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.305871447 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.30406701 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.304386998 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.305109324 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.305156116 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.304763807 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.305776929 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.30471696 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.303954617 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.304323434 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.30475327 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.304009096 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.305795038 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.303788287 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.304821694 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.305110671 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.305582189 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.304275403 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.308852558 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.306412561 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.305171801 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.305600507 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.305304708 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.30545053 seconds)
  done (took 32.567732685 seconds)
done (took 70.439750354 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.405605575 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.974415946 seconds)
  done (took 9.623485089 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.307312971 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.308164918 seconds)
  done (took 3.861046884 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.309008427 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.307024935 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.307231261 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.30742487 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.307471888 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.307804683 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.308573903 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.308247291 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.308740684 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.308394894 seconds)
  done (took 14.324355196 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.308547204 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.308629677 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.306432646 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.310420954 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.307994528 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.306313294 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.308949322 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.307978725 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.308406355 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.306119971 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.308728059 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.307449947 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.308328312 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.30698606 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.308781345 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.306922478 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.306096538 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.306890732 seconds)
  done (took 24.784718393 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.308784034 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.308033966 seconds)
  done (took 3.863898784 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.306945325 seconds)
    (2/7) benchmarking "second"...
    done (took 1.306635618 seconds)
    (3/7) benchmarking "month"...
    done (took 1.305995026 seconds)
    (4/7) benchmarking "year"...
    done (took 1.3062214 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.308663365 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.306671091 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.305560807 seconds)
  done (took 10.391634767 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.310024505 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.481184196 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.558929796 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.873840155 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.31110519 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.313690987 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.158567015 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.313501577 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.315094 seconds)
  done (took 14.882524581 seconds)
done (took 82.976223871 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.325290416 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.301727237 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.23342891 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.307911012 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.31979175 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.645557135 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.324034555 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.427632585 seconds)
done (took 38.131533553 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.320727831 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.017382353 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.022137893 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.316890911 seconds)
  done (took 11.603043474 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.290526106 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.252591269 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.303950478 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.325344001 seconds)
  done (took 18.420261525 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.928768401 seconds)
    (2/2) benchmarking "read"...
    done (took 1.637346703 seconds)
  done (took 4.813579897 seconds)
done (took 42.40444021 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.30816036 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310579227 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.308245913 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.310975145 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.309623572 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.309095629 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.311652336 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.308659447 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.309451145 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.311188308 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.31164841 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.310430866 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.31178697 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310962662 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308888249 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308339997 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.311630454 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311153579 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.309669525 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309352046 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309154129 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311803662 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.309505026 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.310056478 seconds)
  done (took 32.689364921 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.312068885 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.310375409 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.311636718 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.311275903 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.309813443 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.310563846 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.311423174 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.309538083 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.311419292 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.313278499 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309111755 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.309694882 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.311993901 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.309898365 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312109888 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.310229831 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.312239619 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310158068 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312691442 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.31123058 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.312359412 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310858458 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.309976986 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312999029 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.311949314 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310524981 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.313831825 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.311942815 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312679488 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.311476002 seconds)
  done (took 40.588648381 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.317246123 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.319856698 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.31311867 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.312257279 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.312902309 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.313040985 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.313322344 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.312696113 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.314404298 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.313990632 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.313523318 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.313108266 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.313289508 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.31408284 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.313167864 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.313558838 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.313606175 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.315122326 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.313864021 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.313926706 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.313680486 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.313408932 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.31427603 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.31362151 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.314017011 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.313745677 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.314231307 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.314179654 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.313864762 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.314123762 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.314179538 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.314359328 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.314026829 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.314389827 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.314491933 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.313220924 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.319416844 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.321605162 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.314943175 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.314666304 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.315682383 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.315446494 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.315534826 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.314716925 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.315135588 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.314526662 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.313762695 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.314607876 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.315182812 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.315671373 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.314957025 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.315993342 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.315186381 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.315717699 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.315370861 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.314624726 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.315992048 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.31590132 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.314713122 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.316040916 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.315734807 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.31528611 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.315602681 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.316427575 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.316194147 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.315527896 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.316478214 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.316230377 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.316006289 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.315613995 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.316263552 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.316843071 seconds)
  done (took 95.924142444 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.316619021 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.313530127 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312041889 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.311944047 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313560956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.314721749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.312573622 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315375575 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312443712 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.315240414 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315281435 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.31179141 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312354851 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316987914 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314667326 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313809636 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.31552791 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312869744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.31609458 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316009072 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316713618 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.312298511 seconds)
  done (took 30.166985043 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316580723 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.315888358 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.314458845 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.315773196 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.312411852 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.315800146 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.316991863 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.315350211 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31707893 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313674386 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313687616 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316872365 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.313716648 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313750889 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314110924 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.313341044 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317066283 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.314113903 seconds)
  done (took 24.923561154 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.314283952 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.314938911 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.319245813 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.315874381 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.315829314 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.317044956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314828785 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.317295885 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.317683599 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.314935399 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.316610195 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317364897 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.317981894 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314066591 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317174836 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.315478062 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.318336157 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315861513 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317608152 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314559634 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.314293177 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.318152117 seconds)
  done (took 30.213631229 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318348043 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.317818066 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.315938085 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315841517 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.315460761 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.317975503 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.318579184 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.315501824 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.318917339 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.318821041 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315402603 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.319009167 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.316201065 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.31714835 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.316503297 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315715627 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318709671 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317808467 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318688978 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.315855803 seconds)
  done (took 27.60062418 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.320972145 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.320654092 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.320844458 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32089389 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321120853 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.319432084 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320974718 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.320266921 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.32091649 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.322421908 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.321578456 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.32094116 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.320977527 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.320602692 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32094408 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321239107 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.321466235 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321909828 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.322253222 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322263911 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.321485754 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.321654718 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.321593897 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.322013268 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.321769866 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321714371 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.321441646 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.321671886 seconds)
  done (took 38.253616121 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32034965 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.320877798 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.317741077 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.319127269 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.316843005 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.318246106 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.318529699 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.318105127 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.320902082 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.318269703 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.320373917 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.320778203 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.322149115 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.320856238 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.320727887 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.321554605 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320536168 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.318899772 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319574774 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318383211 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.321907639 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322019168 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.320877107 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.318054499 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319076494 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.321308365 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320292499 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.320330566 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321581369 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.318895279 seconds)
  done (took 40.855951607 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.341339012 seconds)
    (2/2) benchmarking "in"...
    done (took 1.340696941 seconds)
  done (took 3.941067369 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.320818422 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.322495181 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.321932427 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.319933401 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.320282911 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.323447015 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.323947318 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320280139 seconds)
  done (took 11.832645469 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.322017777 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.323061456 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.321753384 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.322828604 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.323330145 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.321330643 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.329076482 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.340532786 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.324687134 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.323047155 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.329167886 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.329846214 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.325655733 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.32252299 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.3221151 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.323816629 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.323341251 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.323206576 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.322423654 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.322857344 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.323398034 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324781866 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.325410441 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.32129604 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.323579026 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.333322294 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.327214163 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.323409126 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321789408 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.326222128 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.3224242 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.320772062 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.323709549 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.32352186 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.322771391 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.323705221 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.331676104 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340309089 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.330043212 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.324037826 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.32264495 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.320948973 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.324856499 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.323678957 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.324946268 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.324081059 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.323595563 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.320480767 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.322626337 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.325429481 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.327674155 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322551978 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.319783342 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327529144 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.322970364 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.32745933 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.340659178 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.323710411 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.330016686 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.333089189 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.334499977 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.32990384 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324423102 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.323134216 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.331938377 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.344598149 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.329385302 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.33712618 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.320237709 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.322791837 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.331040144 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.336393817 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.331757607 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.324142122 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323472718 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.322383807 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.323234408 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.32259245 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33073578 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.343506327 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.324240339 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.324614918 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.333368745 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.345213408 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.322127214 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.323462859 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.324388711 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.324717786 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.324131658 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.334529631 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.341844669 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.322961984 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.322424686 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.323024983 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.323999775 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.323658129 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.322071881 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.323551778 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.320701097 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.323879348 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.324584778 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.327608149 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.332944062 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.32503195 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.32469007 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.330071354 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.323864417 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.324054795 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.332006092 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.324426786 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326241615 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.326302578 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.329705919 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.322149835 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32753177 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.331743934 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.325010249 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.32660827 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.32529055 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.325796971 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.334092897 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.350846779 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.32582089 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.325215742 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.329126318 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.336982254 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326223277 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.32894343 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.326051031 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.323393853 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.323372292 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.328116539 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.325446202 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.326070336 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326877453 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327127739 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.324169651 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.32752338 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.326576996 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.326868008 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.328150017 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.326701262 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.327569155 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.327760567 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.326159428 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.328610118 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.333238112 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.327663793 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.327923972 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.326635151 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.32488402 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.326531672 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.327369743 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.326704144 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.326946619 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.327580668 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.326202319 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.327784734 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328673543 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.328205453 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.327726598 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.328170056 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.331333957 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.327132335 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.3314985 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.327406154 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.324951045 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.326912357 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.327455754 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.327175086 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.327608302 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.326208491 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.330424125 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.335999458 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.327884673 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.328560174 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.330508149 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329188854 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.32871516 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.328352678 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.331335681 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.336112844 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.329438506 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.335141601 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.329693446 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.328852147 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.329885185 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.329889968 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.328280222 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.328976509 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.331375182 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.33694004 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.341872963 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.338149392 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.328429599 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.332499154 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.329707223 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.332855319 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.33392124 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.330843747 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.329268915 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330623052 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.328687587 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.330609686 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.330817214 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.329632075 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.329089225 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.329443688 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.329929955 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.330041179 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329778712 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.331029344 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.331581967 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.328337752 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.330633441 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.33080325 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.330954919 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.328457188 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.329055957 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.330135377 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.331944128 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.332722696 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.33693092 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.327936414 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.332553617 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.331948419 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.330531922 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.328590496 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.331852236 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.333204079 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.330881134 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.338912635 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.349113131 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.330969842 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338502123 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.348603644 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.33026871 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.334529723 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.332155628 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.328565183 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.333927187 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.340008218 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.331720418 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.332501877 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.331930937 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.330373244 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.332078924 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.337905619 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.330202276 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.331687384 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.332385591 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.333616045 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.328544198 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.333594867 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.333410488 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.332460717 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.333909147 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.333022846 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.332892667 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.332837188 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.33360761 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.332963188 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.331657505 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.335239857 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.340531292 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.337903613 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.334423958 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.334386365 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.333555857 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.336496627 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.333816275 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.333425355 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.333301987 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.343485408 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.342618483 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338992846 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.334241258 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.333243632 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.338561596 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.334563573 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.337818084 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.333746222 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.332500816 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.333807474 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.332372722 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.331194213 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333826477 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.334387564 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334684991 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.336501186 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.338040403 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.333459854 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.333544839 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.334994907 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.335076706 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.334819573 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.334919989 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.334890047 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.335698412 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.336432335 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.335030856 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.334688319 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.341685141 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.352488406 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.334458765 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.335122477 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.335299696 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.332959537 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.335902998 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.3361123 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.339021684 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.344206441 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.338542177 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.343226345 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.336796277 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344428289 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.336476421 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.338981191 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.343447827 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.333108384 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.334490969 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.335472314 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.3360515 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.343466214 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.356543443 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.337268832 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.339940887 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.336552024 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.337641656 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.337728196 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.336189221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.335528048 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.337668689 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.345324049 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.354494608 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.339829841 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.339080192 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.334382664 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.337064888 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.336747573 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.335564193 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.341064682 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.337596325 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.337933197 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.336092909 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.336899466 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.338315632 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.337048561 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.338620292 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.335618144 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.337241903 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344374985 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.35662642 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342897282 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.338105112 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.344591576 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.338374805 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.344910848 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.355864935 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.338046113 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.337755977 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.337726816 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.338927877 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.338023272 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.338972006 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.339278099 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.340272574 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.342003234 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.340012564 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.340630747 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.339062379 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.339960838 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.338740561 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.34772118 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.362377161 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.340581345 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.343721377 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.335732811 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.340879503 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.344563365 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.3389145 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.338283806 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.341321071 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.349462349 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.346622603 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.340038934 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.340425125 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.338911873 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.339902612 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.339640949 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.339499948 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.339667175 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.33961271 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.33966267 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.340584186 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.341962122 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.339388691 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.339032614 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340556399 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.340902912 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.350499274 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.34074609 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.340305742 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.340275549 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.339920055 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.340402813 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.340512328 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.339817021 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.341289591 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340341002 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.34135528 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.347235023 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.346455665 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.342355476 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.339792183 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.340129134 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.339864865 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.340691508 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340706094 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.341740066 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342067129 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.341583308 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.342440016 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.342201192 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.339409448 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.340688864 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.34227499 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.34052677 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.34359899 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.347970123 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340673747 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.339160741 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.341045224 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.342279252 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.340040769 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.342143668 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.348734347 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.344623899 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.35333735 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.351061481 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.346694442 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.342441889 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.344620391 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.349914401 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.34044901 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.344413298 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.341716571 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.34461691 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.343518175 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.346487382 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.343571805 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.348496466 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.342643573 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.342633444 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350721926 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.36239493 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.343753653 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.343851009 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.347235719 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.34365862 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.339654915 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.344124301 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.342009499 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.349793295 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.362455738 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.343101775 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.34381358 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.341214763 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.343181161 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.34770832 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.3441088 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.344312676 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.341300994 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.34354453 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.344131761 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343457864 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.34108363 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.343752305 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.342331874 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.346933227 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.350911273 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.341284188 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.345550575 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.342938242 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.344898698 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.34536349 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.34449768 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.341917691 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.34293367 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.343866998 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.345075487 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.345846727 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.346222511 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.343986985 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.345283841 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.345603085 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345116881 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.347982372 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.355469699 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.352787056 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.342332794 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.344027606 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.344610137 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.347432335 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.345690314 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.345215573 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.345058997 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.345957486 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.346165663 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346212197 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.344421152 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.348978413 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.36088905 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.363444119 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.345196879 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.345998982 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.349268599 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.345797912 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.343797742 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.346665753 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.346909385 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.350037009 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.352956121 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.346764816 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.353792722 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.363761659 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.347347519 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.350295609 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.349034267 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.353388889 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.349581185 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34656854 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.346734985 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.351175181 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.361742828 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.347818267 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356615238 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.377137299 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.36485323 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.348489478 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.347020034 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.346564178 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.347089693 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.349316063 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.347169603 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.348044251 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.34752013 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.348229808 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.348592833 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.352575907 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.34833868 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.348396737 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.34651146 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.346848047 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.347692351 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.343968641 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.347447581 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.347254185 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.347551398 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.348131145 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.348049326 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.347884876 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.359362658 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.35697157 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.347584941 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.348884365 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.345738913 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.353225905 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.351007603 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357975756 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.355888542 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.348219535 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.348747758 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.350431672 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349897823 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.345869948 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.348720982 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.347918704 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348331339 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.345933445 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.360192702 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358312667 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.35286276 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.349112476 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.349731931 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.349003994 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.350336523 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.350222024 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350227222 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.350525706 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.35029574 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353182641 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.349641223 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.349780438 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.352066742 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.357246793 seconds)
  done (took 798.189774719 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.348154174 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347518927 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.348114396 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.347239486 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347238268 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348274165 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.346823671 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.347069393 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.348445569 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.347764047 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.349235374 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.347475278 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.346989084 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.348812895 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347954611 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.348010077 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348031148 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.348081856 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.347550055 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347944405 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.34825606 seconds)
  done (took 29.592260071 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.351633846 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.348224274 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.34827424 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.350835231 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347840613 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.350767499 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.348682803 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351606868 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.35149825 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348918574 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.351704175 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351413966 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.349328026 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.349379548 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349645031 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.350161816 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.352716436 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349894109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.352759997 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.34865694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352255409 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.34889098 seconds)
  done (took 30.992000032 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.35310954 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.352123585 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.352194681 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.349088054 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.351745583 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.349255775 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.352488121 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.351583063 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.352125511 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.3523976 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.351772394 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.353597774 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.359161624 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.35671299 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.354427963 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.352840794 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.495792319 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.353228888 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.353334053 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.353698488 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.350587087 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.358598252 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.35112309 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.350493578 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.352355898 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.355261838 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.353535124 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.353370474 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.353906528 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.355187619 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.357191382 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.353977356 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.353376717 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.355493578 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.353478347 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.354757163 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.358694243 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.355564446 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.35200691 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.354523448 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.364039299 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.374752772 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.355779204 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.360510701 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.354841796 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.354855124 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.357367988 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.363469111 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.352256679 seconds)
  done (took 67.811377233 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.354891796 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.355379375 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.352364217 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.35548502 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.354839864 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.354823134 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.354778262 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.354444999 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.352873637 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.352275597 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.355670886 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.352344663 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.352901844 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.355039466 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.354852106 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.352193035 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.352780955 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.352718409 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.353002042 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.352696514 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.353026357 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.35560967 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.354576912 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.353393083 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.355173087 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.35223158 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.353466012 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.356106913 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.354202566 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.35327003 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.356216695 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.355865721 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.356585779 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.354407662 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.354018149 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.356817674 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.355803647 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.354312949 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.356412795 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.354484791 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.356582795 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.35530268 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.356581837 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.35839472 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.355278551 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.354355579 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.355008202 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.354423558 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.35437841 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.357279883 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.35663769 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.35489678 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.357379838 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.355842621 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.357168411 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.357615394 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.355579703 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.355764354 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.358065545 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.355363703 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.356041062 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.358150427 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.355395469 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.357485525 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.358559411 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.35523252 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.355938534 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.360768028 seconds)
  done (took 93.445448312 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.358743326 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.357667136 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358680606 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.358723481 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.358016841 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.359369505 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.358210502 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.358394136 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.359776551 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.358299452 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357094564 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.359413225 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.358961106 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.359308969 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.359521401 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35918327 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.359750398 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.359231937 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.359238593 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.358924799 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.360160042 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.35925376 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.359822553 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.359253256 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35964862 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.358861939 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.358921139 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.359893433 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.359306467 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.360265724 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.360365453 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.359809427 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.361055132 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.360439785 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.361103327 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.358882657 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.360524634 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.360580537 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.360285354 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.360784778 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.359598892 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.361578113 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.361701889 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.360606033 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.360541549 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.360132363 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.360736476 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.362211405 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.361414997 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.362088031 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.361599873 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.361181548 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.361658655 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.361078281 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.360887944 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.360866008 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.360652346 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.3618187 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36195382 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.362299189 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.362194634 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.362615653 seconds)
  done (took 85.62153153 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.361996779 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.361618111 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.358553834 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.358832284 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.3611281 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.358974241 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.362051208 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.362280742 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.362988305 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.362658827 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362160847 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360446147 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359421826 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.360911415 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.359749935 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359326437 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.360578738 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35978447 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.361557193 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.359447144 seconds)
  done (took 28.511654061 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.360337501 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.363982915 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.35951316 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.360581314 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.362669901 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.360295159 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.362386025 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362296296 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36046594 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362340062 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.362412113 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.362396851 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360910325 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.361028024 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.363096902 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.361475195 seconds)
  done (took 23.083854551 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.359984537 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.362503195 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.362926073 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.362167908 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.360686651 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.361231892 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.362182799 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.361330078 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.360767753 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.364577645 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.363518298 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.363034663 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.362940806 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.363503626 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.36019212 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.362816113 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.361297982 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.361489013 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.363040922 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.364040661 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.362193173 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.361220352 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.36395474 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.364346064 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.362150156 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.362570177 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.36126123 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.362525388 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.36160703 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.364275587 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.362914369 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.362286374 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.361291514 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.360837396 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.365396055 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.363683223 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.365082275 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.364718528 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.364663125 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.364971999 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.36538724 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.363144882 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.364567801 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.365615034 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.362607305 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.364976506 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.362657941 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.362963742 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.362879 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.36307137 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.364640964 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.366346211 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.365356128 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.365308868 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.365729053 seconds)
  done (took 76.271758079 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365547961 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.365449248 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.363527289 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.366098759 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.36574662 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.364121938 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.366016402 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.363129892 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363571424 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.36504294 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.364525778 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.365656855 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363316316 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.365941063 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.364228124 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366453072 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.363242125 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.363487709 seconds)
  done (took 25.86669304 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.365358682 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.364451065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.366734004 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.364410023 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.362826326 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.366989266 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363545222 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.36683153 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367093743 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.365228498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364396485 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.36778354 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367179622 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.368348806 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.365608793 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364692273 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.367757394 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.366148562 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.36574751 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.364999819 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.367915173 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.36792068 seconds)
  done (took 31.354112975 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.365610379 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.367275868 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.38291749 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.40893918 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.396888174 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.367490517 seconds)
  done (took 9.593065503 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366032943 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368554709 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.366479939 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369276527 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368536609 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367485357 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365332773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366547344 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368447757 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366051631 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365635972 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368334951 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369843538 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366721887 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367929411 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369046065 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365091363 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366795404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367332865 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369290919 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366152148 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369050798 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36661909 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366318619 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366405159 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366232425 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369067634 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367889783 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367064877 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367855784 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369241833 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365933888 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369501399 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367957537 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370761142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369462864 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367869211 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36994691 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369345464 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366607512 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.370216868 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369737485 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369440908 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367683333 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369278514 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367455177 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367071846 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367332173 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367967904 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3708133 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370625054 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368707636 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369672978 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371273213 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370292561 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37096697 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368856562 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367816594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370725024 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369104563 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369047939 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370822213 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368336136 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368417585 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370591293 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366793158 seconds)
  done (took 91.613795263 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368937359 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.369076455 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367806056 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369590238 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369988155 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368648083 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368817928 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369081675 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369358702 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369239348 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372128094 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369767782 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369381814 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369439493 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368989554 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368871852 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369413083 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369865207 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369076984 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372479282 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369182868 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370050387 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369124611 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369704118 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37106687 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37197186 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369880571 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370365018 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369228469 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37093757 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369020595 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369943525 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370192269 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.370198133 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369769675 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369954018 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370033395 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37081552 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370539917 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373184852 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370585609 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371745883 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370531903 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37089571 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370814158 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370423117 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370333176 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37083949 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371217641 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369477205 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371193989 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370620877 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371439395 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369936564 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370899011 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370780595 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371327598 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370814522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371519336 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374113254 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371306555 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370922324 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374966378 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372245561 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371069881 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372606595 seconds)
  done (took 91.756500864 seconds)
done (took 1861.941435326 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.434616891 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.413379565 seconds)
  done (took 14.158253701 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.536152969 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.491426914 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.373225716 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.371575545 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.373149718 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.386065367 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.387536629 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.3720675 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.371938986 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.373242628 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.372528565 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.560482803 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.389581252 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.373536058 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.372334025 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.465018536 seconds)
  done (took 43.889324708 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.400835983 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.377764095 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.494751694 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.394346546 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.400591068 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.571261113 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.431820229 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.377172167 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.55736935 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.417046707 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.054118115 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.404123116 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.376053414 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.568090886 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.400044193 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.570101121 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.637037396 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.984185839 seconds)
  done (took 31.726440062 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.847951992 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.380415536 seconds)
  done (took 9.538851967 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.379677496 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.432666515 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.402869283 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.39536326 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.403296091 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.415815975 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.422645018 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.391109244 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.377656023 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.434854844 seconds)
  done (took 65.375953268 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.398745853 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.378730907 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.376186209 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.375040601 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.381261423 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.368711459 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.375950996 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.370305209 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.163532472 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.510262162 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.392736218 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.382745755 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.376912111 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.378898684 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.375762249 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.413891914 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.512339106 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.37518914 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.373141324 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.381653028 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.377051108 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.480770241 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.419713769 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.376536473 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.507388324 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.162727913 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.38269256 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.383962388 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.49878385 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.376246811 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.37644736 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.378233705 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.380147024 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.963717801 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.867286348 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.385879441 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.401389227 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.384343326 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.376247303 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.492357396 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.378221484 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.383135313 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.370415423 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.849515151 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.543063716 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.495086413 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.666306917 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.380026076 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.379143794 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.441265102 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.378467298 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.38005715 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.409113461 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.143277889 seconds)
  done (took 114.144780672 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.389744953 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.860709758 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542297749 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.392609656 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.247144175 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.122226203 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.373205941 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.667115806 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.399707287 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.372395502 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.65648825 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.891909193 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.374775785 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.427066318 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.862576174 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.384928329 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.371482774 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.178869047 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.371869459 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.376594498 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794780941 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.39008061 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.380059676 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.66287196 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.41374252 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.846518759 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.939410878 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.798619995 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.373697988 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.374357189 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.855602065 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.375816128 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.410869576 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.375998235 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.65191797 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.73915832 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.714697874 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.374824983 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.427709847 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.377348747 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.394553089 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.843418676 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.72652303 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.377031605 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.387922105 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.846967379 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.374872353 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.372796614 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.380312655 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.585953001 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.162914279 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.375495503 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.895275136 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.376008909 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.751192622 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.456647511 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.42323685 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.873848815 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.37632469 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.463304385 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.419544867 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.375059329 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.376307074 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.377688356 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.377988827 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.729936502 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770242895 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.377519178 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.732028206 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.847028246 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.376048306 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.921552114 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.232042512 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.390357412 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.418024464 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.384446215 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.058794251 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.876993406 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.384164674 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.375208543 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715468549 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.379156204 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.65951241 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.390323139 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.391313869 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.805172781 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.395131593 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.411981226 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.37571934 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.385342181 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.169154724 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.37795013 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.648416395 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.415539741 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.375947297 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.376397216 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.376429374 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.376668509 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.377618185 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.378220496 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.926137725 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.385803552 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.511072222 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.397318262 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.376720002 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.377355095 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.379529817 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.376976407 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.605903671 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.92127344 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.379674524 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.377176207 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.377417947 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.382918451 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.680613863 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.383115024 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.702033173 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.380462765 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.390973904 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.382304689 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.221492106 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.402479201 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.378607045 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.382953184 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.23834807 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.587053218 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.397329727 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.392952052 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.378303581 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.394829462 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.790641777 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.377668004 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.44942493 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.377675599 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096102213 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.387611948 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.401553375 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.813254957 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.386546541 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.3785488 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.387647919 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.380379787 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.689635868 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.657140779 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.636177618 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.381870106 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.394734266 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.076827511 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.382209875 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52962107 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.401890202 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.383618326 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.581011157 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.643631202 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.377952746 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.937736452 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.380081567 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601622132 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.37974485 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.718470785 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88376874 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.37972931 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.384093773 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.099830094 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.037564006 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.180600568 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.383523352 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.662913328 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.384494016 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.833203313 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.380616064 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.381510688 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.984912062 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.381921796 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.383047818 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.382039862 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.380134139 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445936128 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.556912954 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.849332447 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.382702074 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.849159743 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.440834952 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.385530221 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.385137695 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.384163358 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.734150503 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.412034542 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.380893883 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.395634047 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.383791627 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.390899302 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.859911376 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.281995511 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.381828188 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.53742963 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033423458 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.38066752 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.382313256 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.088611814 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.620743696 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.941886087 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.433700506 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.698260236 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.388740363 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.422331151 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.188537598 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.441505048 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.861816819 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.384588039 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.382497327 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994573408 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.384003097 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.458097711 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.38168521 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.384088939 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932402045 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.381694084 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.382421991 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.801248011 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.383534244 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.638723939 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.383223055 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.402176504 seconds)
  done (took 1123.241757409 seconds)
done (took 1403.384515243 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.383182626 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.387083681 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.371504672 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.387981329 seconds)
  done (took 26.854564755 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.392447918 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.388952082 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.392747759 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.389075716 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.392292358 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.389663424 seconds)
  done (took 9.669734464 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.566013432 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.385664737 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.386746192 seconds)
  done (took 19.663652015 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.614424889 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.696540767 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.774333168 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.652771451 seconds)
  done (took 11.063610227 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.391821791 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.392428439 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.391369542 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.392660843 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.39458938 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.395016561 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.391829016 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.392374787 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.394347101 seconds)
  done (took 13.860525906 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.459802435 seconds)
done (took 87.896715346 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.015370756 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.430088707 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.323800164 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.891624565 seconds)
    (5/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.534075641 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.642515918 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.427058143 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.425666028 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.005815798 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.412920946 seconds)
    (11/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.370123222 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.331435052 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.788769314 seconds)
    (14/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.620023035 seconds)
    (15/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.649571455 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.412759489 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.921497355 seconds)
    (18/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.781897445 seconds)
    (19/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.404684637 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.69353179 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.819477866 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.799290826 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.506291459 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.27010846 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.937967937 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.748633756 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.402190067 seconds)
    (28/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.490204163 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.463448272 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.385491711 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.910083174 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.428892164 seconds)
    (33/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.402530708 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.41285874 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.344103555 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.521370885 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.477486608 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.40087265 seconds)
    (39/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.455220921 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.833593219 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.4081795 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.234184597 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.439498339 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.501011549 seconds)
    (45/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.398805551 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.455762348 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.528087022 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.407738196 seconds)
    (49/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.476354907 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.65227122 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.375113485 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.297322039 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.624872554 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.374642257 seconds)
    (55/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.300672972 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.492206862 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.389028605 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.447845437 seconds)
    (59/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.038363116 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.457472633 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.872687296 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.718881245 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.17735484 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.825102121 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.390390599 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.844568698 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.907796441 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.390516605 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.414376798 seconds)
    (70/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.391528058 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.85529788 seconds)
    (72/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.416600633 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.297623411 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.391206995 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.394043126 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.330562551 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.376039194 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.441482673 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.600304929 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.624973842 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.468220816 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.958472557 seconds)
    (83/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.586305498 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.983810534 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.781317819 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.806255711 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.475142424 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.391968062 seconds)
    (89/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.401780653 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.317387994 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.465605485 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.401406928 seconds)
    (93/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.706849305 seconds)
    (94/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.582712997 seconds)
    (95/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.781204985 seconds)
    (96/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.725390727 seconds)
    (97/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.178891038 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.408743972 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.821880094 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.392184371 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.944410145 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.068363713 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.490288839 seconds)
    (104/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.766021902 seconds)
    (105/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.124207054 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.620401389 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.51679166 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.000052899 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.408947142 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.189893372 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.41981605 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.396545875 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.157849092 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.393513759 seconds)
    (115/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.631142716 seconds)
    (116/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.979119703 seconds)
    (117/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.412569706 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.505291994 seconds)
    (119/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.560510156 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.493176114 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.443716906 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.52716568 seconds)
    (123/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.520000735 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.732133473 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.605437809 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.917911446 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.417338929 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.392305345 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.08964007 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.651154939 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.442602215 seconds)
    (132/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.281839047 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.472531158 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.178130812 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.379501237 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.67180547 seconds)
    (137/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.471608167 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.27649816 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.814367014 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.272856008 seconds)
    (141/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.255925213 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.421487814 seconds)
    (143/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.504947407 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.394470654 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.504675505 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.649917502 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.457566093 seconds)
    (148/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.390280495 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.956158459 seconds)
    (150/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.478806822 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.956337698 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.393134781 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.708764722 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.198751441 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.418692866 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.748266744 seconds)
    (157/309) benchmarking ("sort", Int8, false)...
    done (took 4.448168865 seconds)
    (158/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.41853863 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.481047907 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.734815313 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.015888653 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.783397442 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.416280884 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.402119662 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.052427333 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.506099717 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.382555416 seconds)
    (168/309) benchmarking ("sort", Float32, false)...
    done (took 5.421171816 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.402356875 seconds)
    (170/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.945154428 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.393087851 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.397248839 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.816093215 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.256452752 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.852758729 seconds)
    (176/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.772218607 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.890202702 seconds)
    (178/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.478512459 seconds)
    (179/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.382649927 seconds)
    (180/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.079869053 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.830961901 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.127164349 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.500334734 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.81461755 seconds)
    (185/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.504698792 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.377926231 seconds)
    (187/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.519192465 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.743541427 seconds)
    (189/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.23994127 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.392695177 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.483400938 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.387607284 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.437568225 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.394114435 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.460565381 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.287519695 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.811842097 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.403782272 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.014964752 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.418253196 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.602015301 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.72146375 seconds)
    (203/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.049511569 seconds)
    (204/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.595421364 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.262924047 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.679886599 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.471049096 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.416414411 seconds)
    (209/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.313759351 seconds)
    (210/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.488690297 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.423507495 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.481154131 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.901945941 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.040390567 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.477964692 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.609680314 seconds)
    (217/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.380563589 seconds)
    (218/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.622458314 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.963392247 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.813958181 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.483367929 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.394180693 seconds)
    (223/309) benchmarking ("sort", Float64, false)...
    done (took 5.721279348 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.417912365 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.910219892 seconds)
    (226/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.667362623 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.353097307 seconds)
    (228/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.804232916 seconds)
    (229/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.93149072 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.457882315 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.99637881 seconds)
    (232/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.525188303 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.02949549 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.715667927 seconds)
    (235/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.390749103 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.420787975 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.995366561 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.460472463 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.123614634 seconds)
    (240/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.757188932 seconds)
    (241/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.229455017 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.720658254 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.397835243 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.509531813 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.501232251 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.423277465 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.423694262 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.238331976 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.483511573 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.615696912 seconds)
    (251/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.087608313 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.238808244 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.399221701 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.434618006 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.399588109 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.424176489 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.695224136 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.788957064 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.382784488 seconds)
    (260/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.932773952 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.39928238 seconds)
    (262/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.053679726 seconds)
    (263/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.768252347 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.324760844 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.741394739 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.398298137 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.42515482 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.099510498 seconds)
    (269/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.50838326 seconds)
    (270/309) benchmarking ("sort", BigInt, false)...
    done (took 6.398786893 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.404459954 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.59741192 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.822482345 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.384349781 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.419037983 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.769415391 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.07096738 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.427824206 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.435596887 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.48399296 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.481232784 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.424072575 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.305730156 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.409474609 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.516787478 seconds)
    (286/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.617837246 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.834442839 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.633122135 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.299415616 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.400171073 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.135619306 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.19001015 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.023534015 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.190439978 seconds)
    (295/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.591949431 seconds)
    (296/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.426352125 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.982145088 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.442187727 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.057463866 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.124623874 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.42509227 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.746560948 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.423791494 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.38624167 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.084004988 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.272395362 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.543597939 seconds)
    (308/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.794732558 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.425113829 seconds)
  done (took 948.318061017 seconds)
done (took 949.644388099 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.434775756 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.427943139 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.4118981 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.434163074 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.52351583 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.440816104 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.422503419 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.415119437 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.460678221 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.462456336 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.41220503 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.43915319 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.413299742 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.41293234 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.41128399 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.42592702 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.463913626 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.414081656 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.42991387 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.423412706 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.4290578 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.411656761 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.462815858 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.441004818 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.415883938 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.417242955 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.417024647 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.433464031 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.525926759 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.416731271 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.416826106 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.425629902 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.466052231 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.412892872 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.408566339 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.433743646 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.425579402 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.42336361 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.417573054 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.445604654 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.886356312 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.415908037 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.416418177 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.416299682 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.414774228 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.419348298 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.41488486 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.42147032 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.428366769 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.429586688 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.87720865 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.429042225 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.418399414 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.415704623 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.427339847 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.415738913 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.419010464 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430979571 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.434530875 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432437952 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.460143726 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.420609117 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.418216918 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.433367027 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.423852071 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.916304499 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.411452165 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.421072521 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.892956804 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.422306628 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.919726529 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.424726982 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.418983541 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.430595365 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.449292096 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.471246295 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.412280632 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.414789873 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.42464132 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.415646455 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.426488392 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.429708998 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.420815042 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.41710125 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.430838141 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.44498478 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.427468505 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.417352802 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.426194816 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.436985006 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.42535228 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.428846206 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.420512127 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.412282896 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.42664268 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.421586768 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.419710193 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.42102216 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.422929348 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.428194003 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.893364827 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.434227571 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.414754724 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.414151848 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.417156486 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.432303721 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.894593031 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.419270702 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.440344295 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.464446617 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.419860469 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.465146971 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.421556523 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.434727874 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.428397015 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.421752919 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.414138948 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.465781632 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.895037028 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.43379967 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.419961938 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.417902255 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.434638757 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.421374425 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.41617127 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.478137379 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.419903535 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.433156858 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.539905937 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.431115094 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.451535679 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.419044065 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.423676799 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.451702468 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436415276 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.451026453 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.422363279 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436155996 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.4364744 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.416646595 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.430182407 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.431856062 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.419809553 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.427323801 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.41447662 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.448638317 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.433075797 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.434362309 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.44144052 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.541652895 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.417625698 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.468471161 seconds)
done (took 238.639524487 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.478733621 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.413770452 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.50641385 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.416204974 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.516713763 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.516224788 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.414532419 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.414725065 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.413772787 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.825358768 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.414222498 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.415750019 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.415635422 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.414860055 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.49899347 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.4174503 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.413758402 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.75288585 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.417984227 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.487050046 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.409251704 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.415265836 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.41844584 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.827819846 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.414577049 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.413165147 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.487999718 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.41806891 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.798092402 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.411700052 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.413030132 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.766024544 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.507017741 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.436129072 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.427990362 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.426245487 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.518929444 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.43604294 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.49789795 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.498640356 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.509064724 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.45772184 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.418640308 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.416714403 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.420366425 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.419713454 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.41687339 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.445958721 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.412074617 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.416980234 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.786146011 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.428760364 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.418080093 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.417948796 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.416935591 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.448445547 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.418263041 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.420876655 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.508777181 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.421251439 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.481923461 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.839907454 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.793611043 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.421339526 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.415942922 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.418194912 seconds)
  done (took 154.250889399 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.48548988 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.492205734 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.535994776 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.420818415 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.469108919 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.538979747 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.421881565 seconds)
  done (took 11.720177845 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.426111558 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.421245347 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.469628539 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.471441809 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.421129974 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.568196879 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.42123469 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.432927234 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.418293264 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.473433686 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.421127236 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.421624016 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.427767493 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.421502774 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.469397226 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.432323489 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.535313942 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.421679199 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.423408363 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.572996928 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.418689165 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.428991603 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.473034681 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.432983375 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.423168625 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.427681285 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.985703837 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.422451538 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.419103783 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.42144794 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.419101416 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.460244156 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.423308687 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.413669232 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.420412298 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.53803644 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.422756454 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.420671568 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.422007045 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.418532432 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.421910173 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.423187736 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.422890351 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.420452843 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.422537987 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.446204909 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.423604081 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.423350191 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.42325671 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423420545 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.472854353 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.423907068 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.420701694 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.420764761 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.478979343 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.43018049 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.424113865 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.421868018 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.424708393 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.422273947 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.574678191 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.471852317 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.423388912 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.471866677 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.4244202 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.423230714 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.424850228 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.42375828 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478675953 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.424493581 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.473669187 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.420801795 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.577787706 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.447706883 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.426120364 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.426837772 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.4270807 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424939406 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.417699918 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.430743884 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.422684679 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.424462783 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.430563873 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.422092477 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.422941441 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526198832 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.532230517 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.422503451 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.437624519 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.431468753 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.422231382 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.477418748 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.424726771 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.423416723 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.477596983 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.539958012 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.479761607 seconds)
  done (took 161.965055865 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.430556023 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.432739243 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.426133063 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.442028087 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.425547129 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.425170517 seconds)
  done (took 9.940796019 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.428433134 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.425836219 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.425567673 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.425758338 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.425509829 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.42558256 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.427111828 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.427087005 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.431116976 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.427441111 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.427495816 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.426716216 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.427506184 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.426792239 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.427579012 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.426687311 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.427049912 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.425063208 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.426951279 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.427688635 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.532203171 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.428250808 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.42740805 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.428033365 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.431457173 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.426938917 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.435024701 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.427716679 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.428267616 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.436048011 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.430454343 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.428153584 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.428456223 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.433707525 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.431903998 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.429233331 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.431241315 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.427815106 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.425100201 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.428497772 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.42915249 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.428908913 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.428594283 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.428814367 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.429777546 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.433797367 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.432250531 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.435212555 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.429053271 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.429737656 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.42971639 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.428940924 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.429321816 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.429619531 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.431120794 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.432801348 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.433525905 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.42932714 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.429418966 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.430740026 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.43045351 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.429504209 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.430870426 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.433656756 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.427324049 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.429985776 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.431397874 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.434134573 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.429765147 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.429945984 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.429854543 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.427601323 seconds)
  done (took 105.370675559 seconds)
done (took 444.597890679 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.84165051 seconds)
  done (took 8.205082492 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.662976041 seconds)
  done (took 8.027482996 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.084126735 seconds)
  done (took 22.458387314 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.456023066 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.423457671 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.445714533 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.43059679 seconds)
  done (took 27.120203408 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.962813152 seconds)
  done (took 8.326151046 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.428096114 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.423248909 seconds)
  done (took 14.215912351 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.687596554 seconds)
  done (took 8.050651762 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.027754563 seconds)
  done (took 8.400003747 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.429042228 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.450547736 seconds)
  done (took 14.514778216 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.408116001 seconds)
  done (took 7.773111022 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.59617241 seconds)
  done (took 8.959666078 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.425290777 seconds)
  done (took 7.790681143 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.485277678 seconds)
  done (took 7.84956035 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.615235158 seconds)
  done (took 9.979691831 seconds)
done (took 163.03420564 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.422936308 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.427837098 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.426400307 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.426181383 seconds)
  done (took 27.067080021 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.464519793 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.464251596 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.465759035 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.474977664 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.467748358 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.464952668 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.456803419 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.457030181 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.475892592 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.467061553 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.467097055 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.466893995 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.463848006 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.457691303 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.468160095 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.468578451 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.475977694 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.466149035 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.458185345 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.467518504 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.432619685 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.476386403 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.46803237 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.43236475 seconds)
  done (took 36.493465267 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.639601853 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.506545713 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.586221573 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.48510147 seconds)
  done (took 7.583395114 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.482848759 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.486171154 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.50076099 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.537319248 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.562697994 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.496164052 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.459492773 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.454210235 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.440650537 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.485904624 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.560635453 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.501417252 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.583232852 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.431724299 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.616545206 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.43285422 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.433427223 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.484643809 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.536367713 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.554511576 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.433339367 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.484833367 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.488755051 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.501988956 seconds)
  done (took 37.317638473 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.432471677 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.440779006 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.438550483 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.432491122 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.43324866 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.43316877 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.43785265 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.433910973 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.453728034 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.434292981 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.432915634 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.432214193 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.43216552 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.432905823 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.431855245 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.446121552 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.447076474 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.43306688 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.436027539 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.439316766 seconds)
  done (took 30.101785542 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.427702572 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.281527541 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.779436235 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.683852527 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.428438424 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.430408954 seconds)
  done (took 28.399961076 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.50995072 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.643263208 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.434657768 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.815304129 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.891421666 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.436080149 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.434276344 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.686693892 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.024467396 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.027893845 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.49746207 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.507046149 seconds)
  done (took 21.278315301 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.428098179 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.430971475 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.430722612 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.447447473 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.493023736 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.438656292 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.441602142 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.428009588 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.496870835 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.499610361 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.441470976 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.494744223 seconds)
  done (took 38.841302419 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517797543 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.479425454 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.426237943 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344239159 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.813981787 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642087099 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.345209438 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.901571342 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.433585508 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703612727 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438933942 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520853008 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688150268 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429988312 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.435033768 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.508642519 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656992552 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952147519 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431787331 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.64992714 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455892192 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430899462 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.774587747 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.462501992 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643344943 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.570142938 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.691765882 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432393869 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732965636 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.443767733 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442950387 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432596735 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705655333 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120046642 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526786391 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441830451 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.382959481 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.15097792 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.426303254 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.726243721 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446655053 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43431532 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443232021 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433450142 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.368940663 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434688388 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912034968 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.437823125 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.144098019 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433421102 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443542806 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527352498 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.436141522 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.252054941 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.602204504 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433202888 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.429863407 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438993802 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006626996 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.125458478 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435480773 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.371896645 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.995544774 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.732124218 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131455175 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.537579481 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.43740674 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.437406472 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368004699 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.702776307 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452569001 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57236469 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.455084668 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.094712368 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200410363 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.444580498 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365703086 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01848902 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434927712 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.371466912 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662892123 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433175354 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37326747 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.385419184 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.368699802 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188753512 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445734723 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.889579876 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443931503 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.903288889 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.444183307 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45257502 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458946645 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.659544853 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.319559808 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436357745 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.437842558 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554356561 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456674042 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911496213 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369996671 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.438994629 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691511932 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.647323684 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448793729 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.502491588 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667049833 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447028656 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.453632698 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.435029408 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.464948202 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.089302614 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.449876265 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131992648 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452879335 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436030689 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221787168 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438059389 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.541345418 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.444792972 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694726568 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.245526349 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436683839 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519835227 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446133704 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.43729957 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.75963811 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.958536514 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.437798602 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.439408064 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438945545 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.449167441 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.438503274 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399828917 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.448191539 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452015671 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.439215028 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.661909491 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454545323 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71540964 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372675134 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575248229 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.541315241 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.661828237 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.689960259 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.43826529 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697658861 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45319915 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.440579271 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451542568 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456578697 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53569146 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461499638 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.449874884 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.69819761 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.441577959 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.442734303 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.762165547 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.441620553 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446834259 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.904452138 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.42227125 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094530211 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411734366 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.445582401 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33388904 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.452680699 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502865126 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.445001496 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.448876532 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.375699033 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.499953422 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.44535106 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.444819467 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665019064 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.45104958 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.710073545 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520144762 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.663615702 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095494945 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454442818 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.373882119 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.150982638 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.133049564 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441181451 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.37583352 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440126122 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449743026 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.451234019 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.167388013 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.099907656 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443371445 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.690877989 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.445745749 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.451756279 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.445925092 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440132622 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.371447908 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142072363 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451180931 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.453952998 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58374771 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.4548913 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.375246366 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.444247237 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.444738922 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.440102438 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.440684311 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473625178 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.706735456 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952993979 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701274538 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.348307583 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452903626 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.778336155 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.475159314 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.443309673 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443414241 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455241122 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.467038522 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450680631 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.452704743 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.675546804 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.122010003 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01686278 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319428498 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045921491 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504820984 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.457379606 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445141488 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918224346 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376295073 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.009273688 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645242791 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918149047 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398706894 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669758781 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.70493731 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249472563 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452833273 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672341474 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458964742 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.458669493 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455623066 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654636721 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478563428 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.455381975 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.376331855 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.728875715 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728245021 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441574362 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522739379 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918959518 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458756892 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.445820419 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.443167705 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.848299063 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630898651 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.161324673 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622398924 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.443986555 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447286666 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946487868 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44927083 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.67404973 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150451912 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449255993 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.674867829 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383959586 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.455669025 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.456081673 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.445156141 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.853377889 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.442033813 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.700724373 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454331965 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379304741 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.449221596 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052891412 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.302837512 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.450497591 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443928017 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219364317 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456965978 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.751023475 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.463348946 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.345100968 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451335939 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.379782861 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379533577 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.139897258 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451540985 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414075579 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96581778 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.94752665 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597097094 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467736067 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31435641 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.701738434 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.460413712 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107199174 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676321524 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.462404375 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46846182 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.545797025 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463055195 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.436185408 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.446367258 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.682599386 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428983537 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671291235 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.438624996 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.355596566 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.446359449 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.66031085 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.447472745 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.45943385 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715403526 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.160679663 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.457180341 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326174554 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474655788 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.462610745 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371265938 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.010291503 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457264585 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526554538 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459151583 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.457572225 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.459071879 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632144588 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461808547 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45241231 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.460948449 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543893388 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.322595031 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.352893824 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.451272547 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113580597 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331090888 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.118497749 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463355275 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.448423142 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455567107 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382871475 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597524655 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.679113741 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721773217 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.569826937 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.123828587 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470762034 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457881487 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468004525 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664690774 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724305039 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350235274 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456882306 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.466238868 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.449117334 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459864085 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.660919227 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97638388 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040451481 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572176899 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.45992254 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925018235 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723723572 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450224748 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449982593 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044674716 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.467174065 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.860135827 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.457304185 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462994992 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600085179 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.459690582 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142785488 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.461075806 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.606492934 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.224526978 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.837896569 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.709518292 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.957829951 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.461149946 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116464302 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250697799 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719045348 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518195727 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.461974469 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.569654354 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598691602 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.453663738 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.453781491 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45127235 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299644526 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.160851475 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.461197724 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124926963 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719349265 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.448350745 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.45618203 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476061724 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.460703495 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.67528872 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2155346 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.676835319 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.462028416 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.457711568 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.269148958 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121279116 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467256105 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385303563 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.45542168 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719559098 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.69012858 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47204565 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.905845799 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.164394692 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043192125 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.427334273 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473379083 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454179291 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256212495 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123533923 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.399296861 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978800691 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011851801 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457657888 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725898338 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.45744251 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.456497329 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728914384 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.456726314 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.458374492 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.465194359 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.117393683 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284023531 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.473274257 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.721387904 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.389561319 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.800652365 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225518294 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39127579 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463301903 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.651376731 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453185272 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571759454 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466167298 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.452356533 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469174447 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.209377554 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.737589284 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.459191901 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.449517027 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.442459372 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.471938536 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4635898 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741427328 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454235067 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.131574248 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.806798363 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.71112403 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.468865281 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.440279561 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.458116699 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454419313 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.451465475 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.664503512 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.177707099 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047394325 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.454673362 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.482596621 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.459359842 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.671935897 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667237669 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.469517999 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.468224065 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459536741 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473770714 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.366875366 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.964234246 seconds)
  done (took 1660.500666303 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.477516345 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.490040358 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.494809562 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.470917247 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.508078906 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.521599927 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.49855341 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.552120464 seconds)
  done (took 53.407789584 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.453949542 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.680277168 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.486772336 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.457514288 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.468532999 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.461391054 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.925549879 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.464774382 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.464684985 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.465381602 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.473162202 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.469383713 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.125071799 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.466226214 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.462409311 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.460286844 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.467564171 seconds)
  done (took 67.654706011 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.466079655 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.78866681 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.498791636 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.460034886 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.83405819 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.473760835 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.687936833 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.508284309 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.465152871 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.712714288 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.126903486 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.49671144 seconds)
  done (took 81.915592929 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.464842309 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.46464416 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.464255907 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.46362832 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.465456266 seconds)
  done (took 8.718853857 seconds)
done (took 2100.645841273 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.71064424 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.22771986 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.158371499 seconds)
  done (took 5.782628389 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.601950964 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.651280086 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.773282457 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.776420424 seconds)
  done (took 8.197616904 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.729619349 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.834193163 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.640204219 seconds)
  done (took 6.597850812 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.974237396 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.465907568 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.580800444 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.453749417 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.458710716 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.457462591 seconds)
  done (took 20.764592215 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.45921651 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.461820179 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.458943614 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.463123285 seconds)
  done (took 7.237942058 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.441322245 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.243839487 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.44063883 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.45764128 seconds)
  done (took 18.978345316 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.205476541 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.219145296 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.203240016 seconds)
  done (took 8.022945894 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.471620683 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.305723759 seconds)
  done (took 10.17173338 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.761891571 seconds)
  done (took 3.156992778 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.59065873 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.728602278 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.64580454 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.480993438 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.666950523 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.58396398 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.220372973 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.766540602 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.465576621 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.792854936 seconds)
  done (took 30.337589204 seconds)
done (took 133.376143303 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.482537979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.70638527 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.661584528 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.495318263 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.687749142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.662770071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.674338418 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.460533204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.964768094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.949065745 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.453452951 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.688360134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.626046012 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.457215087 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.626509137 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.833646433 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.687040747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.529123966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.139055818 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.34073855 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.675675315 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.092999224 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.288597048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.113523935 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.688952865 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.613456081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.686560626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.832415723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.314799962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.706926235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.61295608 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.458147217 seconds)
  done (took 198.607097345 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.462594059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.457335564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.4577355 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.45744675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.489766469 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.459275053 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.459049754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.458493025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.459109469 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.475213057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.470350889 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.458396187 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.461710481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.474622053 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.46003206 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.458402943 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.464427093 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.458895531 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.47443954 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.458279278 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.46144224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.46526841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.459860189 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.480291335 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.484263585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.459180531 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.458071503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.473699409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.459503076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.466984094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.459821292 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.463563547 seconds)
  done (took 208.266385144 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.469161702 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.458666547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.460014053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.459733332 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.458813282 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.461107825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.460464195 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.469671947 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.460340624 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.460258534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.46380708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.459440682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.460504735 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.48124456 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.462413934 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.478412931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.480441124 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.463672414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.465845417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.46038787 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.460840922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.489986645 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.467083924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.460273259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.475559675 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.461926393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.460643509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.469323768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.460405082 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.463762992 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.460982546 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.475074333 seconds)
  done (took 208.300497538 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.656295328 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.468599401 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.469506017 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.404714743 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.469513175 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.468010077 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.466224662 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.658441822 seconds)
  done (took 15.461334641 seconds)
done (took 632.031324235 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.859781923 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.562439932 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.671991444 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.490651822 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.302607658 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.490284297 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.489843221 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.668720793 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.420178557 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.673305974 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.790703191 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.486267887 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.930477121 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.487490089 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.751690685 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.592889118 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.359897188 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.479036859 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.813734584 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.073594107 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.752002928 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.977408401 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.66680593 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.413736996 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.930486892 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.974449139 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.197324207 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.360543274 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.489690362 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.815438172 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.232628235 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.460116934 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.553562827 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.533543126 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.588906787 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.570115736 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.432833508 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.530991211 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.678209319 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.734547944 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.068254278 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.229868633 seconds)
  done (took 97.989277672 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.458577677 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.460499157 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.458601732 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.459639622 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.460610418 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.459332353 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.459916944 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.458095126 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.458425585 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.459779467 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.459350157 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.459980651 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.459656068 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.460304186 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.458674863 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.459251125 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.460358212 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.462119647 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.458953792 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.459454203 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.460489902 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.460273941 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.460631318 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.459718775 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.458831655 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.461857623 seconds)
  done (took 39.357471942 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.472422653 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.710872554 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.901726947 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.479410269 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.4725882 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.476315084 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.555153272 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.473719452 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.474788621 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.475631998 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.633454589 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.47642933 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.508129783 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.910967154 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.47664611 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.474915099 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.474762764 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.473584465 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.717870925 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.482566131 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.55753402 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.474623729 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.555534732 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.482475385 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.476174363 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.474158064 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.478128583 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.97722493 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.476716038 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.635890312 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.339320503 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.557621489 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.931782544 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.914279062 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.335934412 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.479663805 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.474963084 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.640284472 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.476741014 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.475467592 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.557229359 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.474894942 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.921770693 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.110916675 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.494278096 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.47595158 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.003960667 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.639023968 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.745442823 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.487451405 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.936098387 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.478820129 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.477012649 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.476393108 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.744760874 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.486126712 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.475034611 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.024797486 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.481761886 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.557146347 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.477284172 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.475384068 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.728154379 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.477096828 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.715933163 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.477442927 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.48335067 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.476583366 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.912707727 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.478748492 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.13067147 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.492499304 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.477240435 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.63547113 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.716493158 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.037220147 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.480446264 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.733491388 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.945336358 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.557597864 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.47943356 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.971949282 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.561416115 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.480335822 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.47850529 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.478110168 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.477586935 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.52163257 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.557143496 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.056577566 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.122915557 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.0400269 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.561510685 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.489754269 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.477269106 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.024594492 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.480126622 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.47757043 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.909742961 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.130460885 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.4960006 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.485273404 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.11360346 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.497717044 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.560340549 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.483676659 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.921718272 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.480217071 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.522885325 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.479522768 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.485658547 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.481960621 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.56426853 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.485882621 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.480699624 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.104453771 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.663494032 seconds)
  done (took 192.788798129 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.47294102 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.472728669 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.472933194 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.473370409 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.471396716 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.478120498 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.472291982 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.472452943 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.478048208 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.470855025 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.472835006 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.471427256 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.47524206 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.481442159 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.482186899 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.479600139 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.086379818 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.47310451 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.486095755 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.472772377 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.282698385 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.477531117 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.481150223 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.473567861 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.473121444 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.474858664 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.482182726 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.47535782 seconds)
  done (took 156.14789248 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.480619439 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.104215987 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.485692267 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.623872667 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.50561452 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.479711462 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.621861544 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.544409199 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.484920733 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.480364183 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.479003805 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.814143204 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.48644738 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.028031142 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.684965568 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.624876793 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.029970199 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.483876076 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.479815892 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.479668234 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.622078882 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.491427688 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.81853875 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.112064606 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.487012364 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.10847207 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.47466508 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.483079932 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.481338758 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.110331079 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.484090694 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.820621447 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.566981564 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.54499959 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.114301472 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.031759441 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.029545968 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.640585052 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.484971439 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.480488876 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.480720489 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.469558899 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.085545101 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.484322123 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.482845956 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.080852908 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.501073657 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.483750236 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.491431734 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.481362777 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.546263008 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.549784329 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.812322008 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.093790967 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.56393847 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.504088137 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.624785622 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.88761654 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.484959075 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.029617357 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.470176006 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.089562381 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.486268748 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.470201801 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.482536798 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.486841873 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.642420933 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.6222925 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.031551909 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.485393995 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.031402717 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.643676949 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.482049775 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.482927233 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.484706993 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.088479012 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.033135841 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.644637718 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.627350556 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.694526434 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.475858901 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.48410896 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.472459458 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.564676179 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.48359916 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.089836469 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.032822913 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.486178617 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.485088414 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.48584872 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.485835412 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.674978279 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.094302308 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.566843978 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.026574037 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.825599407 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.808972105 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.48732594 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.547565223 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.484229764 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.81121591 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.487208811 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.545617685 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.95585235 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.810179418 seconds)
  done (took 176.497948989 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.736893093 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.699674978 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.579616801 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.605347682 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.038221351 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.062368741 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.725162892 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.614579763 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.601297796 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.744585916 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.678688294 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.57515366 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.679209231 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.563339535 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.223800773 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.557545011 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.584626702 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.626210737 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.600416315 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.549422334 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.138768919 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.785499934 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.66343277 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.646658323 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.583372317 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.312740735 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.038966644 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.002550292 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.659743222 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.782603977 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.006543063 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.640707672 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.463487679 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.190616233 seconds)
  done (took 70.380511564 seconds)
done (took 734.563635831 seconds)
SAVING RESULT...
DONE!
