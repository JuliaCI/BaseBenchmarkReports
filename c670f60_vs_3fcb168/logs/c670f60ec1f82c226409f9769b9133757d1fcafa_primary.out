cset: moving following pidspec: 423
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.296039909 seconds)
loading group "string"... done (took 0.587629328 seconds)
loading group "linalg"... done (took 7.175986032 seconds)
loading group "parallel"... done (took 0.169093204 seconds)
loading group "find"... done (took 1.149815334 seconds)
loading group "tuple"... done (took 2.021427474 seconds)
loading group "dates"... done (took 1.301023644 seconds)
loading group "micro"... done (took 0.241452918 seconds)
loading group "io"... done (took 0.972885711 seconds)
loading group "scalar"... done (took 39.834000268 seconds)
loading group "sparse"... done (took 12.167082972 seconds)
loading group "broadcast"... done (took 0.984852881 seconds)
loading group "union"... done (took 12.901385564 seconds)
loading group "simd"... done (took 4.329103089 seconds)
loading group "random"... done (took 8.724984929 seconds)
loading group "problem"... done (took 1.835402092 seconds)
loading group "array"... done (took 20.562858055 seconds)
loading group "misc"... done (took 1.850675272 seconds)
loading group "sort"... done (took 3.128282415 seconds)
loading group "collection"... done (took 17.44683736 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.516818578 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137262554 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113906511 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135201995 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.177101643 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.127688413 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.137754132 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083363273 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.988827374 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.161111113 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13417099 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.458712901 seconds)
done (took 4.845106301 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.199242697 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083632713 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092506308 seconds)
  done (took 0.794885885 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065512272 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123562762 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.077654627 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066539447 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06507308 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077727297 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065093322 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064568295 seconds)
  done (took 1.165841103 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072120456 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066443154 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081282041 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065726125 seconds)
  done (took 0.911683743 seconds)
done (took 3.771407465 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.870235914 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.230954632 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.1880702 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.437427242 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147146129 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182789191 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654370849 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.268200886 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.203521251 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09552164 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102379276 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.36396674 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104017524 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.65843581 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.072784066 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.101778658 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.152898451 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.377638075 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079687646 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081554103 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100281305 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.137859971 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100563391 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074511452 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.163632158 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06757624 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.1414969 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.091239581 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065511627 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.234792505 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18666961 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668006842 seconds)
  done (took 10.06599884 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.093944316 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.111937767 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067008591 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134801855 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097471499 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083122141 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.068722301 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080440692 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088084001 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.15305939 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.109810823 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102417375 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07835452 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067583681 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.096563978 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205921147 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105717447 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084252293 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084982537 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07376063 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118292272 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079622838 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090878321 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075070863 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.148972233 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.189523751 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10933829 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.109387153 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068131613 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077621478 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.128652592 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.139808383 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065849854 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080760548 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.136692837 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108124085 seconds)
  done (took 4.35022001 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.998797219 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154113251 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08808537 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147797426 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081791397 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106407573 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.080169826 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096062031 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23727238 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.048669821 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.448801073 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126669922 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098468761 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065904658 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080108097 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065831953 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.461848848 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143288422 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102605814 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100903122 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074732057 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086243872 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355427154 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066335288 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064693727 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083784208 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05890609 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14423233 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067643059 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.186153949 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086613217 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084011897 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09865728 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185954772 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095705425 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121274883 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080488955 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066709821 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167954365 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073222911 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082414462 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087893441 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119087722 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119169866 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068719344 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08154865 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178438007 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067274372 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098887606 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.835181883 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16239622 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095146924 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083112736 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264151953 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103312196 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066378418 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080463502 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066247152 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.22273171 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148294868 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066728571 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082149133 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066113051 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.106962347 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068640676 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.375466015 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066964197 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.628348508 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069373838 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077071212 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084259711 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067054605 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088196428 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072277087 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100124086 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066539771 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067365951 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081980462 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065222732 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082954772 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085077167 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202622587 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082362038 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066766287 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064165349 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101707228 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109081008 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069909731 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065546109 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115194915 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065210065 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082655841 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067178819 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117915116 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067223156 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078918011 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085269394 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081441109 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124345077 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066929521 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093601659 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07825456 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094771928 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08391979 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114345381 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.075889824 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080799845 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.149444531 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064456081 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063686655 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082788361 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067370167 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081745618 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069011971 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09493855 seconds)
  done (took 20.27629613 seconds)
done (took 36.316363932 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.281356163 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08905563 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.087810605 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.072067251 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087385166 seconds)
  done (took 1.317401976 seconds)
done (took 1.991279295 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.116900957 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112092115 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.061855063 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108197751 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061243913 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112129148 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109936221 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078814278 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11137974 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06200664 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108776151 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.062631275 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.061168953 seconds)
  done (took 1.867441702 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080870375 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082613657 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083312693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.07908067 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075359003 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080657951 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078064416 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102288722 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078222635 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084860706 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062900351 seconds)
  done (took 1.558362605 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079800344 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081429027 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083167296 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079129842 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076577007 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079023885 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078247929 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098772667 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078246439 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086697725 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.061761093 seconds)
  done (took 1.554270349 seconds)
done (took 5.644416727 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075781027 seconds)
  done (took 0.73895177 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.670354424 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.537428638 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081939768 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.128987069 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.214863606 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.151174194 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.428574186 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.107268255 seconds)
  done (took 10.151161152 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099653124 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084769312 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066628602 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084852634 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066761468 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085253414 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067672854 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069210936 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08104159 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.06946115 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081939102 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068323857 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082545262 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067147834 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066228707 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084361226 seconds)
  done (took 1.956395679 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090643426 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089324135 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.087043321 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073044448 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085877652 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070477268 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088043741 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071978232 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083635584 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070695135 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087587161 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072015046 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085227167 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063111683 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.086878999 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073854388 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.0843485 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072711615 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087887966 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073299558 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.087491861 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062976488 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.084700597 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072419829 seconds)
  done (took 2.674861381 seconds)
done (took 16.190944301 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.126821253 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073278693 seconds)
  done (took 0.87119362 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07841813 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.093427633 seconds)
  done (took 0.850511732 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079471121 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.077278672 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086129073 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.089462057 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064255363 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078481148 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.097320131 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064456247 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077557879 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064332233 seconds)
  done (took 1.457566571 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066287374 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088862538 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06808995 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093548206 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070878284 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.078019293 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070884209 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081009285 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075473788 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076076598 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069251314 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.095687378 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.0689351 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.096146922 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06975125 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08049845 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.083769069 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065960583 seconds)
  done (took 2.079887723 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064781457 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064580375 seconds)
  done (took 0.810263397 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06480642 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061344544 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079004731 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064310608 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076354981 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060572789 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076421031 seconds)
  done (took 1.163857736 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387816826 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.106739993 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.236280286 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085091378 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.099645286 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254978971 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.079395053 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069064085 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.084486936 seconds)
  done (took 2.119441529 seconds)
done (took 10.030176306 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077799227 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083079635 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.106202043 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.403061772 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.103206326 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064311382 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.128182763 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.214485268 seconds)
done (took 1.86068293 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.121591276 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.586658422 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.387030292 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206285339 seconds)
  done (took 1.865889836 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362593591 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090575301 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073302329 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066909264 seconds)
  done (took 1.280002024 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064346647 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067512107 seconds)
  done (took 0.820273905 seconds)
done (took 4.776047433 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065116843 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064265319 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.076675685 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065019915 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062984172 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078379329 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083857962 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08737362 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065264766 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065201961 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078375371 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066523307 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.080153931 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06494855 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063707579 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078715792 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065790997 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063666376 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078882858 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064148739 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06376729 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081398754 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063713495 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077826833 seconds)
  done (took 2.426882809 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082098745 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.079781215 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069756192 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084616626 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069258633 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08437019 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069705647 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064408497 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085458773 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068550808 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084426615 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068273884 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.081992764 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06936124 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083174451 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070703545 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086645054 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070379684 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068229396 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085732956 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071822635 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082547066 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07001323 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086642278 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069946098 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085516162 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068602392 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081840288 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071712398 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084746089 seconds)
  done (took 2.989681069 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06891627 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061590447 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077619272 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069597783 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063268528 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080097618 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062609482 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079166053 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064460175 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064256239 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080739784 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063286289 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063440668 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080525536 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064163386 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082605172 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080587749 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064653042 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079573725 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064204282 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066323236 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07943085 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064094757 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078712539 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06371472 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063938211 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079092576 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064174647 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064534095 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079687944 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06631187 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066403712 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080074244 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070600154 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.0825115 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064091232 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067772918 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079623168 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064373847 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062766815 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079319788 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063893268 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06342897 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085662037 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063693094 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08088417 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064101702 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064628721 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080397999 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067084857 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078589851 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063564657 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065000408 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080153386 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067712179 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062827736 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079936716 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063628855 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079326901 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063524764 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063210752 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079097615 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066384057 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064005454 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094461896 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070916709 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078490572 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065733721 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065491833 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081646858 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065685725 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077249746 seconds)
  done (took 5.806449114 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.111815326 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087799213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079472636 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063909157 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075713186 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062549312 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065564494 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077764495 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064308889 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08259749 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062776123 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063498643 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079312701 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075281656 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077897185 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06418539 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082836248 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060893998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062640299 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081116072 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063211384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08165209 seconds)
  done (took 2.324748984 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.180326558 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085280761 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107949434 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088089803 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066530953 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087055302 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067574302 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083797836 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069887118 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082890475 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066759808 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083637102 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065619228 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082919716 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067203948 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082875237 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068569624 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081613359 seconds)
  done (took 2.215014744 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075250482 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064082209 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102361026 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06450127 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081156869 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066382198 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085155724 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072269269 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08241144 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064916275 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087735828 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067357949 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081636358 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065671288 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066673074 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079985327 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06745621 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080404463 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072448998 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085051757 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069812333 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0884273 seconds)
  done (took 2.369734548 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078802006 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066054453 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097646894 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082033882 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061154716 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062878527 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085730452 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064706327 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08521214 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066970311 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064246119 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078654897 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068748694 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080363936 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069193151 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079959091 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066296833 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063976531 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081571748 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061073116 seconds)
  done (took 2.164723502 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084145397 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081550464 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066246479 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090067948 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066464359 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081378324 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073889323 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080589333 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065522937 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104389735 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066366509 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081393285 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073429926 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085689954 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066470551 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088577879 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072979744 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088468544 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065115048 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081496601 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104299487 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.165693767 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088962252 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065621038 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080368191 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0666695 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0649985 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084932912 seconds)
  done (took 2.988792441 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065313789 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06538957 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078212943 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062299351 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062653702 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077749313 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062962944 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062811378 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081350041 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063447085 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06558415 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08179616 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06615813 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082182508 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066681119 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065835307 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081484 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064143746 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063625381 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07996272 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066553501 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065713798 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081943183 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064278682 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063265394 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082857789 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063893646 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080254865 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066627053 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062720749 seconds)
  done (took 2.799783149 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07535177 seconds)
    (2/2) benchmarking "in"...
    done (took 0.087440759 seconds)
  done (took 0.868277594 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062519925 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078309149 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078338641 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068723671 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084518127 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065970408 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088044172 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069215871 seconds)
  done (took 1.298543655 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080313147 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075262654 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082465457 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075669469 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09080162 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082454734 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.152496921 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082690224 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071125069 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079299319 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.077882022 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064756941 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088136243 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065228974 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085566003 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07091702 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062272821 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086265747 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06769118 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079231919 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065968152 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088560904 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067915214 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062195885 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083774036 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074147673 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.092250717 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066697523 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084870466 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.071708827 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069755333 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075000689 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064984397 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.080986259 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063081736 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.089441297 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079241014 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082862846 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073241626 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065921506 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089824201 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060517241 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.084947743 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071255303 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090494904 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065964045 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066645191 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078119222 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064615835 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084626301 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061776674 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066305532 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07763433 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07347137 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086018911 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077664776 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068068468 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084618348 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069076238 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086088629 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071308125 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08228494 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067822984 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064816683 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089707378 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.06938508 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088849826 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061743806 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061064779 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081680338 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076332161 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105679464 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073119424 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083777285 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068492277 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080066234 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070199444 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067778298 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088795534 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07331601 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082793961 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072630975 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089942524 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067134611 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068579781 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090752698 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064670263 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08517901 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06576193 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099311342 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065757476 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064520467 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081921869 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076122161 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086990022 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06722447 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065035605 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090861239 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061208686 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.0837858 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067533222 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082937753 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076971355 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087366792 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072745714 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091021047 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074946895 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066477962 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086519086 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064166793 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083422272 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065838037 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073148077 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077633806 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069638051 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082887319 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067322749 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074935597 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081163222 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066351739 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090022993 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071852827 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080643695 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063844458 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069429161 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082887487 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069222482 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090785246 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065865225 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061317223 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07848842 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070440975 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082843342 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071559477 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086325819 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069704751 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061520795 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081244862 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070643355 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091242527 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067723051 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066896103 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089524789 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067822553 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082541521 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072887206 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084997223 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067043057 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071839089 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084309664 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062462807 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085930278 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069629931 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065777271 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08701896 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070111921 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08602083 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067564533 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064288981 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088172274 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066982125 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08240259 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066708301 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06519509 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093638252 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06764779 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078670463 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064052806 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089261804 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064896478 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066077296 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082604201 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069162763 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083284764 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065372004 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065631854 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084826621 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076310098 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086891917 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067568019 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088117407 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07710628 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082433216 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068906799 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066030402 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084587149 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067151646 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092717508 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072671487 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087309473 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069146739 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063638113 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089686078 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074468976 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082097972 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065398162 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06600946 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086814103 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072504835 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086731892 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067482231 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080586462 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067511329 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069418295 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085705956 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066452402 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082157358 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071942461 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065093261 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089247375 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067896119 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093661848 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070394326 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079279679 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07027151 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081624174 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073387683 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062550981 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081734751 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066845236 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068273628 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08212198 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069402442 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077735598 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07445134 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089595054 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067223747 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066044236 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083159567 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074083181 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084511308 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071867065 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069944735 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089571152 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07697464 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083495139 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070160133 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093141171 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067403092 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061082264 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088290615 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065154346 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081612829 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065890349 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064087082 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086402017 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074931987 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090537632 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060856734 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068046431 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082422145 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06584397 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078846071 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071482369 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069290959 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085044144 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073490602 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084685987 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067483131 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086328055 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066695456 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066945536 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084112238 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070035831 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083978306 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069882077 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065522527 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086480601 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065752732 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081231655 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068999532 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065945293 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083784546 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07194762 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082905853 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067204388 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068721741 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084380675 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068094482 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084164308 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066409928 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0693551 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085326621 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066908169 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085518732 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062381357 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07340096 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083824096 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073350331 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084029888 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063626354 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070612943 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086093135 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071147815 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084262552 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067373696 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084520169 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066821453 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068592352 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090187094 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065122703 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093844645 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074283693 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083704514 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069671789 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066757487 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084768794 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066088635 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084113935 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067433142 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066218098 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08313992 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071192592 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08583246 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067279874 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067695976 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084806739 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06705891 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084577531 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062091922 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065918141 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083638344 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066802454 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093000278 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067870899 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065650477 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083703064 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067582894 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082146418 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063919551 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090024825 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075599015 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08288835 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074116365 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065266832 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085082656 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076433696 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077754089 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06460644 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063890866 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08196982 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073794146 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083879779 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076202571 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065890044 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08354211 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063971596 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083844209 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065837398 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06127473 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081664251 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070512578 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082650719 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066363472 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066507883 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086753296 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067951387 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092917448 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06727364 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083556806 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067262215 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063684309 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082760051 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066716723 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068643428 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08469041 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065144648 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08127217 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066735336 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067540162 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085217368 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067655556 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084607309 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073526641 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065743932 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086602763 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069630689 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081607767 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069656928 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06614065 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083967961 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066085643 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086403174 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070870591 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084049311 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075408561 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066407649 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084407581 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067544387 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080836215 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067081745 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06663406 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08313116 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066003476 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083796239 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074532632 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063849143 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087189547 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066281692 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083513694 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.0738719 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066815937 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087885381 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072225344 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084477384 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068816043 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091371497 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070601144 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086571573 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068011106 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068302525 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089792598 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066288444 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089766038 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067056063 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067194248 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08566276 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064583351 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083361153 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066520465 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065356638 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089701775 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067095953 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0831039 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066280831 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064549059 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085127833 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070523978 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091242448 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069905562 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068251398 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080256411 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064518246 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084009636 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065155119 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06764694 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086991048 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072057275 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086553733 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067434081 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064983064 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093028409 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072301346 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087930771 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064734724 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086934773 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067999777 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06851076 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08533415 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067354761 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084614522 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070892165 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068131133 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083883374 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073367892 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087513693 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068219964 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084390916 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067838802 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067466655 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078816082 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067629287 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067972283 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089854464 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068657427 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083529528 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078080892 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081453832 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067794552 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068986092 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083800916 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071105028 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079618204 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068681582 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066745395 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08531213 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061789623 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082821235 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065059287 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068389169 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083175444 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062424355 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093932678 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075623286 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086561115 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066398383 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065137396 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079508333 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062531156 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065659314 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08611017 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06835342 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093976509 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066041984 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.0829553 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062737647 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067282179 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08676362 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069570297 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080461077 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063314008 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06578249 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087315009 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071748074 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064418074 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084350115 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07068546 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086147994 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064985914 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08619392 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064214882 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069539679 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09684467 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067189121 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08461295 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072536563 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091461052 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068054079 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061652284 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085056072 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069823249 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084585794 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068188198 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067060443 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099315102 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06907736 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083712164 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06619666 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08610294 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066373946 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074466975 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086246475 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067333757 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088625921 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069634706 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091640549 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070009911 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090749013 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070722385 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069672258 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084025866 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066674018 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081755997 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066018508 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068211319 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084980138 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071667115 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092145769 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066651182 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094814805 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076544145 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084958391 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064165177 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066091504 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083347711 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062289671 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067356069 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083377691 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065035977 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082341105 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066460132 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067518433 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089485471 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067853302 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086041017 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067106176 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060867981 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086716387 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069245255 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084602694 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064737889 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066541599 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085263545 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070831125 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087529174 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06519088 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068364281 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085503323 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068024126 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078455671 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073533877 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065827757 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087335195 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066384375 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066401803 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.086340135 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069103961 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088698126 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067635231 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086131032 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075362299 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085814975 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064748646 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064114446 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089754285 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064789519 seconds)
  done (took 45.72813726 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103759114 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080808503 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062042214 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080211706 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074875516 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08082488 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062885749 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063070235 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081022742 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065209336 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079667229 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062654235 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087926028 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085351767 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092898887 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065936575 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08104879 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063653542 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080336447 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063985957 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087729829 seconds)
  done (took 2.355407416 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073616906 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.086806569 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073314806 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094332698 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067223463 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089013436 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071651674 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089058862 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092935727 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068304914 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092778651 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070973572 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08419247 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067522922 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084202243 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071532892 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093432855 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067633828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088056534 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072628321 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088760912 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072652341 seconds)
  done (took 2.506968953 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065997109 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066040779 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085816344 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062358927 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065060375 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079956252 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070491159 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081556745 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070508488 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064633704 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083177798 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066703902 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09357015 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062451082 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.0665503 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082335571 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130150965 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070833877 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064996324 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086460761 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06195195 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086325382 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062346903 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06143687 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083469262 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069734712 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08414954 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06511268 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065385594 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083791849 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06657705 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08103383 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068320877 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066075222 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082752384 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06567889 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065573087 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08404456 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062371321 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081103252 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067400788 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062469831 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084557781 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067880526 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064079987 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082403203 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067462284 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083626032 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062062615 seconds)
  done (took 4.360310591 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082340224 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.125188946 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085914446 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087394285 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.098964793 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091370955 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07033456 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109683808 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063348662 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084063076 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081577771 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.101810766 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084156024 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070698592 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090709892 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067212839 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067125661 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083676109 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069541861 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084359682 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069301412 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091349847 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.097931387 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080534949 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088541843 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065586112 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082998844 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07101851 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09677018 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070939366 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088801052 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072839158 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099774517 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07119426 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085224752 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068207197 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100125627 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.0831972 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069634133 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063242911 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086172181 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070405259 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091424361 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081622855 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085312346 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070397323 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084730481 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063269667 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096921997 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068341456 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092347519 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098848253 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070420129 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084135519 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071836638 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099263115 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067058615 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082206527 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070414582 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096521339 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064428443 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086960296 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08051299 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086197595 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073367387 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098282695 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07068105 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088587488 seconds)
  done (took 6.471587527 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073236789 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087498918 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079293179 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099318401 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090128637 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072893533 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090418637 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072900223 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089716366 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077416117 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090406666 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110633537 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068362655 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092920152 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072305386 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090778333 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07227573 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09116283 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071872797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092403798 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090726485 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079982604 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09097445 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098099643 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101749627 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086372178 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073123621 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090978089 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079894833 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0913266 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101324159 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072167354 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090968201 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097541143 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085354325 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090728279 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065585859 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089821639 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074050111 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089806184 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067655664 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098126365 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071764764 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086609472 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073027367 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091341357 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098164774 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083707698 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093116711 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095027061 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073003972 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099146725 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072091727 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091424247 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098678021 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104592447 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099422249 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097754138 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073116621 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098849306 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098472351 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.104431953 seconds)
  done (took 6.154312123 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084413822 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092945242 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094767105 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06257057 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064403186 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089020501 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064810192 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081453678 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074398583 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092829235 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077825661 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088195145 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0720879 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096233937 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08759328 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07315616 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088445554 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07029346 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092968102 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069692319 seconds)
  done (took 2.37717639 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073782229 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.098937014 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066695378 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070929735 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08921361 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070827949 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088735029 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070064537 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085241838 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070404138 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094171099 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077072913 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086243988 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072866506 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093950548 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071855178 seconds)
  done (took 2.044823092 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076272912 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094103173 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081229613 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086174065 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0654791 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082059658 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067335322 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061545791 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082164991 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080678575 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085686956 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069233356 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0847017 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064956737 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062990016 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088298419 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062984361 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082500743 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066327428 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099061463 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077549337 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.082481905 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067627858 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067231347 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085541207 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071202482 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085673561 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064142918 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083095402 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067075345 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08451801 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074140813 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080694309 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065445237 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065594167 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082263105 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066872079 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084443288 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069651871 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065438999 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08422838 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066257551 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084432232 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067664432 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08024909 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067721713 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062998394 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090772277 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064357335 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085018936 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066363142 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085965607 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068788129 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075789549 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089046258 seconds)
  done (took 4.940874376 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079049141 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067470412 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079381675 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063745109 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087068826 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06795261 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068687322 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086957998 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067563513 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08284164 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068918016 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086918928 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068687298 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069420915 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087105111 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069569575 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080748681 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068887216 seconds)
  done (took 2.119502048 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0712444 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06431389 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.090587274 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065120261 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08376625 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06891438 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062298895 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083994934 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066333929 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084695635 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067246712 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068390302 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083800161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068822491 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084141219 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067145924 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068270048 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0836959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06665434 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079986204 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069234037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064711422 seconds)
  done (took 2.382725454 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.070984347 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091871645 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160166498 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106824046 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082077201 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098894344 seconds)
  done (took 1.382753909 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088446744 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096427218 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06810369 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105519372 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074707989 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086443229 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06838423 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085740851 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077151819 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099470573 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067008565 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095499519 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094259131 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075920461 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092422766 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074025265 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086459647 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06814639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08613288 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10351225 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069187263 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093922487 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068467603 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086586889 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068215764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0938851 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076064557 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100086115 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085713231 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077225315 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092108648 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068416158 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095507441 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098920021 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070140253 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095373722 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068699436 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104636427 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073087545 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095923834 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068481402 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093722453 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094881908 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07324812 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094711596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068426769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092007613 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067557911 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087999149 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109795763 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074407376 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094533573 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092060419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076772218 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094719017 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110700188 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080971918 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095061744 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091281579 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081838814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094542892 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073299097 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095271909 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098182176 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073608677 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095346508 seconds)
  done (took 6.42106339 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082128295 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104293098 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068346525 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100145117 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095345632 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068757955 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08634179 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069288211 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086322092 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068942318 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12710686 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068807521 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095147985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094534684 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069371371 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087349593 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068815221 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093631403 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068395776 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110777638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085938044 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076695209 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094960175 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093665878 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081547184 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092483726 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068408161 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087684345 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067912355 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087186327 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072270928 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087326193 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094454135 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069161746 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09532832 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068805543 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086194391 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073181256 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08671704 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074474013 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095359892 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104449277 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069877286 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086432768 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080993613 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087597053 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068564864 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087206141 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068047445 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087192611 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079981901 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100894288 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10034642 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095090836 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068919382 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086515843 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068973699 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087013454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069477221 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092781887 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077251834 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088378958 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11024002 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069605209 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086606962 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076951051 seconds)
  done (took 6.328146236 seconds)
done (took 124.514018473 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186403244 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.161445858 seconds)
  done (took 1.116174164 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067149553 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093960576 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097981348 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.125458774 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083530082 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.096158791 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114000508 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077020603 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06605897 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08593182 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067575538 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086029932 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.128892313 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065024816 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08322075 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067234231 seconds)
  done (took 2.180722577 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100328883 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.190861704 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107257164 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065656315 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098128864 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078167957 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084594614 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076628051 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092970311 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06643671 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076923721 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094996219 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064661025 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094088513 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074680776 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096847125 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065260728 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096820194 seconds)
  done (took 2.405465741 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100027135 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139470525 seconds)
  done (took 1.01590729 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.189391702 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.118062125 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.194988872 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.405947375 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.197959935 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.267369462 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.167539818 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.16907922 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.151206865 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.162133438 seconds)
  done (took 2.795594973 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096666878 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.165829889 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304966273 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.133771802 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0832396 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110598443 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.134977884 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.087456556 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.099609955 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099586496 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080285838 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096688444 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096739972 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094466769 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074624729 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097177276 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119891395 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074360948 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076118311 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096002809 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116430166 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067224933 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073761309 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.0931949 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077084607 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098065898 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066133324 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08590084 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075778287 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093882165 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078810306 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113833765 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.095885018 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129151585 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081963251 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129620935 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097562094 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071981669 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09418644 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072874967 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09654355 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07724262 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103106035 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077127263 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085886119 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077717629 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084896487 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066976629 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097409983 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07786655 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097590249 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078508224 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128457347 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097424754 seconds)
  done (took 6.06195419 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.73757782 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105837805 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090845832 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.797585354 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085514304 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102604543 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.707647177 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112504914 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203751639 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759809867 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087798584 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095374625 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.17672839 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213244336 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.921496955 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.280795743 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.628538479 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099882114 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105200023 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.127882337 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135940212 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173327062 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148013631 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43503522 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07452745 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088686769 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132678061 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074471378 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.137776513 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104300262 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071011794 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172461268 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226890231 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.150145653 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092070092 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069025807 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086947264 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.142910784 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215385537 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187307934 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.155831294 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068479813 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069134446 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.158215126 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129633761 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068867094 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137668457 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.150416043 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.145991542 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094532288 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073551984 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.158587742 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136095674 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141476044 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09884544 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.270797252 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.277250681 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067939968 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117953146 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100923687 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214969433 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102458987 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.194535704 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135404191 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.16636831 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069731886 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.749966443 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145203745 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089655948 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075341706 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117149709 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073749578 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.156937969 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.126029961 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.368204967 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138545068 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094168597 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069741756 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225315269 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083646024 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089302588 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139654927 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076355032 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120151915 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140184085 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137991168 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165326341 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.210607891 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140247594 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137811761 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093139543 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121492886 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076020567 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189062118 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.185689139 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.137900141 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.184459119 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133931908 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.138002065 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163181548 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074107765 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.147261169 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117732454 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097309974 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135196028 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.167159225 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121727657 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101848514 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072891006 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136598337 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124887178 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106832308 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13775212 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.146972939 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.476454774 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146471686 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069621716 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105718805 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137637875 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.137541905 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073446169 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23218974 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119914859 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145854592 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11977226 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067299963 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119157099 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.137911053 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099347163 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120405084 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136845888 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075868923 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232242401 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.16844309 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096381034 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194191643 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.159592291 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074410281 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.145834051 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117962161 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14288448 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098000469 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135720134 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094686276 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743202372 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137613805 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120060036 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09261982 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17675402 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068734936 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078291975 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099950633 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065046301 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743900987 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10126144 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077841275 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.098160587 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072354276 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119957707 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134602669 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093727699 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137471796 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.19750902 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075467372 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116234424 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081348248 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157356871 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075322108 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102658443 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082866296 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103765842 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1203466 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073193349 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102634621 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141439951 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.136420232 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.187785342 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.538622004 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089623658 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084137232 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194745068 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069487429 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.256878614 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13419753 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.193821006 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139139161 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079463518 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.280280737 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.140344005 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174439399 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104467113 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149704738 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06861095 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133765421 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.13966301 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090824864 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074345901 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.13755999 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162707096 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140284199 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.928743705 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068681766 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198150295 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066347512 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166328184 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075437573 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094736246 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.243474852 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090805553 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144114348 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.13947678 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071200057 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104512453 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.674027951 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104062766 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135904841 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09367878 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.16994751 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.13900584 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.154189368 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135163748 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073883314 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.135709926 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.185789959 seconds)
  done (took 39.7083074 seconds)
done (took 56.064325568 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.251997791 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174657826 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.237272176 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1413759 seconds)
  done (took 1.675483837 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.138579495 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103623423 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117519102 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085076846 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102293357 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085659346 seconds)
  done (took 1.433529932 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.391010203 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261027591 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22804868 seconds)
  done (took 1.686289191 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.278824235 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209936348 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44367955 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295189 seconds)
  done (took 2.139405848 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.171380931 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112748066 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06722167 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105336353 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156406485 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246030434 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.1259957 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.181871324 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078687303 seconds)
  done (took 2.093854877 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194463178 seconds)
done (took 10.028199334 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.247493502 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.197607469 seconds)
    (3/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.224180808 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120456883 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.230752475 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08245023 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100192669 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077099162 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100667765 seconds)
    (10/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.159008127 seconds)
    (11/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.213988848 seconds)
    (12/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.235157331 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088213013 seconds)
    (14/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.102098884 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.082246941 seconds)
    (16/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.1049878 seconds)
    (17/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.204969418 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.171044379 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167746766 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.18724089 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.120592176 seconds)
    (22/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094796521 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072178957 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.212512658 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122744533 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095088828 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.164606122 seconds)
    (28/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.122677369 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.18019633 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090897006 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051703666 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189748664 seconds)
    (33/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159380091 seconds)
    (34/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097539467 seconds)
    (35/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.130777306 seconds)
    (36/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070199173 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068810729 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114125825 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073567774 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.213792932 seconds)
    (41/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094812488 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.121167009 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087273784 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.116582802 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.190887315 seconds)
    (46/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099224549 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074014346 seconds)
    (48/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088827655 seconds)
    (49/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.092380326 seconds)
    (50/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155991462 seconds)
    (51/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.178393941 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07218565 seconds)
    (53/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.192248379 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094762047 seconds)
    (55/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092846808 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067463138 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.126654375 seconds)
    (58/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098156687 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084960317 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.15587225 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.073696898 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168355036 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190671334 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.146424119 seconds)
    (65/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111177928 seconds)
    (66/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082447972 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18267187 seconds)
    (68/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077066928 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 0.087194315 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096446948 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097775659 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.097672531 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.131535533 seconds)
    (74/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075482736 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072705058 seconds)
    (76/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.132966312 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153819729 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144398767 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089433821 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091045425 seconds)
    (81/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.18463782 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072238435 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094920535 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.145082605 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072971579 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099454434 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112261621 seconds)
    (88/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100245506 seconds)
    (89/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094730602 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.188109455 seconds)
    (91/309) benchmarking ("sort", BigInt, false)...
    done (took 0.227893297 seconds)
    (92/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052034915 seconds)
    (93/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073818966 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096345622 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066458455 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053825747 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.164448518 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118037133 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063889048 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.138002243 seconds)
    (101/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.128663956 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052250621 seconds)
    (103/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093504986 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075063154 seconds)
    (105/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159168642 seconds)
    (106/309) benchmarking ("sort", Bool, false)...
    done (took 0.157174107 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076192875 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066454241 seconds)
    (109/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096842624 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07459792 seconds)
    (111/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094605817 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109042932 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.187068497 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072138898 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051780249 seconds)
    (116/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.113512476 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162557073 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05251097 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071211588 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120320148 seconds)
    (121/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067272162 seconds)
    (122/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094795704 seconds)
    (123/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074527477 seconds)
    (124/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111437163 seconds)
    (125/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.156380367 seconds)
    (126/309) benchmarking ("sort", Int8, false)...
    done (took 0.162794752 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067764154 seconds)
    (128/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.156907766 seconds)
    (129/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067542766 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065786479 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097152935 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068303463 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064934644 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096402193 seconds)
    (135/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099865011 seconds)
    (136/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094762226 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.153019942 seconds)
    (138/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.090046312 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.070450091 seconds)
    (140/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065981691 seconds)
    (141/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096252159 seconds)
    (142/309) benchmarking ("sort", Float32, false)...
    done (took 0.126996414 seconds)
    (143/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.13159856 seconds)
    (144/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067921638 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196192201 seconds)
    (146/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053450581 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073809172 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076533958 seconds)
    (149/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061173461 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097111633 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067609571 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.111802049 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108719367 seconds)
    (154/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092837613 seconds)
    (155/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.136376399 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097876942 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09756063 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.166592319 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064761967 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.159447008 seconds)
    (161/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052837427 seconds)
    (162/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193785374 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114256816 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.103716989 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072424518 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189555243 seconds)
    (167/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091061845 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115659785 seconds)
    (169/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.159004858 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066605942 seconds)
    (171/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072386881 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075144108 seconds)
    (173/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072737809 seconds)
    (174/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052858638 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.072850268 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073979084 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066969933 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097133209 seconds)
    (179/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081184437 seconds)
    (180/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.082541266 seconds)
    (181/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072935712 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051824765 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086844605 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056228564 seconds)
    (185/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052589864 seconds)
    (186/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064363795 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.099764868 seconds)
    (188/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068703649 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14650816 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078357929 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.070511994 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091076384 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086135843 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.126763076 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100282398 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052047373 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090306706 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087127797 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088006083 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087571276 seconds)
    (201/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076099041 seconds)
    (202/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074309836 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156837261 seconds)
    (204/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.271122815 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153434942 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049756168 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.08680232 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088422822 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.098447273 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070317447 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05037548 seconds)
    (212/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.074022894 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06608995 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063387973 seconds)
    (215/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113346993 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053861434 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052344343 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073974401 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07741946 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086129504 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065803424 seconds)
    (222/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05329091 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111382558 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053263968 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.135690285 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050445221 seconds)
    (227/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.188389489 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.1387002 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110614292 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065493643 seconds)
    (231/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.07301023 seconds)
    (232/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052294743 seconds)
    (233/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051307965 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098290396 seconds)
    (235/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068770973 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052044568 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087561054 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072180811 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168783043 seconds)
    (240/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051771425 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052193565 seconds)
    (242/309) benchmarking ("sort", Float64, false)...
    done (took 0.147058494 seconds)
    (243/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069575148 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08676851 seconds)
    (245/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062604784 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066352476 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156597583 seconds)
    (248/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053172223 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065825196 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087471094 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072471505 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126434673 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052063114 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.197843383 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066468159 seconds)
    (256/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053824205 seconds)
    (257/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.074863887 seconds)
    (258/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091960843 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087662001 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074505053 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06650795 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.074109072 seconds)
    (263/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06164639 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065455323 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09098362 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06718758 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.197213896 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087046434 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194624205 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121071096 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054537648 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073909417 seconds)
    (273/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091337715 seconds)
    (274/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052970454 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069290989 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112394372 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065983097 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095057391 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088602961 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085334213 seconds)
    (281/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069246533 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105510868 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.191713736 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064594468 seconds)
    (285/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102071024 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071669739 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092690654 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067183815 seconds)
    (289/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067079287 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097384545 seconds)
    (291/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05427121 seconds)
    (292/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069416935 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167738744 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.112798961 seconds)
    (295/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074345898 seconds)
    (296/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052225398 seconds)
    (297/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085074795 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072332501 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080572983 seconds)
    (300/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140129037 seconds)
    (301/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05383224 seconds)
    (302/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.073944311 seconds)
    (303/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052968534 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071800872 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051166392 seconds)
    (306/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.07440258 seconds)
    (307/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053102987 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051800299 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.081991897 seconds)
  done (took 32.817742103 seconds)
done (took 33.637035609 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.079307896 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111423104 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074063969 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.112885527 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078876394 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097221327 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070933154 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097049007 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079300504 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.100158186 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077178685 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053191719 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093432285 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072700154 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.093276332 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089405909 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097498153 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071219642 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.092143538 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063373996 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072429106 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084436572 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065930846 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054090886 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.098051575 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071241164 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.091112581 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073913179 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064063653 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085038584 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067923172 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070392366 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085295588 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077976574 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091302785 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072518836 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.094571443 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074890174 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065927768 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084841053 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072478425 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064427332 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091790677 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072376098 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.090057063 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07027223 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072691538 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098161871 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089582865 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086946659 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072387925 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.095337899 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075934831 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.06965704 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.088279493 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072996434 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.089875801 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089623559 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.092891599 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067042758 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071791139 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.092779211 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070127655 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.091857373 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072045804 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073935603 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095646686 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069759234 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09371326 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069772211 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063763927 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092919878 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068162558 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084675601 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074293851 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074465802 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.083321203 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.0701549 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070518041 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091076865 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064645392 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085352903 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065863487 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070391128 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086208421 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053769511 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067490802 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089828686 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064232781 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072324733 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09111259 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070605492 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.085776878 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075381896 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064281176 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.090026368 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065072067 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064522943 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.086532847 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068619433 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083892255 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066531284 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073717872 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.086218403 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071031583 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077578411 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.084860799 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07069608 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.083864163 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064685135 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079586971 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.094364832 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064779915 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086671061 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06430151 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071819574 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084582635 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064151861 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064183551 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.085299306 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070728207 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06400461 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087332283 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071980958 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.09843549 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063882299 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068065814 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087296437 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064450438 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069422609 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.085370542 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065033493 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086207768 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062285574 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066740478 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08492709 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071853277 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065978279 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093243009 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06650789 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09356886 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069142792 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070058039 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.089755511 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064148919 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057515433 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08674165 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066357524 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06584952 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.085415121 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066110808 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063878033 seconds)
done (took 12.686620107 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065200293 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.162331806 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.121050532 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09312555 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105079117 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065157866 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.095424316 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099376502 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.087045261 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121554698 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084603808 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.103102214 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11148802 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.084593986 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065551121 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068376691 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.088328047 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086137455 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.119694623 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084078991 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.133414476 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.084878618 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.114117302 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089146163 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107195769 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10060013 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.086374742 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068902256 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067374293 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110528488 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.104255676 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068837937 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065504016 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.117311539 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.112727265 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084109909 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.084678193 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082514733 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.084874172 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064567843 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.108672327 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097087692 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100161667 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079692145 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091155406 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06727316 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.086022872 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082686328 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108693021 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078357695 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107091915 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.1276399 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066769559 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.100316917 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064051329 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.106472578 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079545827 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.088646087 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065465878 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.086681995 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064773291 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068261435 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.10690597 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.109886333 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068570507 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100040176 seconds)
  done (took 6.911693044 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082606535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.112483891 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081596682 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.103174634 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064606818 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065731399 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.085560075 seconds)
  done (took 1.458342677 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066197639 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085913941 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.10850234 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087159791 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.104763236 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084527324 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095876812 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066103302 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.103296793 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067096942 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085379724 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122427655 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066064448 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.093884502 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088505664 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086276148 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.087727509 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.086388942 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068341507 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109360915 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068713565 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.084219273 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.088618301 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065681802 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100549919 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065810738 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133647674 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070101241 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08728599 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069123395 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064490296 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.134088303 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100585825 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076501107 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06533416 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101385442 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08044159 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08483911 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081783343 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.090992041 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080066411 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066254983 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.088139268 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064176588 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069766792 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097350478 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066838304 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.087652982 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068538213 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084302634 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088261576 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079165319 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087325078 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069378613 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067435658 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092436374 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075421948 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.087766222 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086165027 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067320691 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.103821857 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.080936568 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.101685249 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081641957 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089154118 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079460502 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.100733404 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068665458 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067098333 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.090180286 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082413808 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.084322008 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067254982 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076687104 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.088855712 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088147876 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.109324638 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066830309 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.095876024 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066076605 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066423129 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.087367108 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088412985 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090274558 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065768914 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069793995 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089558648 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063974922 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064988234 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.090855492 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064029059 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.0661938 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090904195 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066593845 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089092438 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081904362 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066039105 seconds)
  done (took 8.910513552 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066767273 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067165151 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.089001905 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06690327 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066305554 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08794739 seconds)
  done (took 1.320844474 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094946978 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.089082682 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08049745 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.091379961 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103865566 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101118705 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.080243686 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101648293 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083325544 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099446503 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.080968501 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.101554316 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.085352579 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.093556334 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.079873831 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.092392996 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.080352397 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095607219 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07793921 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093518318 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085786506 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.092675485 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072291663 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10286155 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069185182 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071256844 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095671924 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078359227 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.098925445 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080449339 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.092590266 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069371218 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.091616089 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080941434 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.100843584 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070277921 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091779051 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070417266 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096042832 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069066952 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.101614425 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072227732 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076571327 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.091822136 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101785487 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070519413 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.069884151 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095514643 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.079535688 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.091690373 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070032328 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09206026 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069164521 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.091334271 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070904599 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100814773 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.069974312 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.10138903 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071579345 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070116586 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.089484083 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069157726 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10151315 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069180554 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.099396626 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.069705743 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.090900111 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072215337 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093075759 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071817094 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.069910928 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090121479 seconds)
  done (took 7.007610263 seconds)
done (took 26.472333963 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.637563925 seconds)
  done (took 1.508031501 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.730273762 seconds)
  done (took 1.606157546 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.108395521 seconds)
  done (took 14.992440621 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.584629411 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.722697527 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.777547401 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129756841 seconds)
  done (took 3.096710874 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.858644947 seconds)
  done (took 1.765418314 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.22604436 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.216584444 seconds)
  done (took 1.333695078 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.691445278 seconds)
  done (took 1.587160124 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.25698771 seconds)
  done (took 2.147383362 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.305819585 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174912244 seconds)
  done (took 1.376185334 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.50589792 seconds)
  done (took 1.399617875 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.337682745 seconds)
  done (took 7.238181738 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221256865 seconds)
  done (took 1.131867817 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.261815086 seconds)
  done (took 1.161817092 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.01267316 seconds)
  done (took 3.909078888 seconds)
done (took 45.131489264 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.075540086 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079781793 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101041707 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076990827 seconds)
  done (took 1.227690483 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075925572 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072422605 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.096471932 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071195372 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.097004393 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07187202 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.094439707 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075113226 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070570775 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094296562 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07230526 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.092847998 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074017811 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.095111068 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06879809 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.0738051 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.095996508 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071020009 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.095633513 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071496538 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069164307 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094488617 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075070143 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092125406 seconds)
  done (took 2.864594987 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076543101 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072188333 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095715891 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070671136 seconds)
  done (took 1.216476402 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075609187 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.112719238 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086181034 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075156838 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.112187743 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106009078 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06810437 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068234198 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091517348 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075450433 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.088012064 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09517445 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106851003 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075365232 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.098596146 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064368713 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067003308 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10666359 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07617324 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.09716638 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069529346 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078079405 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.088326529 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088013977 seconds)
  done (took 2.977335734 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075399648 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101559266 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.098082928 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086726275 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.111972423 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064495498 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.096215009 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088758982 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.145355572 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064480173 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.090718126 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065365108 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09385315 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064738969 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076493138 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130928439 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111481335 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.091737668 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09560874 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.088161675 seconds)
  done (took 2.749626478 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072988808 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069318636 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088555234 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068507333 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075407688 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093921721 seconds)
  done (took 1.373267242 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066427598 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065927259 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.087461133 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064658877 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071041029 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.087641673 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065094917 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065480605 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087189543 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065961826 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065528509 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.086569141 seconds)
  done (took 1.783871443 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.373486295 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09031028 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067516894 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.085392309 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069100021 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.086807702 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078928978 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066508758 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.110634345 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065644153 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.08812785 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067596636 seconds)
  done (took 2.158196419 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252070535 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077175411 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317092536 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166998319 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139439631 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153981747 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104072907 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138256787 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194402206 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136273213 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197117315 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220827285 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132725483 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16511961 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114471884 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131458125 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183092024 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218239562 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129727954 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197557605 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203348621 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15467918 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178262423 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12686545 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134246882 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147551703 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072374462 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104013268 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226966595 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15908205 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197632724 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136820031 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09705597 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22667867 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221940157 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193838031 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16027641 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084947694 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156027839 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162936981 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251817452 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113115533 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191060831 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132672684 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10533945 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170006934 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14508673 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146369555 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136435783 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114967143 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171632051 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236247546 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.163299991 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112230509 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133890341 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136739686 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140190444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102607696 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263629014 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19119945 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156806064 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095867711 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097692012 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208102567 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156956497 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140537442 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.151629101 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117246589 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165281166 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209748808 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144968583 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171358297 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178351323 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090035731 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145705771 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193617459 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155278974 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223238679 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15291695 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073919358 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15112311 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128585723 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080970355 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166440301 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099377644 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204703228 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12456455 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138564188 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138500946 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133626414 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110509813 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216334764 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19914974 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104827414 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.089143112 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127237977 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147376814 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173887278 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112303124 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133445013 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145097189 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080510168 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188381265 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076226219 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151897541 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.1038585 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148978208 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160818614 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077607394 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153969302 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128098663 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12747941 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161544741 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216634949 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091175855 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10853747 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199074316 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176931281 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131058337 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173456532 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187309494 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126179191 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128242529 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201503413 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238759626 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090700014 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218589023 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130607455 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082301181 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.109619002 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151091018 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137616978 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148087369 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0835201 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.176550484 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198218821 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100326602 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09580898 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188312212 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082274792 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106614398 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137535377 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126816425 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095323941 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126421988 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133110696 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16586602 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152050645 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132741971 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150201076 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124033788 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222789889 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115307232 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.128390739 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105424956 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095296099 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.162489089 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212655488 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08143913 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22231886 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153453536 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131287612 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146039615 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083578818 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167919309 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104509338 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07137545 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196563614 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136812676 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110456133 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.207781165 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13024067 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154234765 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15044937 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160161518 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157916227 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184261883 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106641605 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113232288 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13940376 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153869742 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099650323 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09553516 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10799733 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129926909 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121215592 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084695847 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169415855 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178708753 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098928191 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14025241 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123606151 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177504554 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102957808 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157496707 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146845887 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120606642 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18398239 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209868573 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163933911 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126003821 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173614815 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096431076 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075220771 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117363763 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154964372 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109346791 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084183664 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143306131 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203175767 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155390638 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164785894 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13749398 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148392041 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184826364 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097370881 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117497721 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202876029 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152464507 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153811281 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088909025 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.121698607 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171660022 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132608547 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239751445 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141834503 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151618433 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204612202 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129510017 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081588745 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132489377 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165169756 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132999913 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205386942 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125760076 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090133843 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137521413 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107221424 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130799763 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155707088 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146962519 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16141686 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142666224 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183597365 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078640217 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144190594 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150813505 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148782461 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.089962509 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146719802 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192523075 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120131775 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143702279 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209913334 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079507057 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.149453814 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233431905 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197530779 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085376482 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140703077 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148041316 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154880307 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143981292 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166629734 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135805439 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185758114 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111553399 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111238145 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112621274 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099035831 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132792618 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122050478 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138637104 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14376403 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120976475 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157463324 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137469007 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137590978 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146828389 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099818899 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117553211 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122493035 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206298607 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1491719 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230544222 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127308074 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.202854713 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197555078 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101611839 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080137963 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106240786 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168607743 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110782585 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161823256 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097020758 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131666243 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154153445 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196541523 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096599713 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094933525 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135894375 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162908128 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138359233 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097974198 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.128938213 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215965105 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130518094 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079822877 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149000093 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12774962 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128621048 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229010135 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063556643 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122467432 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077317416 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105060765 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155146126 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184840896 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108069472 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.150269704 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145803861 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146582912 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157244889 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127601482 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098090833 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139759682 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203483703 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155802635 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090142374 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138487909 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180534381 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187062649 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131218934 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121993632 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226974435 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184737254 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220522204 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114646918 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142555522 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142549395 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110522529 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194150625 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084281235 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221693481 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109428674 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164868147 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130986425 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119803649 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156467429 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.123746437 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089318535 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202556351 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14790136 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123927246 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080860732 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144890328 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149300965 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134088065 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100681044 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166963265 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073257722 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189420143 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199581247 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108325787 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133192397 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097580647 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107942772 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136142613 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12977082 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087135349 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14282877 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226609577 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116316292 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180520133 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194684912 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141238884 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165168273 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126679362 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.660942093 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07825009 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210157023 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1477164 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234182427 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124647925 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146523158 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136376405 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150803202 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173481393 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131288657 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203144082 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160289617 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.146972571 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105651429 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104388247 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136986322 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117241491 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133979963 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142486829 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144417464 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.126119193 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148135702 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155700586 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107977388 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096003713 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214243348 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1454592 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170539061 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194469703 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086052869 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14579024 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194255649 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0808522 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.149128419 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210602553 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135064732 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125232232 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083048754 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132499681 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230597232 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07431744 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217468867 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151150946 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139170626 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140326423 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145889422 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185725998 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134743576 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15456948 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096259874 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165261446 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140924124 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085885101 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104258129 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10755672 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137581574 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126151309 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129899404 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141875589 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183677786 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071500885 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1226315 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12831378 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170464806 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234905385 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116200096 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083268729 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145942801 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136217965 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.139163946 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176249691 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083098511 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109503988 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083718275 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.136904999 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137088463 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140853381 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104817331 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137232882 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225054917 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110245992 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225670859 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123165589 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132317248 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071198974 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106174789 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096655714 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124246477 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135189741 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124768583 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202961745 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123502841 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.115963877 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09318029 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099908057 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083847735 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18224827 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136763945 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149028858 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098333872 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.089398785 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134349832 seconds)
  done (took 70.411772098 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127900759 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.099969582 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.113575457 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.165318056 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140668759 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231541668 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.173399623 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217619121 seconds)
  done (took 2.250792062 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067636801 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.112990122 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099626107 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115171046 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.088948897 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069127543 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.292666618 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110315535 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067204577 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113957249 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.11795086 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091458887 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468443945 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065710017 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093489683 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082276215 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06603013 seconds)
  done (took 3.092820638 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423319169 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611215125 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.441462723 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07356743 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.731547826 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10353248 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.185439877 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.155085366 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.087583121 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.415042677 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72374923 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.141665362 seconds)
  done (took 17.077287784 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073454417 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.067106885 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.105920706 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081068117 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095616908 seconds)
  done (took 1.409891867 seconds)
done (took 111.487946246 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079938742 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.329495142 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.051802545 seconds)
  done (took 1.398620079 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083093563 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083558703 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.106984352 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08061861 seconds)
  done (took 1.346504089 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074774992 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.073955832 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107015514 seconds)
  done (took 1.245426578 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.267117926 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159724386 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086172743 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080579269 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074661208 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.099696137 seconds)
  done (took 1.244952491 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072538909 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073241335 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096327823 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074592087 seconds)
  done (took 1.30034017 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075631845 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051869826 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053473334 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078494084 seconds)
  done (took 1.250433191 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08986059 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.103918654 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080032166 seconds)
  done (took 1.259536746 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10586288 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.110338401 seconds)
  done (took 1.205907249 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085307205 seconds)
  done (took 1.181377197 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094316243 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.143737415 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.160495578 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.139795121 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.169630913 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.14189399 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088784707 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.117656775 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107563346 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090664991 seconds)
  done (took 2.357087495 seconds)
done (took 15.364751869 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080874236 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.486606866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361825118 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121164042 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669949846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357510023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.028226959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123489599 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126004556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094712138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086301905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676904922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026874257 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.44169336 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015883612 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.414648201 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678971828 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070350114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069504248 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09723339 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985617038 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097240929 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069495066 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069759057 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677104585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37322712 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098196564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.41483504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070488311 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096817455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356277885 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095712167 seconds)
  done (took 16.524839528 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072574126 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147408341 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073944017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083659759 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09858065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069811682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098869877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070271075 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155613703 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070295214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115072697 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069721192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1003975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071372385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089599148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097551442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071141567 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070443527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098103697 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07050143 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117087842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06973852 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070284485 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098168325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069591307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106797647 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069270995 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0680912 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094269594 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069674279 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096297253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068170407 seconds)
  done (took 3.894183269 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117186701 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155558456 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073583256 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127877059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112958506 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096332245 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169432225 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092765429 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15395386 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068655091 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110200415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068997472 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129750113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071201336 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117559047 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070881986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071356203 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098327537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070502511 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0987033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089876293 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069743932 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097682477 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070423177 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09763415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084186819 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096949555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071263828 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070079604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098090951 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073362634 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069097565 seconds)
  done (took 4.173665819 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074852489 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076543564 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111886292 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086323791 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098417734 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074350516 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075164872 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099215779 seconds)
  done (took 1.810714772 seconds)
done (took 27.508446955 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081057768 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071301185 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102547694 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08321407 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101502181 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080901365 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069457133 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104053732 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078707696 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074818611 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.105596567 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070170503 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100268776 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070088909 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076656973 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096920551 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082244674 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101224324 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081568025 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081690177 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099745247 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078488356 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10379086 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081969111 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109123007 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082122996 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084427362 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103186643 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07135511 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099509505 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079205767 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086026636 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098842201 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081522994 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097480141 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070252243 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069218331 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097178296 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081986222 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103791926 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072310278 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103720749 seconds)
  done (took 4.765628164 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090798568 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094046487 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11596061 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068061144 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101706761 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067765911 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117810337 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065482138 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061462711 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.118894878 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058165379 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06146807 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.092948914 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056221931 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060489561 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058416157 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.092000248 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058203244 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061791555 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.089326914 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059870477 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055780809 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090015497 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064894912 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057982173 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063995957 seconds)
  done (took 3.092299099 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077193031 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085849663 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117204711 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130644222 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135291231 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079421132 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108165815 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089586173 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116537032 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069047502 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073131939 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126425206 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089983934 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104630804 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07298327 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114419903 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084122427 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071978546 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104470509 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093009989 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114485014 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080384907 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122126276 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082986866 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068843892 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099902945 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073495813 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111917272 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074641828 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078771312 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102320223 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073634785 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098904919 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081690868 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073936066 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.099063295 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092940637 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107331541 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080402972 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070491974 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101887922 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070563183 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118381874 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114519865 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097368675 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077120522 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076757374 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10423652 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069660148 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115952755 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079404732 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069019378 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099728477 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068834538 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09697559 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083561294 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071233201 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099810688 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079127057 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100392255 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082620877 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073478954 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114120922 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070413381 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10463363 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069429525 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070829415 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096187259 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093681273 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071232194 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.140786062 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070599171 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09926199 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079065642 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105094062 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076023901 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069485528 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11381053 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079343617 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098448055 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077617846 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071073521 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096890224 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087108839 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095952669 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069552615 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068533317 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100497326 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070304723 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095641955 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081257432 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067446374 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097133128 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084798299 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093374536 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069112597 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073730094 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099407414 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067097517 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106474816 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074805927 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06905014 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103111747 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067358617 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.096624667 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077591778 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071377963 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092800379 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071860582 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099855127 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068568961 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068667457 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097050025 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068959413 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07672258 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099662815 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071915829 seconds)
  done (took 11.476525237 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194480569 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.189022386 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07149586 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.177417103 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076332238 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.106889768 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177279723 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096042537 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096837702 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069923915 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069902241 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133524242 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.098464913 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.13865137 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105582323 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067296207 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112361055 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.103270247 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.179486337 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174924799 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.123000014 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07626531 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069662351 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.096341049 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069748425 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104607428 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084361155 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102832588 seconds)
  done (took 4.294888384 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083747434 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.132002133 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076000528 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091215395 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122056323 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069689687 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104126969 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071588254 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110447747 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081335169 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097413895 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075612624 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076455405 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108330262 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070633249 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108159533 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080772468 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070547922 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101075947 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074635216 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107455757 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082093786 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074167278 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069976235 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075682473 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097377116 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06625904 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11597536 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069439611 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.12031488 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068603273 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075767632 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.111857695 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070227578 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097914908 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073619733 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072432064 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101319515 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071885478 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068435611 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096922515 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059820323 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069139348 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.110730986 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076052728 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089800385 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075697802 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075310457 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103146882 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067790689 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100573689 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072707267 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072905335 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.107293967 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.0755664 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07477895 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102953608 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068641596 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105370134 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074081915 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065918387 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096374657 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074754414 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068008476 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10634867 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074303266 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0961026 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073459353 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074875097 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104196784 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073475128 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07273752 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096220286 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072098932 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102122224 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074888803 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074121417 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097198088 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069581573 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069957651 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085524635 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070228222 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055270894 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101639037 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068640408 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067947082 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.101024638 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075232587 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111614665 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071276032 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103408664 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070886972 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068608241 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101819642 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066204676 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072258694 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113353712 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112135985 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069970063 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06755349 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113090768 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075144218 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069224927 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086450489 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076785569 seconds)
  done (took 10.041520759 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099331131 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095151928 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100327923 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084945458 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126831919 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095394441 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105871216 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076511372 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071364656 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115887616 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070065052 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106707854 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069977716 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078582726 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12822578 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078296675 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100270476 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079475117 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.0741832 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.139711237 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084746512 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113339097 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082252712 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098721266 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075312581 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082161263 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127709883 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082566279 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109579937 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086808618 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08207466 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.128213338 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087809519 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102857709 seconds)
  done (took 4.38128804 seconds)
done (took 39.157209436 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.185943007 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.391489496 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.177745125 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.042533883 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.192810495 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.190814705 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.193681099 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.181132024 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.284594161 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.182900238 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.420974349 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.811048225 seconds)
done (took 58.38357229 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.3070714 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.320171331 seconds)
    (2/2) benchmarking "String"...
    done (took 1.455244597 seconds)
  done (took 3.906027293 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.582492106 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.095426391 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.435367646 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.18090198 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.176921048 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.481218702 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.722437313 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.009427969 seconds)
  done (took 27.224973097 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.181392395 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.524881624 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.389408712 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.387069516 seconds)
  done (took 17.607879455 seconds)
done (took 58.754785199 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.173233864 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.201322032 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.180280943 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.16586876 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.282726488 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.212588076 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.421096119 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.209851376 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.178687123 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.171857806 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.200098325 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.180169779 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.203098346 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.497042364 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.183812728 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.182397115 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.223655637 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.749041466 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.549605849 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.188987856 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.192850163 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.232784225 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.186523463 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.184920685 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.197548601 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.188820705 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.180501586 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.180688311 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.245440975 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.185110426 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.2615016 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.785317281 seconds)
  done (took 189.501966341 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.182484714 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.290470298 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.37004035 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.220141396 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.843337698 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.383172319 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.351597821 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.899429534 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.193889323 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.201362775 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.54711565 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.181614591 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.592106658 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.144912845 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.203726859 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.290658402 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.506683661 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.54663329 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.202344819 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.492139084 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.183110505 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.514012027 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.454595016 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.455041831 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.190227295 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.198549113 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.214506774 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.19839098 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.371651706 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.460092219 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.201770289 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.225305613 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.719812222 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.040504497 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.207814585 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.183617979 seconds)
  done (took 150.593235354 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.43654449 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.183299402 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.183017198 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183676285 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.211186758 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.183654401 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.672638311 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.679440647 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.685099561 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.361187937 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.241798546 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.425022888 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.183015065 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.274391705 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.194325881 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.18214542 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.19723029 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.211011189 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.181562125 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.183372329 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.682767758 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.197297016 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.472501677 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187677319 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.184002137 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.212260992 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.576744129 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182212545 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212310466 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.494888594 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.223364026 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.181625229 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.475169871 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.223863325 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290944993 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183876361 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21333912 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.184001455 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.449411866 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182369704 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.185310227 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.18800905 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.758668622 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.183979511 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.676626809 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182080111 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.07935408 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.184883002 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185778558 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.359837974 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.720659828 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.184185898 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.183432553 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.187345909 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.18456637 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.184061598 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.212926521 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.1854659 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.388231258 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.28632885 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.186538241 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.188507253 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.213485342 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.185102022 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.185165533 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.288718422 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18573427 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.201380667 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.247490113 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.290764023 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.687986642 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185937566 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276683681 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300816996 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.184209009 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.185590557 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186768545 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.186413637 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.290740295 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.184623021 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.55989477 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190378257 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.187766184 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.245105176 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.278516101 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.18463967 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.48369953 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.187789745 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.186589018 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881380956 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.183855442 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.275829559 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.185573564 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.187329792 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186533074 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.18628745 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.563941786 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.687037271 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.385589693 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.188306137 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.434196835 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.193241286 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.576570369 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.671824295 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.791660644 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.190157059 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293433082 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189445702 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.189158353 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.187581447 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216832544 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.188099391 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.247268711 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.186054948 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.580755046 seconds)
  done (took 341.856828587 seconds)
done (took 684.514701049 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.863787859 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.843647415 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.947213046 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.837357646 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.820565109 seconds)
  done (took 10.442385868 seconds)
done (took 11.572635324 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.36596807 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.36011114 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.241248756 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.364066173 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.213847232 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.379017411 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.338347418 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.205635109 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.284144257 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.257762494 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.285375927 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233641899 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213212163 seconds)
  done (took 17.872302215 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491676134 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.485445098 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251314337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.494242832 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228173134 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.493729357 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.379346539 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.386340464 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.376779865 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.20304869 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202953789 seconds)
  done (took 16.12492653 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.498307498 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.49415158 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253427636 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49942339 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227559515 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519623552 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378357242 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.391509345 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381349722 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228933435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204523768 seconds)
  done (took 16.208264655 seconds)
done (took 51.337041903 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.199521 seconds)
  done (took 2.330349474 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.232484209 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.391291377 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.214377409 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.203527901 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.200827701 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.201954463 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.204377656 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.201028678 seconds)
  done (took 10.98264684 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.198473281 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.199372672 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.196175265 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.199656289 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.196885595 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.200090606 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.197564828 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.200599672 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.196581346 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.201144548 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.197080043 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.19810063 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.199644254 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.196806629 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197023413 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.19913973 seconds)
  done (took 20.307679266 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.199527214 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.197554467 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.197617043 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.198571055 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.19822026 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.198691541 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.198829662 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.196921255 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.198302151 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.196478215 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.197033877 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.197698679 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.197173674 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.196967619 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.198480356 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.198145976 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.197248581 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.197890351 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.202314418 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.199146468 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.200373618 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.198110905 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.199296148 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.198993987 seconds)
  done (took 29.895806315 seconds)
done (took 64.650939688 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.121492711 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.738609497 seconds)
  done (took 8.993980601 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.201141403 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.200590231 seconds)
  done (took 3.540609636 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.200726665 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.20168559 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.201286043 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.20085629 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.202565561 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.200630174 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.200002488 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.201079622 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.202001849 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.201284325 seconds)
  done (took 13.147329058 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.201699104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.201351754 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.198731733 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.20294006 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.201756018 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.198112171 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.20179061 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.201336708 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.201878836 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.198587646 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.201987235 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.200524841 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.201870892 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.199986431 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.202987381 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.200431343 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.200807119 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.199733136 seconds)
  done (took 22.753462984 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.202415344 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.202414894 seconds)
  done (took 3.541371097 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.19971224 seconds)
    (2/7) benchmarking "second"...
    done (took 1.202132476 seconds)
    (3/7) benchmarking "month"...
    done (took 1.201647906 seconds)
    (4/7) benchmarking "year"...
    done (took 1.201719845 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.202224455 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.200126804 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.201562776 seconds)
  done (took 9.54722244 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.206233243 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.38100378 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.458527473 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.783038005 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.205045406 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.207918035 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.078704918 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.206876139 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.21049285 seconds)
  done (took 13.875935411 seconds)
done (took 76.534815438 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.198352817 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.197383295 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.056759647 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.213522459 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.211885547 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.543300294 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.213692315 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.318216147 seconds)
done (took 37.092918778 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.197514057 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.92207462 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.922100343 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.204460843 seconds)
  done (took 11.187618901 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.195430106 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.061303783 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.18855969 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.14858682 seconds)
  done (took 17.734845763 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.789241719 seconds)
    (2/2) benchmarking "read"...
    done (took 1.584517645 seconds)
  done (took 4.513253461 seconds)
done (took 40.772694337 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205021974 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.206290717 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.203460706 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.206253872 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.203669386 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.203787792 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.20673447 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.207661263 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.206254418 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.205785971 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.204065966 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.20669225 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.206867349 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206530951 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204031303 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204049419 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207325641 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.204244356 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203226686 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203898169 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.204855405 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207177616 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.204201234 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.204577574 seconds)
  done (took 30.066956718 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.207756241 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.204259939 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.206480685 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.207751314 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.204612369 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.206715691 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.20682069 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.205023523 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.207612993 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.209851782 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204747193 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.204169928 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.207819449 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.205828249 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207214142 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.207112979 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.207936366 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206080958 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207389562 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.205113965 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.208843751 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204470313 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.206136927 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207513172 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.205583431 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205814739 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.20853562 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.20696915 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207711506 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.206036618 seconds)
  done (took 37.338877846 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.212329454 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.217932915 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.208092953 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.208935743 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.208591165 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.208354139 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.208791934 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.207988098 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.209615 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.208356633 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.209453662 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.209105815 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.208519124 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.209313025 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.210247649 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.209120067 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.209089434 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.210045816 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.209057453 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.20948636 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.20921127 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.208940562 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.209745989 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.209550085 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.211060572 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.209526266 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.209792314 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.209445551 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.209280529 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.210817802 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.209452529 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.210500936 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.210138472 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.209604021 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.211223365 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.210346333 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.214488049 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.218760879 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.211111165 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.210677557 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.210828656 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.209542807 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.2108569 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21137181 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.210182861 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.209712972 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.210285733 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.21029838 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.210529276 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.210813424 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.210651928 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.210969817 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.211432744 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.210374722 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.210890562 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.210175373 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.212020198 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.209703581 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.211861488 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.212796287 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.211115363 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.211502181 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.211695736 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.211898871 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.211383158 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.211450558 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.211773307 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.211828738 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.211731701 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.21288784 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.212010219 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.212253246 seconds)
  done (took 88.307061903 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.212478733 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210134624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.209278876 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210025995 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208723255 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.21197634 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.209931382 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211676202 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2102025 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.21191894 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212151207 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.210060968 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210077657 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213159531 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211882323 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.210260647 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.212297824 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210480577 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.212585192 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212770233 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212444176 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.210161262 seconds)
  done (took 27.790675686 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213513451 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213861642 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.210232187 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.212621512 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.211673334 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.212631408 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.214611097 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.213714822 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212486117 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211040856 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210738505 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214665911 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211475884 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212593809 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212822472 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21430195 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215591138 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.210917764 seconds)
  done (took 22.977127139 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.211562789 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.212403898 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.214379414 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212007925 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.211366508 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21547714 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212556422 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.215796979 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.214673194 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.212210085 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.214996997 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214094624 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.213751413 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211726706 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215257133 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.211558697 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.214930911 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212574939 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214709492 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212733713 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213228104 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216525491 seconds)
  done (took 27.847113021 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214876882 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.215329151 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.211717767 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.212882037 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.213021492 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.214848461 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.216053506 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.215202038 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.215368267 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.216703879 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213673793 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.215250785 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.213529919 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213752473 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.212654882 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213759526 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.214959432 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.214866145 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215544935 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.214386908 seconds)
  done (took 25.436796404 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217411011 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218702855 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.218806413 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217413078 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.218126798 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.218119298 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217443854 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.218034611 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217387911 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218376296 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.218317158 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.218214365 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218202237 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.217840483 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.218408215 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.218767188 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219060694 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.21901185 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218175645 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217702128 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.218821279 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218438326 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.218597887 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219711764 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.21922315 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217813813 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219218928 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.21913556 seconds)
  done (took 35.264742084 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217785259 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219088218 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.215611422 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.215826954 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.215596211 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.215511929 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.216707568 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.216478786 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218257325 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216097569 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.218767361 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.218839076 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218217207 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.21898732 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219219339 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.219667185 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218120416 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.215913676 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216361867 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215442891 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.220453124 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219356472 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.218383456 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216026217 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217059077 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.218564228 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216689235 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217358611 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219888734 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216351669 seconds)
  done (took 37.677892054 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.237629766 seconds)
    (2/2) benchmarking "in"...
    done (took 1.237846646 seconds)
  done (took 3.627941232 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.216436278 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218597559 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.218504183 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216918955 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216944155 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21964171 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218043852 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215488282 seconds)
  done (took 10.893316954 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.219154222 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.220330096 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.219518157 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.219544219 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.219223003 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.220020789 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226685159 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.236248278 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.221022044 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.222262816 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.226600327 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.228667125 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.222884353 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22017684 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.22072542 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222937413 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.22115951 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.221927377 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.221955725 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.220722363 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.222129329 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22353335 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223802371 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.218437441 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.222698601 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.231536069 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.225845864 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.22124047 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222537219 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.22748333 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.22310002 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219692002 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.222365414 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.222536129 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.221870789 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.223659885 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.231012621 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238162434 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.22731166 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222845788 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222701365 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.21890141 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.224813365 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.223125016 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223345103 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.223671819 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.222425195 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.219367074 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.222400948 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.225415478 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.228041145 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221942505 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.221086431 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226039642 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224770419 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230289934 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.238672846 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.22447679 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.232453446 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.232890134 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.236347179 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.231888704 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225571333 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.223138659 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232517555 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.247530112 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231474602 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.236986114 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.22097175 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.222679406 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.23070537 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236555174 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.234295145 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.224625419 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225043623 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.223746368 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223990037 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224107096 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232073979 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.242984257 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.225277009 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224125824 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233302558 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248869873 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.223255216 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.224403796 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.225261507 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.225455519 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.2260317 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237317343 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.241742533 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.225283306 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.223725694 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.22530796 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.22597817 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226328922 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.224260966 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225678865 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.222875841 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.226085124 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225081707 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.228188926 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.234305202 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22713666 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226330146 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.232810914 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.225600261 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224467518 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.232575679 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.226331022 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225281916 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.225917381 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.232713483 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.222076934 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229302375 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.235391712 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.227205637 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.227736221 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.228413361 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.226173473 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236204347 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.255067669 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.229528432 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.226986875 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.233981237 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.239859464 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227972751 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.229593409 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.228280449 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.224897891 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.224506723 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.228755301 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.226708177 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.228765787 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228083648 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227600545 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.224727808 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228365897 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.227653887 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.229354103 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.228518081 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.228389714 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.229404748 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.229548317 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.228268737 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.229371227 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.234834245 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.228875911 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.229523083 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.228675941 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.225815558 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227397781 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.228999665 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.228836813 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.228328789 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228015716 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.228470701 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.22912531 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227616342 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.228333293 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228471295 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.229726778 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232360673 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.230388463 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.233324507 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228897937 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.226189501 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.228411425 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.229005969 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.229786974 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.2295717 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.227894603 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.231856495 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.238077843 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.229331182 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.229595238 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.231084633 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230550195 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230602981 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230659418 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.233008819 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238353895 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.230819823 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.23591002 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.230908321 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230541307 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.229543647 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.229960542 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23052748 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22990562 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.233219076 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.238219646 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241929772 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240073145 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.232680745 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.234644204 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.233019513 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.235909052 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.235118546 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.231356882 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.230190251 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.231803997 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22993309 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231441038 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.232415654 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.231162735 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.229772938 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.231376458 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.230175918 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.231933898 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230658899 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.231719161 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233219899 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.2289391 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230929584 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232210694 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.231335696 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.229094723 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.231366844 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.230716774 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.23303679 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.234062489 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.238769177 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.23023693 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234433924 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234036059 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.232581929 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.231074606 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.232024648 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234621313 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.232553793 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237917325 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.248518189 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.23254109 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241116094 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.247469377 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.231648316 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.236413128 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.232138164 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.230857665 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.237175463 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.241469109 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.23294198 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.233175327 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.233776846 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233206723 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233128803 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.239142084 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.23156853 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.232610103 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.232977136 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.234662821 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.230524628 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.234925836 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.234341705 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.234442571 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235331233 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234054981 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.234382628 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234734676 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.234956775 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.234707946 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.234290637 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238318606 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.242672824 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.238479461 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.234848069 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.236107659 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.235990036 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.23731048 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.234679309 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.235486814 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.23472775 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247013684 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.243839798 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242258898 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.236932465 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.23432007 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240886725 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.237151058 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.239761978 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235598526 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236764662 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.235185289 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.234945862 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.232869776 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.236488321 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.235721298 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237643025 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.237873253 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.240282343 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.236868173 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.235306035 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.236937199 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.236563314 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.235649923 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.236243631 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.236258302 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.237948763 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2381736 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.236188544 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.237957624 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242513317 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252352243 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.238120333 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.236416092 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.236890417 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.235031811 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.236820219 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.237936444 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.240607989 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.246219368 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.239066557 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.247139341 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.238194013 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246627496 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.237883175 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.24086572 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.246904975 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.234494001 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.236902475 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.238350694 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.237771338 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24384517 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.254695956 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.239271681 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.242837326 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238270025 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.239199913 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.23782017 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.238579582 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238156378 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.23863167 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247156075 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.255932696 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.241979526 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241657935 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.235312932 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.238746299 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.238773641 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.237799376 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241323852 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.239847328 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.239128213 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.238984877 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.238471363 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.238198653 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.238933258 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.238903006 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.237122095 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.239264403 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246291167 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.256463654 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243375479 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.23963114 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.247011769 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240345294 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246507444 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.257198237 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.238833715 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.240680544 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.240215919 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.240944811 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.239929886 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.240752726 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.240415298 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.242192953 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.243900755 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.240732996 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.241929485 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.241316359 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.242053418 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.240688938 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250381388 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26651336 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.242594882 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244239125 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.238230383 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.242425028 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.246276108 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.241214856 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.240267375 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.243411047 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253346749 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249305903 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.240554735 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.2416193 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241772243 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240859498 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.241227723 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.242064279 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.242264122 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.241286059 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.242266417 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.242796086 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245194845 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.241946523 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.242682826 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242645901 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.243184544 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.252146733 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.242288656 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.244003712 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243173397 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24179025 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.24287544 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.243433873 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.244042156 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241925856 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241995983 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.243039736 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25008344 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.24990786 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.245041312 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.241289786 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.243465143 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.244293186 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.243031492 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242285735 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.242850323 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.244002876 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.243323312 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.242029053 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.243225879 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.240495093 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.242956362 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.243695614 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244350621 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245564769 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.250876087 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24352293 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.240894645 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.243294826 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242528009 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.244198728 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.24346429 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.252084874 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24788327 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.255108231 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.25461489 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.248344331 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.242832828 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247566979 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.251969657 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.244260946 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.245071642 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.244367935 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.244829502 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.24593375 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.247853827 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245289828 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.251243623 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.244611767 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.243998887 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252975909 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.261854341 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244844084 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.246435104 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.248587731 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.243855212 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.24264056 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.24493927 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.24431233 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252391427 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.264544029 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247075208 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246665624 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.244579507 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.24758852 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251120503 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245610725 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.246268127 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.242552513 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.246463562 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246744232 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246449046 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.243621716 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.246080741 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.245743535 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.24957471 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.254934707 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.243353147 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248625643 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.245739219 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.247176842 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247452763 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246180904 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.244625004 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.245450755 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.246771455 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246446241 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.246455352 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.249028245 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.246161799 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.247717235 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.247458485 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248484478 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250125821 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.257816377 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.254886938 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.243817342 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.247088019 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.247777335 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.249397868 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246941241 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.247774181 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247754301 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.249650245 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.246646427 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247429446 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.247354031 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.250698022 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264468462 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.263891527 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246935325 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.247792574 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251519447 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.249012529 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.246669004 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.248413878 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.249994784 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.251695959 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.257841925 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.249453572 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255879414 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264323537 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.251054675 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.2530726 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.253304877 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.257728596 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.252233289 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250060725 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.249388205 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.253516738 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.267264472 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250245528 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259265175 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281392022 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.267085168 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.250458776 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.250097384 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248731719 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.249373721 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.251349186 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.251538725 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.249584516 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249486422 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.249628012 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.251441338 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255663006 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.250471967 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.248523222 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.250844809 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.250160788 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.252012617 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.245947467 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.250259493 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.2493313 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.250538425 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.250331465 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.251384606 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.251419937 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262914173 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.262225935 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.250432653 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25109452 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.247894801 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.25430518 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.254147331 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263883016 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.260891157 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.252559255 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.251297586 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.251950925 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252234553 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.249658297 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.251832211 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.250653413 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250092933 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.248689472 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.26337032 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263075355 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.256438101 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.25186043 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252629256 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.251697055 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253907922 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253205886 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252606524 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.252755552 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.253351875 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256212408 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.251576399 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.251923115 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.255430214 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.260830528 seconds)
  done (took 739.44722889 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.250808591 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250758357 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250154831 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25147386 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249469921 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250268387 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250730253 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250297187 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.251439409 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249793353 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.249755842 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252359918 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250779768 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25039197 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251466376 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250213769 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250911119 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250801822 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25002029 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251114508 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249609267 seconds)
  done (took 27.447432011 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.253357011 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.250730554 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.250444483 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253379937 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251214867 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253299534 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.251712849 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253854285 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253908031 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252705566 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253984091 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253509298 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.252422821 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.250828545 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25185637 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255234036 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25339105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251879179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.254623842 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251922065 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253947227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.251819643 seconds)
  done (took 28.745979187 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.255076397 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.257112659 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.255975965 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.254268791 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.254723802 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.252748701 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.255658719 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.254535611 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.254505317 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.255361964 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.254785459 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.256823967 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.262969104 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.261088884 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.256836071 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.254817543 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.398468188 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.2568554 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.25678902 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.256443432 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.252831164 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.261717984 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.253125996 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.252761494 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.255264694 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.255802929 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.255990587 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.256231828 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.256857573 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.257724071 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.261254629 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.256385755 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.255646533 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.258650989 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.254908359 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.257499959 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.260725713 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.259268315 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.254418865 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.256286267 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.266264777 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.279649368 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.25678896 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.262792995 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.257409234 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.257722039 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.260934791 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.265488972 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.255721526 seconds)
  done (took 62.949773331 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.257434028 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.257224215 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.254821658 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.258235318 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.257296005 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.256985021 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.257839567 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.257317632 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.254057367 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.25451899 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.258078359 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.254970923 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255377419 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.257752116 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.25880248 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.254981648 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.255119268 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255910073 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.255647669 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.254764052 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.254969151 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.257466614 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.25924593 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.255727596 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.257383022 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255206953 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255371373 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.25832524 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.255439918 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.256624062 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.258235247 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.258698926 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.259084304 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.256672973 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.256744646 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.258988139 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.258221128 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.256229184 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.25939429 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.256502604 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.259220368 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259396361 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.259146835 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.259735205 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.255610421 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.256954605 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.256346994 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.256401674 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.257322934 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.259737507 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.25895921 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.257792735 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.259935346 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.256208819 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.259132708 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.258339562 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.257907556 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.257598355 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.259786821 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.257431813 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.258061247 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.259093475 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.25790976 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.2601272 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.260445283 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.257377252 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.258528542 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.260435338 seconds)
  done (took 86.698121102 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261345316 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.25948745 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26082132 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261028556 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260344071 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.261770663 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261015431 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.26126014 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.261373605 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.261541423 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262289399 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260035289 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.261789948 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.261289159 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.261306816 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.261345263 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261195915 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261212612 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263336468 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262055395 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.262285538 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.261535782 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.262540737 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262141078 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262454817 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262961249 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26283661 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.263011839 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262831847 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.261819656 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262405736 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.262642848 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.261939517 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.263636352 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.263317618 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.262363575 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.26321418 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261867953 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.263924675 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.262510932 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263465275 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263319651 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263158804 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.262934132 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263425717 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.263788218 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26268343 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.262981871 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263044038 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264659497 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.262769299 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262772575 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264113343 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263624155 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264130096 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.263520862 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263250367 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26385377 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264272043 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263112071 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.264307865 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.263159353 seconds)
  done (took 79.468372342 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263241252 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263805823 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.262081015 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.261601495 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.264036684 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261847843 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.263460948 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.264479479 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26300397 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.264061421 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265453421 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261703535 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261769386 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264974264 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261308743 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262473548 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261945294 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.262072551 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264688034 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.262581567 seconds)
  done (took 26.456968614 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.263638957 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.265524748 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.262763739 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.263312037 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.264623774 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.262222438 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.264779229 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265941939 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262627458 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265668268 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26624006 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.265807375 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262805148 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.264012001 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.267583819 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.263777636 seconds)
  done (took 21.428517732 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.263189909 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.266085242 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.266452038 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.265983329 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.263600841 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.262755575 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.267006618 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.26383581 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.262922826 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.266394772 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.266533488 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.266329908 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.266212885 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.2667423 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.263760029 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.267360729 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.263889679 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.26389631 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.267999178 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.267449605 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.265023448 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.264622867 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.267726336 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.267581945 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.265240435 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.265296216 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.264631505 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.265651615 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.264221928 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.267386642 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.26365345 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.266533812 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.26503037 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.264112944 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.267619526 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.264704935 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.26718621 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.26761974 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.26888374 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267385287 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.267421881 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.265080738 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.268224101 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.269023853 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.266339272 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.267618516 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.265622599 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.267060229 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.265986684 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.265868725 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.268879492 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.269987605 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.268321734 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.269989984 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.268589519 seconds)
  done (took 70.841067785 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268796637 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268837419 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.265021825 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.269107489 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271047576 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.266495979 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.269830745 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.267033889 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268457835 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.268983909 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267806473 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269021153 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266932174 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270917973 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268981404 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270331089 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.267746732 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268022874 seconds)
  done (took 24.03295181 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.267696381 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267551225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.27108687 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.268281926 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.268239162 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27033095 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266874261 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.27057549 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270701328 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.268172762 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268368937 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.270652704 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27052623 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.271290117 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269077101 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267653842 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.269922347 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271769361 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268777089 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268168652 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270567752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270553124 seconds)
  done (took 29.126676527 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.269587195 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.270697564 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.286211126 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.312841175 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.303286995 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.269629297 seconds)
  done (took 8.913313206 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269318108 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272204053 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269017276 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271738574 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270590881 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268698051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269069831 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268819954 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2722656 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269824182 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267612133 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27091189 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271230701 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268691374 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271520185 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272123795 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268941503 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269474927 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270526674 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271958504 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269611239 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27340784 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268930524 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268906921 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270290055 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269820804 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272994303 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269933034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271596878 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273040439 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272321867 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269588913 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273003213 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269428022 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273467678 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272969046 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271494049 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273269802 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273809844 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269841273 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273425035 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273716914 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27242451 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271408541 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273855174 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270108591 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271510745 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271045112 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269783565 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273824348 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274634191 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271342327 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273719751 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273998157 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27368834 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273055956 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271630454 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271869782 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274159272 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271632807 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272102507 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273107189 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272250225 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273064487 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274088939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271310963 seconds)
  done (took 85.123239792 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271401063 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271421418 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27081899 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271099629 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27200441 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271673494 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272196414 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271611798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27246519 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272684392 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274610949 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272356749 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271967792 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272289854 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272124789 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272467702 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273069577 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271979905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27379433 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275216315 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272867991 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272364336 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272965045 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273344755 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273734148 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275954609 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27363694 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272951174 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272804676 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273766271 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272859812 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273038954 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273934297 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27341224 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274015666 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274019314 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273588704 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273369121 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274589207 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276681855 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273206368 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27734798 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273869237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274192929 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274225169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27414102 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275621878 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2739213 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27443797 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274492226 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275905365 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275647904 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275889205 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274722552 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2742251 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275290481 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274730396 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275557299 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274700428 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278141812 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275154445 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275077891 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277115293 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274674082 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274596939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275175316 seconds)
  done (took 85.280328848 seconds)
done (took 1724.327888463 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.268453904 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.340343388 seconds)
  done (took 13.816642359 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.437772316 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.392283821 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.276818125 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.308778285 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.273872533 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.299343402 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.295754088 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.273272111 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.27549208 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.2767826 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.277348922 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463328754 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.273960047 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.274652901 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.278424911 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.369443436 seconds)
  done (took 42.264781694 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.30435919 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.282078893 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.389414044 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.29998179 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.303948572 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.453100302 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.332731546 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.282099091 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.444643274 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.322262276 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.764548257 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.302419773 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.282847744 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.33125692 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.296171402 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.454057706 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.519817003 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.769607281 seconds)
  done (took 29.344603683 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.708376445 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.278964883 seconds)
  done (took 9.198667295 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.275276461 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.321510227 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.317475254 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.299674086 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.295197465 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.277141311 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.275836826 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.294889588 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.350218563 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.28151735 seconds)
  done (took 64.205716611 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.299392856 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.28296515 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.283012762 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.281099847 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.275029096 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.284658618 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.282203319 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.277460573 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.720886787 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.401812789 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.296587224 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.289303277 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.283153727 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.283329116 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.279626194 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.318008251 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.416497908 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.28001469 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.27958573 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.28986557 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.284071764 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.394856482 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.321621776 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.280475275 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.402479435 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.733535655 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.28670898 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.290096568 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.40541878 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.281787113 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.283550562 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.283022323 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.285640029 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.859554385 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.825749565 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.28696265 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.304457654 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.291976117 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.280418338 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.396775235 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.284407261 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.290069299 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.276791095 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.809004709 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.442164568 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.392804715 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.521887859 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.285474449 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.285490444 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.346292976 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.284759783 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.285713588 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.312752243 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.022030616 seconds)
  done (took 108.237965841 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.322158439 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.765301775 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44716599 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.299675177 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.133623549 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.065427403 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.278057582 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.55444234 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.292060499 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278292691 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.558250525 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.777155801 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.284850061 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.313571304 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.724231539 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.286380241 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.280109347 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.174950146 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.278224515 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.277757239 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.691313157 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296233074 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.2735428 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.305831339 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.318114077 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.742810632 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.704384737 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.805933454 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.280511037 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.27751807 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.741903006 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.278305961 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.293587254 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.277194703 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.551543501 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.635846287 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.611577973 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.281849043 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.286510173 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.280022681 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.305157715 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.738646055 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.624027738 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.280227395 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.285735239 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.744498202 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.2810278 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.28440524 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.283047306 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.488416114 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.048988724 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.282351874 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.715744542 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.281397787 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.618544141 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.334098532 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.32096046 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770666212 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.280394721 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.468531383 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.280557872 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.279510969 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.282300667 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.283235015 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.277783878 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.626710862 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.612619322 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.283413201 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.622231216 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.732896718 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.282259087 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.806218272 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.2039443 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.289461206 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.322087303 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.280837356 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.984815539 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76666916 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.318988001 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.278035429 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.604624589 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.279112604 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.557955864 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.292054801 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.279875202 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.700396382 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.304635826 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.316875254 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.28256471 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.279518254 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.049732699 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.28431187 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.544054743 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.346764606 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.281056827 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.281483321 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.3048585 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.279902024 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.280376987 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.28520859 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.794389168 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.290972964 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.415445381 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30099563 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28307417 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.283267164 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.281636246 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.283014464 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505934109 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.816532045 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.286836907 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.282672568 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.279624898 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.290409788 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.587741796 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.286235152 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.586723651 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.283669641 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.280354157 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.279026485 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.114940318 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.314229071 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281216649 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.282542053 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.136084848 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.491739402 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.30192939 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.280587247 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.28330809 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298276354 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.632448434 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280850304 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.337252023 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.284425269 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977356609 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.292389376 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.304612257 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.699100351 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.286853857 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.206525308 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.296963527 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.283625468 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588441142 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.557717093 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.548034922 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.2821582 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.297159243 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.97083565 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.287392677 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.430065024 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.303394563 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.287190413 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490450077 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.528617554 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.285606424 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.837660158 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.285574972 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.503380129 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.285733911 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597603256 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.769605733 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.284546818 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.285786201 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.987663753 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.941214159 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.074087831 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.287220997 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.563646318 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.276908538 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.743006757 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.286449803 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.287565707 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.85967321 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.289090157 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.291660895 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.286346097 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.286606123 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.346498757 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46184316 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.013357509 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.28543322 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749898098 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.33313347 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294826336 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.293646211 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.289053376 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.638798514 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.33888968 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.29182675 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.334630767 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.286274141 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.293310441 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763989331 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.231477517 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.288179096 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.441178819 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.911855008 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.28877474 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.286367901 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.987640516 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.527153266 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.836115539 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.319591284 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.594133289 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.295459181 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.327182822 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.076532148 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.356822715 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.756522149 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290866108 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.289341755 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885389483 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.289177823 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.344067192 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.285294216 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.288365207 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816718826 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.288881754 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.28895521 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.617235282 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.28510385 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543484346 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.29077579 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.317577583 seconds)
  done (took 1100.832137453 seconds)
done (took 1369.109841745 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.288649355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.290025744 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.276609778 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.288868173 seconds)
  done (took 26.368956513 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.299020861 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.296352536 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.297498956 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.294243302 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.299103377 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.297206927 seconds)
  done (took 9.01083761 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.361643265 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.290186029 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.290635818 seconds)
  done (took 19.170354001 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.506762808 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.526222967 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.646764052 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.388513007 seconds)
  done (took 10.295802699 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.297331088 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.297769255 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.298164187 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.300321807 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.30078228 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.301572446 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.300718013 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.300007579 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.300734509 seconds)
  done (took 12.923460057 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.12424191 seconds)
done (took 84.118266126 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.779746185 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.292700503 seconds)
    (3/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.725107303 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.409401428 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.276243381 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.551449052 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.345713342 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.31809117 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.421044255 seconds)
    (10/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.479050436 seconds)
    (11/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.157740771 seconds)
    (12/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.607499524 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.423027177 seconds)
    (14/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.315191752 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.644307611 seconds)
    (16/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.292428445 seconds)
    (17/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.822638898 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.394886851 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.608197826 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.303983816 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.243952404 seconds)
    (22/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.422304945 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.55177505 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.1742567 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.342767556 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.707556679 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.8759717 seconds)
    (28/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.283435424 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.323778987 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.354751358 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.78038077 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.663881367 seconds)
    (33/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.57941984 seconds)
    (34/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.41098008 seconds)
    (35/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.309389504 seconds)
    (36/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.355865554 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.861183448 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.728383056 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.40296099 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.293817469 seconds)
    (41/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.554615799 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.488516092 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.673694543 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.21272416 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.609780217 seconds)
    (46/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.374228625 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.376257943 seconds)
    (48/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.351102463 seconds)
    (49/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.007478766 seconds)
    (50/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.432152688 seconds)
    (51/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.858832534 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.041737279 seconds)
    (53/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.057764518 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.185648342 seconds)
    (55/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.132576023 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.295323024 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.512520458 seconds)
    (58/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.507092811 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.415840558 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.362955751 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.279760565 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.304645103 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.291217788 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.31269768 seconds)
    (65/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.312109197 seconds)
    (66/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.640440495 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.130980317 seconds)
    (68/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.305473654 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 5.491845878 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.919795188 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.314473172 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.674476883 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.172303728 seconds)
    (74/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.354495343 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.32251443 seconds)
    (76/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.586340248 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.5126243 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.318034922 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.32921226 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.26325506 seconds)
    (81/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.419014408 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.396161128 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.321263459 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.404198502 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.668722226 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.34930121 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.412216387 seconds)
    (88/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.889718317 seconds)
    (89/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.512000272 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.281990369 seconds)
    (91/309) benchmarking ("sort", BigInt, false)...
    done (took 6.297749332 seconds)
    (92/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.082476196 seconds)
    (93/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.324153269 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.309560212 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.108078191 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.297220557 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.29764671 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.356095156 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.352674803 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.620693496 seconds)
    (101/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.663094292 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.676904441 seconds)
    (103/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.380065805 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.378840137 seconds)
    (105/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.58025984 seconds)
    (106/309) benchmarking ("sort", Bool, false)...
    done (took 1.812516432 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.320521246 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.230203708 seconds)
    (109/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.322954162 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.308032948 seconds)
    (111/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.553143037 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.043509003 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.11830434 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.066803614 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.039896025 seconds)
    (116/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.548233867 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.29712153 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.702203449 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.762111404 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.310101356 seconds)
    (121/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.427269703 seconds)
    (122/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.322876272 seconds)
    (123/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.400248823 seconds)
    (124/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.324064573 seconds)
    (125/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.608684348 seconds)
    (126/309) benchmarking ("sort", Int8, false)...
    done (took 4.318043831 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.306178413 seconds)
    (128/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.284713588 seconds)
    (129/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.883395496 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.653639391 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.33647587 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.297796867 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.089120951 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.324830901 seconds)
    (135/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.893377445 seconds)
    (136/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.324445068 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.156356885 seconds)
    (138/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.299001967 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.916296955 seconds)
    (140/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.660201726 seconds)
    (141/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.317815253 seconds)
    (142/309) benchmarking ("sort", Float32, false)...
    done (took 5.298318315 seconds)
    (143/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.613202765 seconds)
    (144/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.384209172 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.711937948 seconds)
    (146/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.725021807 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.692653725 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.29907336 seconds)
    (149/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.665767761 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.301927005 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.309684003 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.146389808 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.295349467 seconds)
    (154/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.386364864 seconds)
    (155/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.864224964 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.66531896 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.933984171 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.406056951 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.709424749 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.624990613 seconds)
    (161/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.342061825 seconds)
    (162/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.294284813 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.346800958 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.373743534 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.327682925 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.395220094 seconds)
    (167/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.379901236 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.297800022 seconds)
    (169/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.645392334 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.71991488 seconds)
    (171/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.341678645 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.941037078 seconds)
    (173/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.328958044 seconds)
    (174/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.135545482 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.547638359 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.329059442 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.301002082 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.372533933 seconds)
    (179/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.425802196 seconds)
    (180/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.589281587 seconds)
    (181/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.500086213 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.586596402 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.19905386 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.287210734 seconds)
    (185/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.177567851 seconds)
    (186/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.358197681 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.311058507 seconds)
    (188/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.466881598 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.329628977 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.522168677 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.413422777 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.795059221 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.427694624 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.376555678 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.007857745 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.884004356 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.634047103 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.99354692 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.758330261 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.178229244 seconds)
    (201/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.945408866 seconds)
    (202/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.524013063 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.300822117 seconds)
    (204/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.398079162 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.425609395 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.867250642 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.302405837 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.17516121 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.403814916 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.323113803 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.158082119 seconds)
    (212/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.672320536 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.109210701 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.620661305 seconds)
    (215/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.307019883 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.176852102 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.302449369 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.502187366 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.454905725 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.947924714 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.339151375 seconds)
    (222/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.898349443 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.36707748 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.299897395 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.299056929 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.951497616 seconds)
    (227/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.854353974 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.321062584 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.98522836 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.302665232 seconds)
    (231/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.491808856 seconds)
    (232/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.29018317 seconds)
    (233/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.88358995 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.312330093 seconds)
    (235/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.412249709 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.533789526 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.308033608 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.057685434 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.304877393 seconds)
    (240/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.465659113 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.649268114 seconds)
    (242/309) benchmarking ("sort", Float64, false)...
    done (took 5.642789484 seconds)
    (243/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.427697688 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.515257301 seconds)
    (245/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.619771341 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.894834917 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.306827665 seconds)
    (248/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.695022152 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.517032806 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.772066145 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.330327217 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.376345277 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.153718324 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.304181334 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.156851764 seconds)
    (256/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.313009332 seconds)
    (257/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.151858412 seconds)
    (258/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.405690798 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.931368829 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.684303942 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.315944003 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.618460931 seconds)
    (263/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.685080763 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.249146713 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.324325474 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.713282102 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.322480245 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.846802523 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.304999077 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.346835999 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.293180102 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.331992624 seconds)
    (273/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.365139484 seconds)
    (274/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.294731088 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.392353436 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.788274563 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.081725629 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.388395428 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.691635101 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.40544616 seconds)
    (281/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.368651541 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.67595539 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.870828017 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.468929148 seconds)
    (285/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.273388664 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.333711042 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.322040031 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.360264396 seconds)
    (289/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.30630476 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.043712189 seconds)
    (291/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.928564952 seconds)
    (292/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.435245086 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.305742508 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.659515288 seconds)
    (295/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.316237305 seconds)
    (296/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.298373917 seconds)
    (297/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.805249694 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.363912442 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.676090315 seconds)
    (300/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.307549221 seconds)
    (301/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.882778336 seconds)
    (302/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.91745748 seconds)
    (303/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.927976797 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.330655147 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.211037984 seconds)
    (306/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.497512964 seconds)
    (307/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.838141456 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.724981539 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.768762948 seconds)
  done (took 912.438115867 seconds)
done (took 913.6673373 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.341760749 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334175019 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.318183294 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.340580001 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.429763085 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.351224751 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.330305253 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.321167318 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.36610678 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.368623724 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.317414648 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.348265674 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.320513636 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.318771527 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.32029003 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.332786451 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.299586438 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.315238236 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.33475272 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.328399861 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.334601487 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.318490897 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.369771216 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.348016679 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.323821878 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.321789835 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.322498883 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.338032674 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.430915662 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.321838767 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.325385979 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.330496067 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.298416168 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.316467055 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.31474323 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.337349973 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.331188437 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.32904074 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.325664902 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.350131012 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.689138451 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.317048488 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.320526273 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.320566725 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.321911284 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.324609996 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.321954007 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.32747667 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.334097089 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.334120299 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.682374498 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.333073706 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.321326887 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.32281636 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.332829182 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.319625898 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.323868562 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336117632 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.340663392 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.335834602 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.294548127 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.326313151 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.323202512 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.336666506 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.328409764 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.725447194 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.314521692 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.327645978 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.697116582 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.325929356 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.725837949 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.326824325 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.323757233 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.33549703 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.353755267 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.306940082 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.31628998 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.321049711 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.329135924 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.319004555 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.333164324 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334974506 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.326950437 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.323199198 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.337008881 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.355543593 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.33432157 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.322908611 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.331247656 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.342170217 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.329279367 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.332909345 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.327435485 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.318089293 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.332846183 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.326605289 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.32583893 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.325744666 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.327875638 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.334803608 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.698791659 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.337917346 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.319615823 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.320060604 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.324047388 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.337671196 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.698714906 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.323261546 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.347066441 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.372815256 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.325148369 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.300480632 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.32336368 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338773321 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.333435506 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.327079672 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.320854955 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.301902549 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.695438628 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.336744848 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.326021512 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.32277718 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339156883 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.326769148 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.321614184 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.3186693 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.324091787 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.33830016 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.44651981 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.335975376 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.356697593 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.323066031 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.328669728 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.357652663 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340862796 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.355825276 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.328376608 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341313766 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.339548577 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.322338058 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.335695292 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.336428391 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.327138557 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.331192827 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.320985427 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.35594693 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338392955 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338291907 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.346946291 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.446893806 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.324001119 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.343903874 seconds)
done (took 222.843816437 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.392973957 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.321971994 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.416270928 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.324373434 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.428173637 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.42329334 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.321690198 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.322172479 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.321188884 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.699873676 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.321860227 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.322851983 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.322044413 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.320803666 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.412995207 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.323081337 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.320087363 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.664267557 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.324793043 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.40641943 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.322780129 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.320737206 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.324028121 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.706279993 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.320342024 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.318708495 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.395398825 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.32434657 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.670355778 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.316338877 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.318761237 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.672276424 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.413027315 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.341228936 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.335389742 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330968116 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.425155409 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.343701895 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.406283134 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.414493803 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.416843065 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.363380825 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.324079891 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.324938141 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.326652933 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.326067307 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.323334001 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.354440362 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.32198459 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.323643378 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.666275693 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.335466698 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.325248569 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.323833073 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.32524501 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.355951897 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.323436268 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.327235164 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.430668842 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.327360075 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.388368922 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.709146426 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.704812918 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.327718498 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.327228375 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.325404515 seconds)
  done (took 147.914841795 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.392359731 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.400394797 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.442175206 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.329343355 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.377077116 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.446087125 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.327694926 seconds)
  done (took 10.970437206 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.332882725 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.327709032 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377602787 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.376723074 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.32688525 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.473873556 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327429565 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.33801891 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.32546808 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.380998342 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.330588128 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.327651148 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.334509183 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.328706185 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.3761704 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.3396001 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.440800718 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.329377108 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.32946736 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.480057352 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327181914 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.335142846 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.382726498 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.340460317 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.331567816 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.335161541 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.893973444 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329184642 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.326120792 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.32969986 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326536609 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.36659873 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.329466664 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.327857162 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325226986 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.445281428 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.331272125 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327287477 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.329434478 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.330998943 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.328888638 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.330881042 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.33020216 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.327556374 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.329287279 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.35452565 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.330930749 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.330715133 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.329980307 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330834949 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.381999522 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.331592601 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.328403947 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.326521583 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.385961253 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337691124 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.331932506 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.32864111 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329459365 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328527581 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.481478504 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378240247 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.329899737 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.380208874 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331368351 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331806217 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.330934145 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.331480614 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384493167 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.329380049 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.377992442 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.32781631 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.486629649 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.354281694 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.332093472 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.333843241 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.332998546 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.330472254 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.329347744 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.336403373 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.328413367 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.332908457 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.337972219 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328808927 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329661116 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.433503815 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.440650827 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.329919245 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.344161035 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.338110899 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.330158957 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.385459396 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.331608491 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.3303426 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3846107 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.446399159 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.386059377 seconds)
  done (took 152.858249066 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.337856073 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.341684575 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.335416946 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.350707183 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.334940559 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.334017106 seconds)
  done (took 9.294608003 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.336716712 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.334454666 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.332860728 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.332989015 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.334736247 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.333867722 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.334897306 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334650684 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.338421136 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.333769267 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.336150048 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.335177729 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.334139 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.333782376 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.333736736 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.332046588 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.334468223 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.328600192 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.332188578 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33388034 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.436823834 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.333995459 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332397204 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.334729117 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.340832722 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.331616225 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342029051 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.335294245 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.33297075 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.343051897 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.336876376 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.335638226 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.335683095 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.340470904 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.338225703 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.334916937 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337891856 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.336009695 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.331072812 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.337093753 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.337717913 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334792471 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.334395118 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.336534765 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.33694779 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.339586352 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.341537742 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341863638 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.335312834 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.336617089 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.337853562 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.335561873 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.337880728 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.336948895 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.337120518 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339318977 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.343053556 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.336680702 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.334486739 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.337207555 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.337400391 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.338451244 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.338209232 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.340207086 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.332990806 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.337441919 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.337130863 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.341315098 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335709593 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.336305187 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.336896296 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.333091825 seconds)
  done (took 98.570018052 seconds)
done (took 420.860956653 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.742761775 seconds)
  done (took 8.006939561 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.402268766 seconds)
  done (took 7.670610254 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.654358112 seconds)
  done (took 20.926074061 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.424998654 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.386535883 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.330686271 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.332365789 seconds)
  done (took 26.741531684 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.695780725 seconds)
  done (took 7.962558839 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.330043355 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.337080107 seconds)
  done (took 13.934891898 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.949806842 seconds)
  done (took 8.217808923 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.86381112 seconds)
  done (took 8.137303414 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.355557002 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.364638939 seconds)
  done (took 14.254303523 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.316527929 seconds)
  done (took 7.583995621 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.658222742 seconds)
  done (took 8.926326609 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.333567405 seconds)
  done (took 7.602032634 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.399878336 seconds)
  done (took 7.667003726 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.028756589 seconds)
  done (took 9.296053518 seconds)
done (took 158.193922568 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.331325442 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.329781667 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.330660523 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.33027017 seconds)
  done (took 26.58783628 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.371716109 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.370685358 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.374348724 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.382059574 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.37324273 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.370288601 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.36339515 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.363981977 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.381737571 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.375466318 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.389584467 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.374350084 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.372558087 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.363004682 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.373148258 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.374119412 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.384664135 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.37476033 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.364923944 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.37529268 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.340373543 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.382896935 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.376166803 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.340134945 seconds)
  done (took 34.181137393 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.54539647 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.411090067 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.491986154 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.392883639 seconds)
  done (took 7.110169951 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.391130916 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.392694734 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.407744575 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.445453004 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.469451309 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.40450153 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.366608312 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.361049378 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.347972662 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.392728767 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.467343917 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.408974469 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.510078119 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.339560829 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.526127229 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.339030081 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.339399085 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.391651786 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.44352683 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.458397728 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.338912014 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.391492052 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.394979102 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.408926389 seconds)
  done (took 35.007003711 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.33841357 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.347744158 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.344887232 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.338737503 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.338719328 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.338985403 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.345618612 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.341761936 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.359535563 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.340228163 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.339082162 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.338245954 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.338529822 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.339943207 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.339027115 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.350792789 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.353073145 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.340174679 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.342704688 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.345215803 seconds)
  done (took 28.131540212 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.33463378 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.22112248 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.685698541 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.590141063 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.334398736 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.332636532 seconds)
  done (took 27.768675087 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.408013589 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.543368705 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.341260764 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.694907704 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.768745971 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.340196868 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.341574892 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.574313754 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.882918618 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.88351312 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.398248011 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.410325695 seconds)
  done (took 19.86019288 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.349128611 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.335455539 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.336208092 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.352583096 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.397977888 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.347248474 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.348694725 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.33568757 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.398095152 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.401033456 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.346101388 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.399156421 seconds)
  done (took 37.620759904 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424176685 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389118827 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.345409303 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200589462 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.721496006 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546961519 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.209948745 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.770510192 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.342704757 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611024676 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342526189 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428791429 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594873741 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351515021 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338982783 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.36149273 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566389422 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835371536 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341110825 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.317223678 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365056159 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343843132 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.421145724 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.367653337 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551267368 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476148884 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.600422157 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338051473 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617216735 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349874906 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350458011 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338501081 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612606254 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0129281 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431685165 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348656489 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.18980889 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.055762466 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.337425616 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.392883692 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34793677 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342235491 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349609768 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338715679 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.27342276 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340963304 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778069709 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.348422964 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.050846201 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339974543 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349369084 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434605852 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.34253249 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.16222449 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416804603 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338920231 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.338146408 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346532507 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911458138 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.848749135 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35681053 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.274446129 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.804210072 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.405136711 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984277755 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.442977014 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.345550546 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345008365 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276256688 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.383707431 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358471299 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485231756 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.359306302 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003772147 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075549951 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.34964538 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272836677 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907337735 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341840059 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.27835738 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571080473 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34166942 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281741062 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.290593254 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.276545081 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068680601 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351850641 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.777861205 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351720185 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.775878571 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.353949284 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359617943 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365048268 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.566668846 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.226397269 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34202895 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.343423226 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466559398 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362627759 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.775378891 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277663133 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.343856449 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598981111 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.553283642 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351124475 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371058745 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54560118 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344507578 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.373834532 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34262001 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.353699341 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.921093178 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355498069 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.858449985 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360962957 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343298534 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109382329 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345617439 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.445496918 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35427289 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594502353 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.143500431 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34617866 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425574913 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351639097 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.343482208 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.430695215 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865241347 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.344015517 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.345649279 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358774543 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.355794743 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.345243291 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307206279 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.346518632 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344278301 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.343960379 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569432232 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345679151 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620779437 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279591847 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485861909 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.444997983 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.565939841 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.526610165 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.340792181 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604948261 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352233211 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353840744 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356722713 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364960993 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444682823 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368858684 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.357456716 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603408213 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.347068441 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.34923143 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.436788098 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348730823 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345987367 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.805547893 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240710127 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925937261 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333285167 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349211294 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240660665 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.360065348 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410390152 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352083452 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.356609561 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.175888582 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.289397217 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.351879323 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.356497346 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57377785 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358022678 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.342562495 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42440466 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.543465439 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929703599 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360689179 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.282496792 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.059548944 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.039395143 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346692352 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28195564 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34587629 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355346254 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357387041 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.988528876 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924714045 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348916316 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.326422317 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.353338634 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357922456 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.350485466 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34608278 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.149265335 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.855912896 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349321038 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.358978668 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490407634 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.360991101 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281772299 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.351557412 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351079628 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346620338 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347733041 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379985458 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.332208469 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911203179 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609296225 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.158590291 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360774225 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.444692373 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.378443 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.351261302 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359584016 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349560129 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.368618935 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353909503 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.359886932 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.406565387 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.030203525 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91659627 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101225688 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876045159 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330842645 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.35065621 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350169782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.787776192 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285440759 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909021536 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53837924 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789433025 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308371657 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548104169 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.52444317 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116088693 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360245416 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578930207 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327069751 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.352333379 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362786677 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559655114 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383918586 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.349582744 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.278924124 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.634566818 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611674441 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357017938 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427300235 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788888957 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362957061 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353598162 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.348010106 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.730172136 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524577775 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.066619853 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.52825751 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348336408 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.35366766 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908294734 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356846157 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.580701434 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983977706 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367026003 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.550994536 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29216275 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.360453176 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.36006823 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.351591172 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.667973386 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.350384 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.607072144 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362587219 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286140094 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350879653 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879653956 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.206880173 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.35642752 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350982815 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114255568 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367467267 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63138355 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.353683475 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.160337651 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359222301 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.286079625 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286669479 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.043829256 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356207473 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326508671 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847291166 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.757705985 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.420534491 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384822366 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20059044 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.607515271 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.364186771 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934099671 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581510774 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.268979436 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373968944 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.451639937 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355796951 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.340718337 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353790277 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589028265 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241510756 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.576853378 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.399178893 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.259795646 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.352285657 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566625729 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35285602 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359668888 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598955257 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.064993102 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.373669595 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097517202 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379380747 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358840956 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2775093 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.812712426 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360890976 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432929501 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364830238 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.365147941 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.364077422 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526760708 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356926749 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355496957 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.366321632 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446687787 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.888114653 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.152885922 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.357785292 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943555749 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117494997 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.941643543 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368190787 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354987524 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361694478 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28905204 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501881978 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.585932891 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628871993 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480995102 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.894663203 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378036272 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356361823 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356649739 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581042786 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630088611 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.256586152 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356939101 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.370519697 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.355463955 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365665256 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.567550046 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860209046 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943633317 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47019543 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.35603048 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.790470704 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634515262 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356224796 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355577061 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951137269 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.363671318 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.743855763 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.363744669 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355142464 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505158548 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366979399 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033104429 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.366497678 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.515242827 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.129534911 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.369749039 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6140375 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.827663412 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.366094751 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943874641 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064846229 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623001731 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423776847 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368568207 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.466854665 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503101391 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.366125622 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357739172 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359029106 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205684783 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.067010755 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.369100562 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948232744 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624453924 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.356440965 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.366242281 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379676575 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.369378388 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582863623 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096141798 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585772146 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366458337 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364136341 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.174960088 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948973532 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371269128 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293963133 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.359138487 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601438707 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596292264 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379575831 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.811007692 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.06910732 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933136159 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.334195046 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378150754 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359228129 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.084474527 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947532545 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.16480254 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864726937 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921486485 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365624602 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636460991 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.364554047 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359058233 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63556198 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.364501088 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359669985 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37090096 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.949448436 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13939116 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.376174362 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.39371669 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.296029849 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707500079 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041567963 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297656422 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367457004 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.546893775 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361228268 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48499054 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370075651 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.367837211 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365425498 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.115771193 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647149676 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.363379518 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.354834463 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.347422877 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361174898 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36761444 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628641761 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362751706 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.036367266 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.711674568 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.618532781 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.366830176 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.346996823 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.365841048 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361946751 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.359810781 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.568629543 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.989286125 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94504395 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.373088351 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.373460445 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363961052 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.579047295 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573812543 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364214675 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372518702 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370322703 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376679539 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.267840987 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.87645627 seconds)
  done (took 1605.485251268 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.373637744 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.398965404 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.371840023 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.427363249 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.402938313 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.4812917 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.377026645 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.477015615 seconds)
  done (took 52.607220615 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.365763985 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.579960727 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.394413787 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.376686357 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.370290398 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.376721655 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.802321602 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.366417765 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.368880582 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.372873888 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.37435996 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.364190361 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.000781295 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.369687788 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.365747058 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.348089463 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.368665048 seconds)
  done (took 65.869665128 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.362965928 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.403956018 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.470982497 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.364543535 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.550655876 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.378537315 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.37628528 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.437964733 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.362251623 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.745874622 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.015615983 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.398105576 seconds)
  done (took 80.166432559 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.371973941 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.372140634 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.37243263 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.371685586 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.372627732 seconds)
  done (took 8.159083854 seconds)
done (took 2029.824060786 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.706654527 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.066996617 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.043005725 seconds)
  done (took 5.408535982 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.510100582 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.560660134 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.727181663 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.716787627 seconds)
  done (took 7.813292081 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.640907938 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.761520584 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.557204445 seconds)
  done (took 6.258068709 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.797795665 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.362778136 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.487100476 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.360280865 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.363710408 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.361122976 seconds)
  done (took 20.384730307 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.367769992 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.369355997 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.367542112 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.371217686 seconds)
  done (took 6.775179965 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.349234316 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.137123899 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.351247333 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.36493014 seconds)
  done (took 18.500901154 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.114257839 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.125130576 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.112179707 seconds)
  done (took 7.650829121 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.363525031 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.208747971 seconds)
  done (took 9.869821589 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.669465548 seconds)
  done (took 2.968977287 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.499950275 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.637363289 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.426872032 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.36723796 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.433189306 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.235286155 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.032597136 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.605744547 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.338382376 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.577848671 seconds)
  done (took 28.454756017 seconds)
done (took 127.738574111 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.178633857 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.764915131 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.565191343 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.18695491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.597795737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.566322687 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.770763034 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.157413553 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.672974246 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.643980387 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.191061241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.59654829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.941110154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.768520036 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.938443421 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.76755879 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.600443843 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.426648376 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.85876464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.076977352 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.76729145 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.790503587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.017903499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.97993508 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.602575483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.519761126 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.368847377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.766780381 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.013362541 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.389286098 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.518042542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.252111724 seconds)
  done (took 193.556886542 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.368394848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.390493444 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.365439878 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.36524551 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.379557567 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.367933099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.366881044 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.365670878 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.379887822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.368642754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.364203404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.370235084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.367431054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.377569979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.365219003 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.379952362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.369790342 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.368871004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.384440261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.366913665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.366343357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.366253375 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.387213324 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.365516534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.374848268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.365983342 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.374382246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.377981644 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.368776733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.366422224 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.386106301 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.368575209 seconds)
  done (took 205.2047513 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.367559019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.394446006 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.377255678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.367050198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.366368255 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.375342648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.368753865 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.377315263 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.378470507 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.36603801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.36594596 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.366075708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.369092856 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.367201979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.369146074 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.381021666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.366632828 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.394267833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.36995783 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.371433813 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.382636132 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.366777745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.366894899 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.367121805 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.396514271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.369100854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.379046821 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.367638594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.367527489 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.383062807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.370594606 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.396504056 seconds)
  done (took 205.278362378 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.57488177 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.377107785 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.379871293 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.33529309 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.378373779 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.376819635 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.37601707 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.641834648 seconds)
  done (took 14.744741624 seconds)
done (took 620.086787884 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.665345237 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.385068489 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.576761646 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.398171814 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.154282995 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.397899649 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.399484041 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.572655 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.29864642 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.572993704 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.631223989 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.393546227 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.773148871 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.393806726 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.652595016 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.493539556 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.278731837 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.36930274 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.710733641 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.921047249 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.65241796 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.912616772 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.572216992 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.299605617 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.773666046 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.911341535 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.148004878 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.271057315 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.398482956 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.716485035 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.081853608 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.407052356 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.458453698 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.44036211 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.49499954 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.479344205 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.386091796 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.438491592 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.58269996 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.672088597 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.931018401 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.112202071 seconds)
  done (took 93.485373274 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.370372713 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.369367889 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.369266231 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.369476307 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.370434835 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.367912392 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.367020495 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.36882311 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.369079318 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.368509615 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.370224767 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.370584442 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.368816019 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.371130188 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.369269548 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.368440419 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.37025419 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.371780215 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.368129912 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.369483866 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.369130375 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.369914777 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.370278913 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.370360563 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.369877316 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.370682272 seconds)
  done (took 36.918426704 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.381422116 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.620100601 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.802488282 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.387095649 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.381462846 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.386634137 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.461439141 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.384054864 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.385391397 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.386287845 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.540720153 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.386308333 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.419991963 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.807467802 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.385176675 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.384184804 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.382451023 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.383147368 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.62786534 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.392466923 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.463627914 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.383997805 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.462623434 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.395118663 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.385960159 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385059192 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.387298146 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.885573167 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.386953803 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.542337259 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.162559857 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.460670166 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.837677875 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.82258104 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.164385625 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.38563818 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.386312698 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.548340647 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.386130607 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.383516668 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.461783716 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.385791173 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.812892557 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.017363249 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.401708524 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.383978097 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.909202064 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.548554823 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.634097532 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.391293415 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.833483733 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.387174564 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.384724539 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.384459279 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.633699961 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.389694471 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.383841371 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.925949857 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.388395665 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.462821337 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.385381823 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.385062265 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.644409216 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.384510984 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.625211535 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.386085636 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.3926939 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.385982524 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.814424753 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.387402373 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.042305248 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.401082298 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.385693305 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.546475874 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.630233597 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.941084906 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.387988721 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.648216523 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.849220888 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.462917068 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.389477737 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.872264574 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.467209652 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.391222629 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.388714534 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.387863735 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.385668025 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.428198868 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.461942374 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.967381618 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031444687 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.945320988 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.466122145 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.398506705 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.386989018 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.929553655 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.388936332 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.385995736 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.814014373 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.043406442 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.400440318 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.395344117 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.024866945 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.404011428 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.466402603 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.391987503 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.841816312 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.389792039 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.432028146 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.386435672 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.39570191 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.391088143 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.466078778 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.390829491 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.387186446 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.019101784 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.566193037 seconds)
  done (took 181.70202846 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.382709793 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.377718662 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.379985835 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.389838759 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.380943723 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.385536373 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.380245648 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.380743454 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.385559891 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.381218061 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.380387828 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.382054837 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.383341797 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.388570202 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.40801285 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.387243499 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.993385386 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.380612872 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.393719058 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.378736308 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.191759982 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.383867204 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.381034012 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.382029873 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.381096218 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.384022456 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.38422127 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.401506846 seconds)
  done (took 153.506366359 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.388972437 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.977557746 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.390230097 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.520185857 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.408792511 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.386057291 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.51966137 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.448627325 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.390764 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.385732487 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.387936127 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.705343163 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.391812552 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.923439158 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.580258187 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.523430201 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.925855207 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391692246 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.387575041 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.387788813 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.524097895 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.397384237 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.704328643 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.979543105 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.392559385 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.979861632 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.3791885 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.390283974 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.388106493 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.980171613 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.388401542 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.705686005 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.468722402 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.451353701 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.981944816 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.926419564 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.925806109 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.537852579 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.390504875 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.387782222 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.388782417 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.378963043 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.980936332 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.390808314 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.390410485 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.973102183 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.407711494 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.390916084 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.398057638 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.387238263 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.451181832 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.451945813 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.710497229 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.986336697 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.467819725 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.412060911 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.522863787 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.774627114 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.393538231 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.926614105 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.377689374 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.980786795 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.394601358 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.382305994 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.39062943 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.395202211 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.541090396 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.52437605 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.925382706 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.393801366 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.926873026 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.54301108 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.390435773 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.39071919 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.39365916 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.962842114 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.927066337 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.543520193 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.52803877 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.585578088 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.381706112 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.390793772 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.381507414 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.469380738 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.39050826 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.959374455 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.926587854 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.392880691 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.393806634 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.392179678 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.393691136 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.569362896 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.963290647 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.468404585 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.923917404 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.712470739 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.696532281 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.392419823 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.452670954 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.3918988 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.699630144 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.392078746 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.451819022 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.841363741 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.70019366 seconds)
  done (took 165.832938378 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.634869299 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.607349392 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.483665742 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.506700687 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.922525931 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.966391688 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.614462413 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.515524286 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.502021009 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.639125919 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.59553753 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.486503409 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.581958405 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.476357989 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.102564552 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.465977673 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.489165813 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.52271594 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.506767027 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.437684468 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.017946253 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.676622405 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.564956862 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.556442712 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.488211273 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.204086485 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.938562613 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.910648137 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.564415057 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.691614691 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.915986583 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.540841514 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.360043182 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.051631967 seconds)
  done (took 66.861782316 seconds)
done (took 699.613169627 seconds)
SAVING RESULT...
DONE!
